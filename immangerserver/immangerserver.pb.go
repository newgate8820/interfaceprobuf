// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: immangerserver.proto

//
//为管理后台提供调用服务

package immangerserver

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 错误代码的返回
type ErrorCode int32

const (
	ErrorCode_Sucessful   ErrorCode = 0 //操作成功
	ErrorCode_Failed      ErrorCode = 1 //操作失败
	ErrorCode_INTERNALERR ErrorCode = 2 //服务器内部错误
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0: "Sucessful",
		1: "Failed",
		2: "INTERNALERR",
	}
	ErrorCode_value = map[string]int32{
		"Sucessful":   0,
		"Failed":      1,
		"INTERNALERR": 2,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_immangerserver_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_immangerserver_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_immangerserver_proto_rawDescGZIP(), []int{0}
}

// 删除两部验证
type DelTwoCheckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"` //要删除两步验证
}

func (x *DelTwoCheckReq) Reset() {
	*x = DelTwoCheckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_immangerserver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelTwoCheckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTwoCheckReq) ProtoMessage() {}

func (x *DelTwoCheckReq) ProtoReflect() protoreflect.Message {
	mi := &file_immangerserver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTwoCheckReq.ProtoReflect.Descriptor instead.
func (*DelTwoCheckReq) Descriptor() ([]byte, []int) {
	return file_immangerserver_proto_rawDescGZIP(), []int{0}
}

func (x *DelTwoCheckReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

// 清楚用户聊天消息
type ClearUserPeerHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"` //被删除历史的用户
}

func (x *ClearUserPeerHistoryReq) Reset() {
	*x = ClearUserPeerHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_immangerserver_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearUserPeerHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearUserPeerHistoryReq) ProtoMessage() {}

func (x *ClearUserPeerHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_immangerserver_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearUserPeerHistoryReq.ProtoReflect.Descriptor instead.
func (*ClearUserPeerHistoryReq) Descriptor() ([]byte, []int) {
	return file_immangerserver_proto_rawDescGZIP(), []int{1}
}

func (x *ClearUserPeerHistoryReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

// 将指定用户创建的群转移到目标用户请求
type ConverOwernsGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromPhone string `protobuf:"bytes,1,opt,name=fromPhone,proto3" json:"fromPhone,omitempty"` //原来群拥有者
	ToPhone   string `protobuf:"bytes,2,opt,name=toPhone,proto3" json:"toPhone,omitempty"`     //转移到用户的
}

func (x *ConverOwernsGroupReq) Reset() {
	*x = ConverOwernsGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_immangerserver_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConverOwernsGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConverOwernsGroupReq) ProtoMessage() {}

func (x *ConverOwernsGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_immangerserver_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConverOwernsGroupReq.ProtoReflect.Descriptor instead.
func (*ConverOwernsGroupReq) Descriptor() ([]byte, []int) {
	return file_immangerserver_proto_rawDescGZIP(), []int{2}
}

func (x *ConverOwernsGroupReq) GetFromPhone() string {
	if x != nil {
		return x.FromPhone
	}
	return ""
}

func (x *ConverOwernsGroupReq) GetToPhone() string {
	if x != nil {
		return x.ToPhone
	}
	return ""
}

// 解散群请求
type DeleteGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId int32 `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"` //需要解散的群的ID
}

func (x *DeleteGroupReq) Reset() {
	*x = DeleteGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_immangerserver_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupReq) ProtoMessage() {}

func (x *DeleteGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_immangerserver_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupReq.ProtoReflect.Descriptor instead.
func (*DeleteGroupReq) Descriptor() ([]byte, []int) {
	return file_immangerserver_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteGroupReq) GetChannelId() int32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

// 删除帐号请求
type DelUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserPhone string `protobuf:"bytes,1,opt,name=userPhone,proto3" json:"userPhone,omitempty"` //被删除的帐号的电话号码
}

func (x *DelUserReq) Reset() {
	*x = DelUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_immangerserver_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUserReq) ProtoMessage() {}

func (x *DelUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_immangerserver_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUserReq.ProtoReflect.Descriptor instead.
func (*DelUserReq) Descriptor() ([]byte, []int) {
	return file_immangerserver_proto_rawDescGZIP(), []int{4}
}

func (x *DelUserReq) GetUserPhone() string {
	if x != nil {
		return x.UserPhone
	}
	return ""
}

// 返回结构提
type OpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err ErrorCode `protobuf:"varint,1,opt,name=err,proto3,enum=immangerserver.ErrorCode" json:"err,omitempty"` //错误码返回
}

func (x *OpResp) Reset() {
	*x = OpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_immangerserver_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpResp) ProtoMessage() {}

func (x *OpResp) ProtoReflect() protoreflect.Message {
	mi := &file_immangerserver_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpResp.ProtoReflect.Descriptor instead.
func (*OpResp) Descriptor() ([]byte, []int) {
	return file_immangerserver_proto_rawDescGZIP(), []int{5}
}

func (x *OpResp) GetErr() ErrorCode {
	if x != nil {
		return x.Err
	}
	return ErrorCode_Sucessful
}

// 踢人下线请求
type KickUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KickedPhone string `protobuf:"bytes,1,opt,name=KickedPhone,proto3" json:"KickedPhone,omitempty"` // 被踢下线的用户u
}

func (x *KickUserReq) Reset() {
	*x = KickUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_immangerserver_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickUserReq) ProtoMessage() {}

func (x *KickUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_immangerserver_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickUserReq.ProtoReflect.Descriptor instead.
func (*KickUserReq) Descriptor() ([]byte, []int) {
	return file_immangerserver_proto_rawDescGZIP(), []int{6}
}

func (x *KickUserReq) GetKickedPhone() string {
	if x != nil {
		return x.KickedPhone
	}
	return ""
}

// 禁止人登录功能/禁止用户登录时间的请求
type BannedUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserPhone  string `protobuf:"bytes,1,opt,name=UserPhone,proto3" json:"UserPhone,omitempty"`
	BannedDate int32  `protobuf:"varint,2,opt,name=bannedDate,proto3" json:"bannedDate,omitempty"` // 如果 bannedDate 为0 代表永久封禁止，， 单位为 天
}

func (x *BannedUserReq) Reset() {
	*x = BannedUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_immangerserver_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannedUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannedUserReq) ProtoMessage() {}

func (x *BannedUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_immangerserver_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannedUserReq.ProtoReflect.Descriptor instead.
func (*BannedUserReq) Descriptor() ([]byte, []int) {
	return file_immangerserver_proto_rawDescGZIP(), []int{7}
}

func (x *BannedUserReq) GetUserPhone() string {
	if x != nil {
		return x.UserPhone
	}
	return ""
}

func (x *BannedUserReq) GetBannedDate() int32 {
	if x != nil {
		return x.BannedDate
	}
	return 0
}

// 通知系统所有人的功能（公告）请求参数
type NotifyAllImUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CNNotifyMsg string `protobuf:"bytes,1,opt,name=CNNotifyMsg,proto3" json:"CNNotifyMsg,omitempty"` // 中文公告内容
	ENNotifyMsg string `protobuf:"bytes,2,opt,name=ENNotifyMsg,proto3" json:"ENNotifyMsg,omitempty"` // 英文通知内容[暂留]
}

func (x *NotifyAllImUserReq) Reset() {
	*x = NotifyAllImUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_immangerserver_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyAllImUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyAllImUserReq) ProtoMessage() {}

func (x *NotifyAllImUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_immangerserver_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyAllImUserReq.ProtoReflect.Descriptor instead.
func (*NotifyAllImUserReq) Descriptor() ([]byte, []int) {
	return file_immangerserver_proto_rawDescGZIP(), []int{8}
}

func (x *NotifyAllImUserReq) GetCNNotifyMsg() string {
	if x != nil {
		return x.CNNotifyMsg
	}
	return ""
}

func (x *NotifyAllImUserReq) GetENNotifyMsg() string {
	if x != nil {
		return x.ENNotifyMsg
	}
	return ""
}

var File_immangerserver_proto protoreflect.FileDescriptor

var file_immangerserver_proto_rawDesc = []byte{
	0x0a, 0x14, 0x69, 0x6d, 0x6d, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x69, 0x6d, 0x6d, 0x61, 0x6e, 0x67, 0x65, 0x72,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x54, 0x77, 0x6f,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x2f,
	0x0a, 0x17, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22,
	0x4e, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x4f, 0x77, 0x65, 0x72, 0x6e, 0x73, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x22,
	0x2f, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x22, 0x2a, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x35, 0x0a, 0x06,
	0x4f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x69, 0x6d, 0x6d, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x22, 0x2f, 0x0a, 0x0b, 0x4b, 0x69, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x22, 0x4d, 0x0a, 0x0d, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x22, 0x58, 0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x6c, 0x6c,
	0x49, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x4e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x43, 0x4e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x45,
	0x4e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x45, 0x4e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x73, 0x67, 0x2a, 0x37, 0x0a,
	0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x75,
	0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41,
	0x4c, 0x45, 0x52, 0x52, 0x10, 0x02, 0x32, 0xed, 0x04, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0f, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x41, 0x6c, 0x6c, 0x49, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x69, 0x6d,
	0x6d, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x41, 0x6c, 0x6c, 0x49, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x69, 0x6d, 0x6d, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x69, 0x6d, 0x6d, 0x61, 0x6e, 0x67,
	0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x69, 0x6d, 0x6d, 0x61, 0x6e, 0x67, 0x65,
	0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x41, 0x0a, 0x08, 0x4b, 0x69, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x69,
	0x6d, 0x6d, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4b, 0x69,
	0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x69, 0x6d, 0x6d, 0x61,
	0x6e, 0x67, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a,
	0x2e, 0x69, 0x6d, 0x6d, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x69, 0x6d, 0x6d,
	0x61, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x1e, 0x2e, 0x69, 0x6d, 0x6d, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x69, 0x6d, 0x6d, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x53, 0x0a,
	0x11, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x4f, 0x77, 0x65, 0x72, 0x6e, 0x73, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x24, 0x2e, 0x69, 0x6d, 0x6d, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x4f, 0x77, 0x65, 0x72, 0x6e, 0x73,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x69, 0x6d, 0x6d, 0x61, 0x6e,
	0x67, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x59, 0x0a, 0x14, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x65, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x27, 0x2e, 0x69, 0x6d, 0x6d,
	0x61, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x65, 0x61,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x69, 0x6d, 0x6d, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x47, 0x0a,
	0x0b, 0x64, 0x65, 0x6c, 0x54, 0x77, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x1e, 0x2e, 0x69,
	0x6d, 0x6d, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x64, 0x65,
	0x6c, 0x54, 0x77, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x69,
	0x6d, 0x6d, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4f, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x20, 0x5a, 0x1e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x69, 0x6d, 0x6d, 0x61, 0x6e, 0x67,
	0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_immangerserver_proto_rawDescOnce sync.Once
	file_immangerserver_proto_rawDescData = file_immangerserver_proto_rawDesc
)

func file_immangerserver_proto_rawDescGZIP() []byte {
	file_immangerserver_proto_rawDescOnce.Do(func() {
		file_immangerserver_proto_rawDescData = protoimpl.X.CompressGZIP(file_immangerserver_proto_rawDescData)
	})
	return file_immangerserver_proto_rawDescData
}

var file_immangerserver_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_immangerserver_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_immangerserver_proto_goTypes = []interface{}{
	(ErrorCode)(0),                  // 0: immangerserver.ErrorCode
	(*DelTwoCheckReq)(nil),          // 1: immangerserver.delTwoCheckReq
	(*ClearUserPeerHistoryReq)(nil), // 2: immangerserver.clearUserPeerHistoryReq
	(*ConverOwernsGroupReq)(nil),    // 3: immangerserver.converOwernsGroupReq
	(*DeleteGroupReq)(nil),          // 4: immangerserver.deleteGroupReq
	(*DelUserReq)(nil),              // 5: immangerserver.DelUserReq
	(*OpResp)(nil),                  // 6: immangerserver.OpResp
	(*KickUserReq)(nil),             // 7: immangerserver.KickUserReq
	(*BannedUserReq)(nil),           // 8: immangerserver.BannedUserReq
	(*NotifyAllImUserReq)(nil),      // 9: immangerserver.NotifyAllImUserReq
}
var file_immangerserver_proto_depIdxs = []int32{
	0, // 0: immangerserver.OpResp.err:type_name -> immangerserver.ErrorCode
	9, // 1: immangerserver.ServerService.NotifyAllImUser:input_type -> immangerserver.NotifyAllImUserReq
	8, // 2: immangerserver.ServerService.BannedUser:input_type -> immangerserver.BannedUserReq
	7, // 3: immangerserver.ServerService.KickUser:input_type -> immangerserver.KickUserReq
	5, // 4: immangerserver.ServerService.DelUser:input_type -> immangerserver.DelUserReq
	4, // 5: immangerserver.ServerService.deleteGroup:input_type -> immangerserver.deleteGroupReq
	3, // 6: immangerserver.ServerService.converOwernsGroup:input_type -> immangerserver.converOwernsGroupReq
	2, // 7: immangerserver.ServerService.clearUserPeerHistory:input_type -> immangerserver.clearUserPeerHistoryReq
	1, // 8: immangerserver.ServerService.delTwoCheck:input_type -> immangerserver.delTwoCheckReq
	6, // 9: immangerserver.ServerService.NotifyAllImUser:output_type -> immangerserver.OpResp
	6, // 10: immangerserver.ServerService.BannedUser:output_type -> immangerserver.OpResp
	6, // 11: immangerserver.ServerService.KickUser:output_type -> immangerserver.OpResp
	6, // 12: immangerserver.ServerService.DelUser:output_type -> immangerserver.OpResp
	6, // 13: immangerserver.ServerService.deleteGroup:output_type -> immangerserver.OpResp
	6, // 14: immangerserver.ServerService.converOwernsGroup:output_type -> immangerserver.OpResp
	6, // 15: immangerserver.ServerService.clearUserPeerHistory:output_type -> immangerserver.OpResp
	6, // 16: immangerserver.ServerService.delTwoCheck:output_type -> immangerserver.OpResp
	9, // [9:17] is the sub-list for method output_type
	1, // [1:9] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_immangerserver_proto_init() }
func file_immangerserver_proto_init() {
	if File_immangerserver_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_immangerserver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelTwoCheckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_immangerserver_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearUserPeerHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_immangerserver_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConverOwernsGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_immangerserver_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_immangerserver_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_immangerserver_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_immangerserver_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_immangerserver_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannedUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_immangerserver_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyAllImUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_immangerserver_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_immangerserver_proto_goTypes,
		DependencyIndexes: file_immangerserver_proto_depIdxs,
		EnumInfos:         file_immangerserver_proto_enumTypes,
		MessageInfos:      file_immangerserver_proto_msgTypes,
	}.Build()
	File_immangerserver_proto = out.File
	file_immangerserver_proto_rawDesc = nil
	file_immangerserver_proto_goTypes = nil
	file_immangerserver_proto_depIdxs = nil
}
