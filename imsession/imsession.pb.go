// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: imsession.proto

package imsession

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SetLangCodeResult_ResultCode int32

const (
	SetLangCodeResult_Success       SetLangCodeResult_ResultCode = 0
	SetLangCodeResult_InternalError SetLangCodeResult_ResultCode = 1
)

// Enum value maps for SetLangCodeResult_ResultCode.
var (
	SetLangCodeResult_ResultCode_name = map[int32]string{
		0: "Success",
		1: "InternalError",
	}
	SetLangCodeResult_ResultCode_value = map[string]int32{
		"Success":       0,
		"InternalError": 1,
	}
)

func (x SetLangCodeResult_ResultCode) Enum() *SetLangCodeResult_ResultCode {
	p := new(SetLangCodeResult_ResultCode)
	*p = x
	return p
}

func (x SetLangCodeResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetLangCodeResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[0].Descriptor()
}

func (SetLangCodeResult_ResultCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[0]
}

func (x SetLangCodeResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetLangCodeResult_ResultCode.Descriptor instead.
func (SetLangCodeResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{3, 0}
}

type GetLangCodeResult_ResultCode int32

const (
	GetLangCodeResult_Success       GetLangCodeResult_ResultCode = 0
	GetLangCodeResult_InternalError GetLangCodeResult_ResultCode = 1
)

// Enum value maps for GetLangCodeResult_ResultCode.
var (
	GetLangCodeResult_ResultCode_name = map[int32]string{
		0: "Success",
		1: "InternalError",
	}
	GetLangCodeResult_ResultCode_value = map[string]int32{
		"Success":       0,
		"InternalError": 1,
	}
)

func (x GetLangCodeResult_ResultCode) Enum() *GetLangCodeResult_ResultCode {
	p := new(GetLangCodeResult_ResultCode)
	*p = x
	return p
}

func (x GetLangCodeResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetLangCodeResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[1].Descriptor()
}

func (GetLangCodeResult_ResultCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[1]
}

func (x GetLangCodeResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetLangCodeResult_ResultCode.Descriptor instead.
func (GetLangCodeResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{5, 0}
}

type SessionInitConnectionResult_ResultCode int32

const (
	SessionInitConnectionResult_Success       SessionInitConnectionResult_ResultCode = 0
	SessionInitConnectionResult_InternalError SessionInitConnectionResult_ResultCode = 1
)

// Enum value maps for SessionInitConnectionResult_ResultCode.
var (
	SessionInitConnectionResult_ResultCode_name = map[int32]string{
		0: "Success",
		1: "InternalError",
	}
	SessionInitConnectionResult_ResultCode_value = map[string]int32{
		"Success":       0,
		"InternalError": 1,
	}
)

func (x SessionInitConnectionResult_ResultCode) Enum() *SessionInitConnectionResult_ResultCode {
	p := new(SessionInitConnectionResult_ResultCode)
	*p = x
	return p
}

func (x SessionInitConnectionResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionInitConnectionResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[2].Descriptor()
}

func (SessionInitConnectionResult_ResultCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[2]
}

func (x SessionInitConnectionResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionInitConnectionResult_ResultCode.Descriptor instead.
func (SessionInitConnectionResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{11, 0}
}

type SessionUpdateRegisterDeviceResult_ResultCode int32

const (
	SessionUpdateRegisterDeviceResult_Success       SessionUpdateRegisterDeviceResult_ResultCode = 0
	SessionUpdateRegisterDeviceResult_InternalError SessionUpdateRegisterDeviceResult_ResultCode = 1
)

// Enum value maps for SessionUpdateRegisterDeviceResult_ResultCode.
var (
	SessionUpdateRegisterDeviceResult_ResultCode_name = map[int32]string{
		0: "Success",
		1: "InternalError",
	}
	SessionUpdateRegisterDeviceResult_ResultCode_value = map[string]int32{
		"Success":       0,
		"InternalError": 1,
	}
)

func (x SessionUpdateRegisterDeviceResult_ResultCode) Enum() *SessionUpdateRegisterDeviceResult_ResultCode {
	p := new(SessionUpdateRegisterDeviceResult_ResultCode)
	*p = x
	return p
}

func (x SessionUpdateRegisterDeviceResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionUpdateRegisterDeviceResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[3].Descriptor()
}

func (SessionUpdateRegisterDeviceResult_ResultCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[3]
}

func (x SessionUpdateRegisterDeviceResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionUpdateRegisterDeviceResult_ResultCode.Descriptor instead.
func (SessionUpdateRegisterDeviceResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{13, 0}
}

type SessionUpdateRegisterHuaweiDeviceResult_ResultCode int32

const (
	SessionUpdateRegisterHuaweiDeviceResult_Success       SessionUpdateRegisterHuaweiDeviceResult_ResultCode = 0
	SessionUpdateRegisterHuaweiDeviceResult_InternalError SessionUpdateRegisterHuaweiDeviceResult_ResultCode = 1
)

// Enum value maps for SessionUpdateRegisterHuaweiDeviceResult_ResultCode.
var (
	SessionUpdateRegisterHuaweiDeviceResult_ResultCode_name = map[int32]string{
		0: "Success",
		1: "InternalError",
	}
	SessionUpdateRegisterHuaweiDeviceResult_ResultCode_value = map[string]int32{
		"Success":       0,
		"InternalError": 1,
	}
)

func (x SessionUpdateRegisterHuaweiDeviceResult_ResultCode) Enum() *SessionUpdateRegisterHuaweiDeviceResult_ResultCode {
	p := new(SessionUpdateRegisterHuaweiDeviceResult_ResultCode)
	*p = x
	return p
}

func (x SessionUpdateRegisterHuaweiDeviceResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionUpdateRegisterHuaweiDeviceResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[4].Descriptor()
}

func (SessionUpdateRegisterHuaweiDeviceResult_ResultCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[4]
}

func (x SessionUpdateRegisterHuaweiDeviceResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionUpdateRegisterHuaweiDeviceResult_ResultCode.Descriptor instead.
func (SessionUpdateRegisterHuaweiDeviceResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{15, 0}
}

type SessionUpdateUserPhoneResult_ResultCode int32

const (
	SessionUpdateUserPhoneResult_Success       SessionUpdateUserPhoneResult_ResultCode = 0
	SessionUpdateUserPhoneResult_InternalError SessionUpdateUserPhoneResult_ResultCode = 1
)

// Enum value maps for SessionUpdateUserPhoneResult_ResultCode.
var (
	SessionUpdateUserPhoneResult_ResultCode_name = map[int32]string{
		0: "Success",
		1: "InternalError",
	}
	SessionUpdateUserPhoneResult_ResultCode_value = map[string]int32{
		"Success":       0,
		"InternalError": 1,
	}
)

func (x SessionUpdateUserPhoneResult_ResultCode) Enum() *SessionUpdateUserPhoneResult_ResultCode {
	p := new(SessionUpdateUserPhoneResult_ResultCode)
	*p = x
	return p
}

func (x SessionUpdateUserPhoneResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionUpdateUserPhoneResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[5].Descriptor()
}

func (SessionUpdateUserPhoneResult_ResultCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[5]
}

func (x SessionUpdateUserPhoneResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionUpdateUserPhoneResult_ResultCode.Descriptor instead.
func (SessionUpdateUserPhoneResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{17, 0}
}

type SessionUpdateOnHandshakeDoneResult_FailCode int32

const (
	SessionUpdateOnHandshakeDoneResult_Internal       SessionUpdateOnHandshakeDoneResult_FailCode = 0
	SessionUpdateOnHandshakeDoneResult_DuplicateKeyid SessionUpdateOnHandshakeDoneResult_FailCode = 1
)

// Enum value maps for SessionUpdateOnHandshakeDoneResult_FailCode.
var (
	SessionUpdateOnHandshakeDoneResult_FailCode_name = map[int32]string{
		0: "Internal",
		1: "DuplicateKeyid",
	}
	SessionUpdateOnHandshakeDoneResult_FailCode_value = map[string]int32{
		"Internal":       0,
		"DuplicateKeyid": 1,
	}
)

func (x SessionUpdateOnHandshakeDoneResult_FailCode) Enum() *SessionUpdateOnHandshakeDoneResult_FailCode {
	p := new(SessionUpdateOnHandshakeDoneResult_FailCode)
	*p = x
	return p
}

func (x SessionUpdateOnHandshakeDoneResult_FailCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionUpdateOnHandshakeDoneResult_FailCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[6].Descriptor()
}

func (SessionUpdateOnHandshakeDoneResult_FailCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[6]
}

func (x SessionUpdateOnHandshakeDoneResult_FailCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionUpdateOnHandshakeDoneResult_FailCode.Descriptor instead.
func (SessionUpdateOnHandshakeDoneResult_FailCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{23, 0}
}

type SessionIncQtsResult_ResultCode int32

const (
	SessionIncQtsResult_Success       SessionIncQtsResult_ResultCode = 0
	SessionIncQtsResult_InternalError SessionIncQtsResult_ResultCode = 1
)

// Enum value maps for SessionIncQtsResult_ResultCode.
var (
	SessionIncQtsResult_ResultCode_name = map[int32]string{
		0: "Success",
		1: "InternalError",
	}
	SessionIncQtsResult_ResultCode_value = map[string]int32{
		"Success":       0,
		"InternalError": 1,
	}
)

func (x SessionIncQtsResult_ResultCode) Enum() *SessionIncQtsResult_ResultCode {
	p := new(SessionIncQtsResult_ResultCode)
	*p = x
	return p
}

func (x SessionIncQtsResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionIncQtsResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[7].Descriptor()
}

func (SessionIncQtsResult_ResultCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[7]
}

func (x SessionIncQtsResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionIncQtsResult_ResultCode.Descriptor instead.
func (SessionIncQtsResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{25, 0}
}

type SessionTerminateByKeyIdResult_ResultCode int32

const (
	SessionTerminateByKeyIdResult_Success       SessionTerminateByKeyIdResult_ResultCode = 0
	SessionTerminateByKeyIdResult_InternalError SessionTerminateByKeyIdResult_ResultCode = 1
)

// Enum value maps for SessionTerminateByKeyIdResult_ResultCode.
var (
	SessionTerminateByKeyIdResult_ResultCode_name = map[int32]string{
		0: "Success",
		1: "InternalError",
	}
	SessionTerminateByKeyIdResult_ResultCode_value = map[string]int32{
		"Success":       0,
		"InternalError": 1,
	}
)

func (x SessionTerminateByKeyIdResult_ResultCode) Enum() *SessionTerminateByKeyIdResult_ResultCode {
	p := new(SessionTerminateByKeyIdResult_ResultCode)
	*p = x
	return p
}

func (x SessionTerminateByKeyIdResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionTerminateByKeyIdResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[8].Descriptor()
}

func (SessionTerminateByKeyIdResult_ResultCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[8]
}

func (x SessionTerminateByKeyIdResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionTerminateByKeyIdResult_ResultCode.Descriptor instead.
func (SessionTerminateByKeyIdResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{27, 0}
}

type SessionTerminateExceptKeyIdResult_ResultCode int32

const (
	SessionTerminateExceptKeyIdResult_Success       SessionTerminateExceptKeyIdResult_ResultCode = 0
	SessionTerminateExceptKeyIdResult_InternalError SessionTerminateExceptKeyIdResult_ResultCode = 1
)

// Enum value maps for SessionTerminateExceptKeyIdResult_ResultCode.
var (
	SessionTerminateExceptKeyIdResult_ResultCode_name = map[int32]string{
		0: "Success",
		1: "InternalError",
	}
	SessionTerminateExceptKeyIdResult_ResultCode_value = map[string]int32{
		"Success":       0,
		"InternalError": 1,
	}
)

func (x SessionTerminateExceptKeyIdResult_ResultCode) Enum() *SessionTerminateExceptKeyIdResult_ResultCode {
	p := new(SessionTerminateExceptKeyIdResult_ResultCode)
	*p = x
	return p
}

func (x SessionTerminateExceptKeyIdResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionTerminateExceptKeyIdResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[9].Descriptor()
}

func (SessionTerminateExceptKeyIdResult_ResultCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[9]
}

func (x SessionTerminateExceptKeyIdResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionTerminateExceptKeyIdResult_ResultCode.Descriptor instead.
func (SessionTerminateExceptKeyIdResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{29, 0}
}

type SessionUpdateLogoutResult_ResultCode int32

const (
	SessionUpdateLogoutResult_Success       SessionUpdateLogoutResult_ResultCode = 0
	SessionUpdateLogoutResult_InternalError SessionUpdateLogoutResult_ResultCode = 1
)

// Enum value maps for SessionUpdateLogoutResult_ResultCode.
var (
	SessionUpdateLogoutResult_ResultCode_name = map[int32]string{
		0: "Success",
		1: "InternalError",
	}
	SessionUpdateLogoutResult_ResultCode_value = map[string]int32{
		"Success":       0,
		"InternalError": 1,
	}
)

func (x SessionUpdateLogoutResult_ResultCode) Enum() *SessionUpdateLogoutResult_ResultCode {
	p := new(SessionUpdateLogoutResult_ResultCode)
	*p = x
	return p
}

func (x SessionUpdateLogoutResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionUpdateLogoutResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[10].Descriptor()
}

func (SessionUpdateLogoutResult_ResultCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[10]
}

func (x SessionUpdateLogoutResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionUpdateLogoutResult_ResultCode.Descriptor instead.
func (SessionUpdateLogoutResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{31, 0}
}

type AddBanDeviceResult_ResultCode int32

const (
	AddBanDeviceResult_Success       AddBanDeviceResult_ResultCode = 0
	AddBanDeviceResult_InternalError AddBanDeviceResult_ResultCode = 1
)

// Enum value maps for AddBanDeviceResult_ResultCode.
var (
	AddBanDeviceResult_ResultCode_name = map[int32]string{
		0: "Success",
		1: "InternalError",
	}
	AddBanDeviceResult_ResultCode_value = map[string]int32{
		"Success":       0,
		"InternalError": 1,
	}
)

func (x AddBanDeviceResult_ResultCode) Enum() *AddBanDeviceResult_ResultCode {
	p := new(AddBanDeviceResult_ResultCode)
	*p = x
	return p
}

func (x AddBanDeviceResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddBanDeviceResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[11].Descriptor()
}

func (AddBanDeviceResult_ResultCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[11]
}

func (x AddBanDeviceResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddBanDeviceResult_ResultCode.Descriptor instead.
func (AddBanDeviceResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{35, 0}
}

type SessionDeleteByKeyIdResult_ResultCode int32

const (
	SessionDeleteByKeyIdResult_Success       SessionDeleteByKeyIdResult_ResultCode = 0
	SessionDeleteByKeyIdResult_InternalError SessionDeleteByKeyIdResult_ResultCode = 1
)

// Enum value maps for SessionDeleteByKeyIdResult_ResultCode.
var (
	SessionDeleteByKeyIdResult_ResultCode_name = map[int32]string{
		0: "Success",
		1: "InternalError",
	}
	SessionDeleteByKeyIdResult_ResultCode_value = map[string]int32{
		"Success":       0,
		"InternalError": 1,
	}
)

func (x SessionDeleteByKeyIdResult_ResultCode) Enum() *SessionDeleteByKeyIdResult_ResultCode {
	p := new(SessionDeleteByKeyIdResult_ResultCode)
	*p = x
	return p
}

func (x SessionDeleteByKeyIdResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionDeleteByKeyIdResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[12].Descriptor()
}

func (SessionDeleteByKeyIdResult_ResultCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[12]
}

func (x SessionDeleteByKeyIdResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionDeleteByKeyIdResult_ResultCode.Descriptor instead.
func (SessionDeleteByKeyIdResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{37, 0}
}

type SessionQueryByKeyIdResult_ResultCode int32

const (
	SessionQueryByKeyIdResult_Success       SessionQueryByKeyIdResult_ResultCode = 0
	SessionQueryByKeyIdResult_InternalError SessionQueryByKeyIdResult_ResultCode = 1
)

// Enum value maps for SessionQueryByKeyIdResult_ResultCode.
var (
	SessionQueryByKeyIdResult_ResultCode_name = map[int32]string{
		0: "Success",
		1: "InternalError",
	}
	SessionQueryByKeyIdResult_ResultCode_value = map[string]int32{
		"Success":       0,
		"InternalError": 1,
	}
)

func (x SessionQueryByKeyIdResult_ResultCode) Enum() *SessionQueryByKeyIdResult_ResultCode {
	p := new(SessionQueryByKeyIdResult_ResultCode)
	*p = x
	return p
}

func (x SessionQueryByKeyIdResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionQueryByKeyIdResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[13].Descriptor()
}

func (SessionQueryByKeyIdResult_ResultCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[13]
}

func (x SessionQueryByKeyIdResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionQueryByKeyIdResult_ResultCode.Descriptor instead.
func (SessionQueryByKeyIdResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{39, 0}
}

type SessionUpdateSignInResult_ResultCode int32

const (
	SessionUpdateSignInResult_Success       SessionUpdateSignInResult_ResultCode = 0
	SessionUpdateSignInResult_InternalError SessionUpdateSignInResult_ResultCode = 1
)

// Enum value maps for SessionUpdateSignInResult_ResultCode.
var (
	SessionUpdateSignInResult_ResultCode_name = map[int32]string{
		0: "Success",
		1: "InternalError",
	}
	SessionUpdateSignInResult_ResultCode_value = map[string]int32{
		"Success":       0,
		"InternalError": 1,
	}
)

func (x SessionUpdateSignInResult_ResultCode) Enum() *SessionUpdateSignInResult_ResultCode {
	p := new(SessionUpdateSignInResult_ResultCode)
	*p = x
	return p
}

func (x SessionUpdateSignInResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionUpdateSignInResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[14].Descriptor()
}

func (SessionUpdateSignInResult_ResultCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[14]
}

func (x SessionUpdateSignInResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionUpdateSignInResult_ResultCode.Descriptor instead.
func (SessionUpdateSignInResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{42, 0}
}

type SessionQueryByUserIdResult_ResultCode int32

const (
	SessionQueryByUserIdResult_Success       SessionQueryByUserIdResult_ResultCode = 0
	SessionQueryByUserIdResult_InternalError SessionQueryByUserIdResult_ResultCode = 1
)

// Enum value maps for SessionQueryByUserIdResult_ResultCode.
var (
	SessionQueryByUserIdResult_ResultCode_name = map[int32]string{
		0: "Success",
		1: "InternalError",
	}
	SessionQueryByUserIdResult_ResultCode_value = map[string]int32{
		"Success":       0,
		"InternalError": 1,
	}
)

func (x SessionQueryByUserIdResult_ResultCode) Enum() *SessionQueryByUserIdResult_ResultCode {
	p := new(SessionQueryByUserIdResult_ResultCode)
	*p = x
	return p
}

func (x SessionQueryByUserIdResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionQueryByUserIdResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[15].Descriptor()
}

func (SessionQueryByUserIdResult_ResultCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[15]
}

func (x SessionQueryByUserIdResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionQueryByUserIdResult_ResultCode.Descriptor instead.
func (SessionQueryByUserIdResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{44, 0}
}

type SessionQueryBasicInfoByKeyIdResult_ResultCode int32

const (
	SessionQueryBasicInfoByKeyIdResult_Success       SessionQueryBasicInfoByKeyIdResult_ResultCode = 0
	SessionQueryBasicInfoByKeyIdResult_InternalError SessionQueryBasicInfoByKeyIdResult_ResultCode = 1
)

// Enum value maps for SessionQueryBasicInfoByKeyIdResult_ResultCode.
var (
	SessionQueryBasicInfoByKeyIdResult_ResultCode_name = map[int32]string{
		0: "Success",
		1: "InternalError",
	}
	SessionQueryBasicInfoByKeyIdResult_ResultCode_value = map[string]int32{
		"Success":       0,
		"InternalError": 1,
	}
)

func (x SessionQueryBasicInfoByKeyIdResult_ResultCode) Enum() *SessionQueryBasicInfoByKeyIdResult_ResultCode {
	p := new(SessionQueryBasicInfoByKeyIdResult_ResultCode)
	*p = x
	return p
}

func (x SessionQueryBasicInfoByKeyIdResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionQueryBasicInfoByKeyIdResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[16].Descriptor()
}

func (SessionQueryBasicInfoByKeyIdResult_ResultCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[16]
}

func (x SessionQueryBasicInfoByKeyIdResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionQueryBasicInfoByKeyIdResult_ResultCode.Descriptor instead.
func (SessionQueryBasicInfoByKeyIdResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{46, 0}
}

type SessionQueryDesByKeyIdResult_ResultCode int32

const (
	SessionQueryDesByKeyIdResult_Success       SessionQueryDesByKeyIdResult_ResultCode = 0
	SessionQueryDesByKeyIdResult_InternalError SessionQueryDesByKeyIdResult_ResultCode = 1
)

// Enum value maps for SessionQueryDesByKeyIdResult_ResultCode.
var (
	SessionQueryDesByKeyIdResult_ResultCode_name = map[int32]string{
		0: "Success",
		1: "InternalError",
	}
	SessionQueryDesByKeyIdResult_ResultCode_value = map[string]int32{
		"Success":       0,
		"InternalError": 1,
	}
)

func (x SessionQueryDesByKeyIdResult_ResultCode) Enum() *SessionQueryDesByKeyIdResult_ResultCode {
	p := new(SessionQueryDesByKeyIdResult_ResultCode)
	*p = x
	return p
}

func (x SessionQueryDesByKeyIdResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionQueryDesByKeyIdResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[17].Descriptor()
}

func (SessionQueryDesByKeyIdResult_ResultCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[17]
}

func (x SessionQueryDesByKeyIdResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionQueryDesByKeyIdResult_ResultCode.Descriptor instead.
func (SessionQueryDesByKeyIdResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{48, 0}
}

type SessionDeleteAuthKeysByUserIdResult_ResultCode int32

const (
	SessionDeleteAuthKeysByUserIdResult_Success       SessionDeleteAuthKeysByUserIdResult_ResultCode = 0
	SessionDeleteAuthKeysByUserIdResult_InternalError SessionDeleteAuthKeysByUserIdResult_ResultCode = 1
)

// Enum value maps for SessionDeleteAuthKeysByUserIdResult_ResultCode.
var (
	SessionDeleteAuthKeysByUserIdResult_ResultCode_name = map[int32]string{
		0: "Success",
		1: "InternalError",
	}
	SessionDeleteAuthKeysByUserIdResult_ResultCode_value = map[string]int32{
		"Success":       0,
		"InternalError": 1,
	}
)

func (x SessionDeleteAuthKeysByUserIdResult_ResultCode) Enum() *SessionDeleteAuthKeysByUserIdResult_ResultCode {
	p := new(SessionDeleteAuthKeysByUserIdResult_ResultCode)
	*p = x
	return p
}

func (x SessionDeleteAuthKeysByUserIdResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionDeleteAuthKeysByUserIdResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[18].Descriptor()
}

func (SessionDeleteAuthKeysByUserIdResult_ResultCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[18]
}

func (x SessionDeleteAuthKeysByUserIdResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionDeleteAuthKeysByUserIdResult_ResultCode.Descriptor instead.
func (SessionDeleteAuthKeysByUserIdResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{50, 0}
}

type SessionUpdatePingResult_ResultCode int32

const (
	SessionUpdatePingResult_Success             SessionUpdatePingResult_ResultCode = 0
	SessionUpdatePingResult_InternalError       SessionUpdatePingResult_ResultCode = 1
	SessionUpdatePingResult_AuthkeyUnregistered SessionUpdatePingResult_ResultCode = 2 // session被踢
)

// Enum value maps for SessionUpdatePingResult_ResultCode.
var (
	SessionUpdatePingResult_ResultCode_name = map[int32]string{
		0: "Success",
		1: "InternalError",
		2: "AuthkeyUnregistered",
	}
	SessionUpdatePingResult_ResultCode_value = map[string]int32{
		"Success":             0,
		"InternalError":       1,
		"AuthkeyUnregistered": 2,
	}
)

func (x SessionUpdatePingResult_ResultCode) Enum() *SessionUpdatePingResult_ResultCode {
	p := new(SessionUpdatePingResult_ResultCode)
	*p = x
	return p
}

func (x SessionUpdatePingResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionUpdatePingResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[19].Descriptor()
}

func (SessionUpdatePingResult_ResultCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[19]
}

func (x SessionUpdatePingResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionUpdatePingResult_ResultCode.Descriptor instead.
func (SessionUpdatePingResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{53, 0}
}

type GetCreatedByKeyIdResult_ResultCode int32

const (
	GetCreatedByKeyIdResult_Success       GetCreatedByKeyIdResult_ResultCode = 0
	GetCreatedByKeyIdResult_InternalError GetCreatedByKeyIdResult_ResultCode = 1
)

// Enum value maps for GetCreatedByKeyIdResult_ResultCode.
var (
	GetCreatedByKeyIdResult_ResultCode_name = map[int32]string{
		0: "Success",
		1: "InternalError",
	}
	GetCreatedByKeyIdResult_ResultCode_value = map[string]int32{
		"Success":       0,
		"InternalError": 1,
	}
)

func (x GetCreatedByKeyIdResult_ResultCode) Enum() *GetCreatedByKeyIdResult_ResultCode {
	p := new(GetCreatedByKeyIdResult_ResultCode)
	*p = x
	return p
}

func (x GetCreatedByKeyIdResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetCreatedByKeyIdResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[20].Descriptor()
}

func (GetCreatedByKeyIdResult_ResultCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[20]
}

func (x GetCreatedByKeyIdResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetCreatedByKeyIdResult_ResultCode.Descriptor instead.
func (GetCreatedByKeyIdResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{55, 0}
}

type UpdateSelfAppHashResult_ResultCode int32

const (
	UpdateSelfAppHashResult_Success       UpdateSelfAppHashResult_ResultCode = 0
	UpdateSelfAppHashResult_InternalError UpdateSelfAppHashResult_ResultCode = 1
)

// Enum value maps for UpdateSelfAppHashResult_ResultCode.
var (
	UpdateSelfAppHashResult_ResultCode_name = map[int32]string{
		0: "Success",
		1: "InternalError",
	}
	UpdateSelfAppHashResult_ResultCode_value = map[string]int32{
		"Success":       0,
		"InternalError": 1,
	}
)

func (x UpdateSelfAppHashResult_ResultCode) Enum() *UpdateSelfAppHashResult_ResultCode {
	p := new(UpdateSelfAppHashResult_ResultCode)
	*p = x
	return p
}

func (x UpdateSelfAppHashResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateSelfAppHashResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsession_proto_enumTypes[21].Descriptor()
}

func (UpdateSelfAppHashResult_ResultCode) Type() protoreflect.EnumType {
	return &file_imsession_proto_enumTypes[21]
}

func (x UpdateSelfAppHashResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateSelfAppHashResult_ResultCode.Descriptor instead.
func (UpdateSelfAppHashResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{57, 0}
}

type ClearKeyIdSessionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   int32  `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	KeyId uint64 `protobuf:"varint,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"` //是否成功
}

func (x *ClearKeyIdSessionReq) Reset() {
	*x = ClearKeyIdSessionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearKeyIdSessionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearKeyIdSessionReq) ProtoMessage() {}

func (x *ClearKeyIdSessionReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearKeyIdSessionReq.ProtoReflect.Descriptor instead.
func (*ClearKeyIdSessionReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{0}
}

func (x *ClearKeyIdSessionReq) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ClearKeyIdSessionReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

type ClearKeyIdSessionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sucess bool `protobuf:"varint,1,opt,name=sucess,proto3" json:"sucess,omitempty"` //是否成功
}

func (x *ClearKeyIdSessionResp) Reset() {
	*x = ClearKeyIdSessionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearKeyIdSessionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearKeyIdSessionResp) ProtoMessage() {}

func (x *ClearKeyIdSessionResp) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearKeyIdSessionResp.ProtoReflect.Descriptor instead.
func (*ClearKeyIdSessionResp) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{1}
}

func (x *ClearKeyIdSessionResp) GetSucess() bool {
	if x != nil {
		return x.Sucess
	}
	return false
}

type SetLangCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId    int64  `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	LangCode string `protobuf:"bytes,2,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"` //语言code
}

func (x *SetLangCodeReq) Reset() {
	*x = SetLangCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLangCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLangCodeReq) ProtoMessage() {}

func (x *SetLangCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLangCodeReq.ProtoReflect.Descriptor instead.
func (*SetLangCodeReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{2}
}

func (x *SetLangCodeReq) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *SetLangCodeReq) GetLangCode() string {
	if x != nil {
		return x.LangCode
	}
	return ""
}

type SetLangCodeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code SetLangCodeResult_ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=imsession.SetLangCodeResult_ResultCode" json:"code,omitempty"`
}

func (x *SetLangCodeResult) Reset() {
	*x = SetLangCodeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLangCodeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLangCodeResult) ProtoMessage() {}

func (x *SetLangCodeResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLangCodeResult.ProtoReflect.Descriptor instead.
func (*SetLangCodeResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{3}
}

func (x *SetLangCodeResult) GetCode() SetLangCodeResult_ResultCode {
	if x != nil {
		return x.Code
	}
	return SetLangCodeResult_Success
}

type GetLangCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId int64 `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *GetLangCodeReq) Reset() {
	*x = GetLangCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLangCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLangCodeReq) ProtoMessage() {}

func (x *GetLangCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLangCodeReq.ProtoReflect.Descriptor instead.
func (*GetLangCodeReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{4}
}

func (x *GetLangCodeReq) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

type GetLangCodeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     GetLangCodeResult_ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=imsession.GetLangCodeResult_ResultCode" json:"code,omitempty"`
	LangCode string                       `protobuf:"bytes,2,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"` //语言code
}

func (x *GetLangCodeResult) Reset() {
	*x = GetLangCodeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLangCodeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLangCodeResult) ProtoMessage() {}

func (x *GetLangCodeResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLangCodeResult.ProtoReflect.Descriptor instead.
func (*GetLangCodeResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{5}
}

func (x *GetLangCodeResult) GetCode() GetLangCodeResult_ResultCode {
	if x != nil {
		return x.Code
	}
	return GetLangCodeResult_Success
}

func (x *GetLangCodeResult) GetLangCode() string {
	if x != nil {
		return x.LangCode
	}
	return ""
}

type GetUniqueNumberByKeyIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId int64 `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *GetUniqueNumberByKeyIdReq) Reset() {
	*x = GetUniqueNumberByKeyIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUniqueNumberByKeyIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUniqueNumberByKeyIdReq) ProtoMessage() {}

func (x *GetUniqueNumberByKeyIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUniqueNumberByKeyIdReq.ProtoReflect.Descriptor instead.
func (*GetUniqueNumberByKeyIdReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{6}
}

func (x *GetUniqueNumberByKeyIdReq) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

type GetUniqueNumberByKeyIdResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueNumber string `protobuf:"bytes,1,opt,name=unique_number,json=uniqueNumber,proto3" json:"unique_number,omitempty"`
}

func (x *GetUniqueNumberByKeyIdResult) Reset() {
	*x = GetUniqueNumberByKeyIdResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUniqueNumberByKeyIdResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUniqueNumberByKeyIdResult) ProtoMessage() {}

func (x *GetUniqueNumberByKeyIdResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUniqueNumberByKeyIdResult.ProtoReflect.Descriptor instead.
func (*GetUniqueNumberByKeyIdResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{7}
}

func (x *GetUniqueNumberByKeyIdResult) GetUniqueNumber() string {
	if x != nil {
		return x.UniqueNumber
	}
	return ""
}

type SessionDisconnectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId       uint64 `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`                  // 端标识
	PhoneNumber string `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"` // 电话号码
	Disconnect  bool   `protobuf:"varint,3,opt,name=disconnect,proto3" json:"disconnect,omitempty"`                     // true断开连接，false新连接
	ClientIp    string `protobuf:"bytes,4,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`          // 新连接ip
	Country     string `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`                            // ip地区
}

func (x *SessionDisconnectReq) Reset() {
	*x = SessionDisconnectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionDisconnectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionDisconnectReq) ProtoMessage() {}

func (x *SessionDisconnectReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionDisconnectReq.ProtoReflect.Descriptor instead.
func (*SessionDisconnectReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{8}
}

func (x *SessionDisconnectReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *SessionDisconnectReq) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *SessionDisconnectReq) GetDisconnect() bool {
	if x != nil {
		return x.Disconnect
	}
	return false
}

func (x *SessionDisconnectReq) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *SessionDisconnectReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type SessionDisconnectResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SessionDisconnectResult) Reset() {
	*x = SessionDisconnectResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionDisconnectResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionDisconnectResult) ProtoMessage() {}

func (x *SessionDisconnectResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionDisconnectResult.ProtoReflect.Descriptor instead.
func (*SessionDisconnectResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{9}
}

type SessionInitConnectionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiId         int32  `protobuf:"varint,1,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
	DeviceModel   string `protobuf:"bytes,2,opt,name=device_model,json=deviceModel,proto3" json:"device_model,omitempty"`
	SystemVersion string `protobuf:"bytes,3,opt,name=system_version,json=systemVersion,proto3" json:"system_version,omitempty"`
	AppVersion    string `protobuf:"bytes,4,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	LangCode      string `protobuf:"bytes,5,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	Ip            string `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
	Country       string `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
	Layer         int32  `protobuf:"varint,8,opt,name=layer,proto3" json:"layer,omitempty"`
	KeyId         uint64 `protobuf:"varint,9,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"` // must set
	AppName       string `protobuf:"bytes,10,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
}

func (x *SessionInitConnectionReq) Reset() {
	*x = SessionInitConnectionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionInitConnectionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInitConnectionReq) ProtoMessage() {}

func (x *SessionInitConnectionReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionInitConnectionReq.ProtoReflect.Descriptor instead.
func (*SessionInitConnectionReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{10}
}

func (x *SessionInitConnectionReq) GetApiId() int32 {
	if x != nil {
		return x.ApiId
	}
	return 0
}

func (x *SessionInitConnectionReq) GetDeviceModel() string {
	if x != nil {
		return x.DeviceModel
	}
	return ""
}

func (x *SessionInitConnectionReq) GetSystemVersion() string {
	if x != nil {
		return x.SystemVersion
	}
	return ""
}

func (x *SessionInitConnectionReq) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *SessionInitConnectionReq) GetLangCode() string {
	if x != nil {
		return x.LangCode
	}
	return ""
}

func (x *SessionInitConnectionReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *SessionInitConnectionReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *SessionInitConnectionReq) GetLayer() int32 {
	if x != nil {
		return x.Layer
	}
	return 0
}

func (x *SessionInitConnectionReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *SessionInitConnectionReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

type SessionInitConnectionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code SessionInitConnectionResult_ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=imsession.SessionInitConnectionResult_ResultCode" json:"code,omitempty"`
}

func (x *SessionInitConnectionResult) Reset() {
	*x = SessionInitConnectionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionInitConnectionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInitConnectionResult) ProtoMessage() {}

func (x *SessionInitConnectionResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionInitConnectionResult.ProtoReflect.Descriptor instead.
func (*SessionInitConnectionResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{11}
}

func (x *SessionInitConnectionResult) GetCode() SessionInitConnectionResult_ResultCode {
	if x != nil {
		return x.Code
	}
	return SessionInitConnectionResult_Success
}

type SessionUpdateRegisterDeviceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushTokenType int32  `protobuf:"varint,1,opt,name=push_token_type,json=pushTokenType,proto3" json:"push_token_type,omitempty"`
	PushToken     string `protobuf:"bytes,2,opt,name=push_token,json=pushToken,proto3" json:"push_token,omitempty"`
	KeyId         uint64 `protobuf:"varint,3,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	CallTokenType int32  `protobuf:"varint,4,opt,name=call_token_type,json=callTokenType,proto3" json:"call_token_type,omitempty"`
	CallToken     string `protobuf:"bytes,5,opt,name=call_token,json=callToken,proto3" json:"call_token,omitempty"`
}

func (x *SessionUpdateRegisterDeviceReq) Reset() {
	*x = SessionUpdateRegisterDeviceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionUpdateRegisterDeviceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionUpdateRegisterDeviceReq) ProtoMessage() {}

func (x *SessionUpdateRegisterDeviceReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionUpdateRegisterDeviceReq.ProtoReflect.Descriptor instead.
func (*SessionUpdateRegisterDeviceReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{12}
}

func (x *SessionUpdateRegisterDeviceReq) GetPushTokenType() int32 {
	if x != nil {
		return x.PushTokenType
	}
	return 0
}

func (x *SessionUpdateRegisterDeviceReq) GetPushToken() string {
	if x != nil {
		return x.PushToken
	}
	return ""
}

func (x *SessionUpdateRegisterDeviceReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *SessionUpdateRegisterDeviceReq) GetCallTokenType() int32 {
	if x != nil {
		return x.CallTokenType
	}
	return 0
}

func (x *SessionUpdateRegisterDeviceReq) GetCallToken() string {
	if x != nil {
		return x.CallToken
	}
	return ""
}

type SessionUpdateRegisterDeviceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code SessionUpdateRegisterDeviceResult_ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=imsession.SessionUpdateRegisterDeviceResult_ResultCode" json:"code,omitempty"`
}

func (x *SessionUpdateRegisterDeviceResult) Reset() {
	*x = SessionUpdateRegisterDeviceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionUpdateRegisterDeviceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionUpdateRegisterDeviceResult) ProtoMessage() {}

func (x *SessionUpdateRegisterDeviceResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionUpdateRegisterDeviceResult.ProtoReflect.Descriptor instead.
func (*SessionUpdateRegisterDeviceResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{13}
}

func (x *SessionUpdateRegisterDeviceResult) GetCode() SessionUpdateRegisterDeviceResult_ResultCode {
	if x != nil {
		return x.Code
	}
	return SessionUpdateRegisterDeviceResult_Success
}

type SessionUpdateRegisterHuaweiDeviceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushTokenType int32  `protobuf:"varint,1,opt,name=push_token_type,json=pushTokenType,proto3" json:"push_token_type,omitempty"`
	PushToken     string `protobuf:"bytes,2,opt,name=push_token,json=pushToken,proto3" json:"push_token,omitempty"`
	KeyId         uint64 `protobuf:"varint,3,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	CallTokenType int32  `protobuf:"varint,4,opt,name=call_token_type,json=callTokenType,proto3" json:"call_token_type,omitempty"`
	CallToken     string `protobuf:"bytes,5,opt,name=call_token,json=callToken,proto3" json:"call_token,omitempty"`
}

func (x *SessionUpdateRegisterHuaweiDeviceReq) Reset() {
	*x = SessionUpdateRegisterHuaweiDeviceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionUpdateRegisterHuaweiDeviceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionUpdateRegisterHuaweiDeviceReq) ProtoMessage() {}

func (x *SessionUpdateRegisterHuaweiDeviceReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionUpdateRegisterHuaweiDeviceReq.ProtoReflect.Descriptor instead.
func (*SessionUpdateRegisterHuaweiDeviceReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{14}
}

func (x *SessionUpdateRegisterHuaweiDeviceReq) GetPushTokenType() int32 {
	if x != nil {
		return x.PushTokenType
	}
	return 0
}

func (x *SessionUpdateRegisterHuaweiDeviceReq) GetPushToken() string {
	if x != nil {
		return x.PushToken
	}
	return ""
}

func (x *SessionUpdateRegisterHuaweiDeviceReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *SessionUpdateRegisterHuaweiDeviceReq) GetCallTokenType() int32 {
	if x != nil {
		return x.CallTokenType
	}
	return 0
}

func (x *SessionUpdateRegisterHuaweiDeviceReq) GetCallToken() string {
	if x != nil {
		return x.CallToken
	}
	return ""
}

type SessionUpdateRegisterHuaweiDeviceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   SessionUpdateRegisterHuaweiDeviceResult_ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=imsession.SessionUpdateRegisterHuaweiDeviceResult_ResultCode" json:"code,omitempty"`
	UserId int32                                              `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	KeyId  uint64                                             `protobuf:"varint,3,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *SessionUpdateRegisterHuaweiDeviceResult) Reset() {
	*x = SessionUpdateRegisterHuaweiDeviceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionUpdateRegisterHuaweiDeviceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionUpdateRegisterHuaweiDeviceResult) ProtoMessage() {}

func (x *SessionUpdateRegisterHuaweiDeviceResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionUpdateRegisterHuaweiDeviceResult.ProtoReflect.Descriptor instead.
func (*SessionUpdateRegisterHuaweiDeviceResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{15}
}

func (x *SessionUpdateRegisterHuaweiDeviceResult) GetCode() SessionUpdateRegisterHuaweiDeviceResult_ResultCode {
	if x != nil {
		return x.Code
	}
	return SessionUpdateRegisterHuaweiDeviceResult_Success
}

func (x *SessionUpdateRegisterHuaweiDeviceResult) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SessionUpdateRegisterHuaweiDeviceResult) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

type SessionUpdateUserPhoneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int32  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NewPhone string `protobuf:"bytes,2,opt,name=new_phone,json=newPhone,proto3" json:"new_phone,omitempty"`
}

func (x *SessionUpdateUserPhoneReq) Reset() {
	*x = SessionUpdateUserPhoneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionUpdateUserPhoneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionUpdateUserPhoneReq) ProtoMessage() {}

func (x *SessionUpdateUserPhoneReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionUpdateUserPhoneReq.ProtoReflect.Descriptor instead.
func (*SessionUpdateUserPhoneReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{16}
}

func (x *SessionUpdateUserPhoneReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SessionUpdateUserPhoneReq) GetNewPhone() string {
	if x != nil {
		return x.NewPhone
	}
	return ""
}

type SessionUpdateUserPhoneResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code SessionUpdateUserPhoneResult_ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=imsession.SessionUpdateUserPhoneResult_ResultCode" json:"code,omitempty"`
}

func (x *SessionUpdateUserPhoneResult) Reset() {
	*x = SessionUpdateUserPhoneResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionUpdateUserPhoneResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionUpdateUserPhoneResult) ProtoMessage() {}

func (x *SessionUpdateUserPhoneResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionUpdateUserPhoneResult.ProtoReflect.Descriptor instead.
func (*SessionUpdateUserPhoneResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{17}
}

func (x *SessionUpdateUserPhoneResult) GetCode() SessionUpdateUserPhoneResult_ResultCode {
	if x != nil {
		return x.Code
	}
	return SessionUpdateUserPhoneResult_Success
}

type SessionQueryApiIDbyKeyIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId uint64 `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"` // 客户端id
}

func (x *SessionQueryApiIDbyKeyIdReq) Reset() {
	*x = SessionQueryApiIDbyKeyIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionQueryApiIDbyKeyIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionQueryApiIDbyKeyIdReq) ProtoMessage() {}

func (x *SessionQueryApiIDbyKeyIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionQueryApiIDbyKeyIdReq.ProtoReflect.Descriptor instead.
func (*SessionQueryApiIDbyKeyIdReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{18}
}

func (x *SessionQueryApiIDbyKeyIdReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

type SessionQueryApiIDbyKeyIdResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiId         int32 `protobuf:"varint,1,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`                         // 客户端类型标识
	InternalError bool  `protobuf:"varint,2,opt,name=internal_error,json=internalError,proto3" json:"internal_error,omitempty"` //是否发生了错误
}

func (x *SessionQueryApiIDbyKeyIdResult) Reset() {
	*x = SessionQueryApiIDbyKeyIdResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionQueryApiIDbyKeyIdResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionQueryApiIDbyKeyIdResult) ProtoMessage() {}

func (x *SessionQueryApiIDbyKeyIdResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionQueryApiIDbyKeyIdResult.ProtoReflect.Descriptor instead.
func (*SessionQueryApiIDbyKeyIdResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{19}
}

func (x *SessionQueryApiIDbyKeyIdResult) GetApiId() int32 {
	if x != nil {
		return x.ApiId
	}
	return 0
}

func (x *SessionQueryApiIDbyKeyIdResult) GetInternalError() bool {
	if x != nil {
		return x.InternalError
	}
	return false
}

type SessionQueryUserIdByKeyIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId uint64 `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"` // 客户端id
}

func (x *SessionQueryUserIdByKeyIdReq) Reset() {
	*x = SessionQueryUserIdByKeyIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionQueryUserIdByKeyIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionQueryUserIdByKeyIdReq) ProtoMessage() {}

func (x *SessionQueryUserIdByKeyIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionQueryUserIdByKeyIdReq.ProtoReflect.Descriptor instead.
func (*SessionQueryUserIdByKeyIdReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{20}
}

func (x *SessionQueryUserIdByKeyIdReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

type SessionQueryUserIdByKeyIdResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InternalError bool  `protobuf:"varint,1,opt,name=internal_error,json=internalError,proto3" json:"internal_error,omitempty"`
	UserId        int32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *SessionQueryUserIdByKeyIdResult) Reset() {
	*x = SessionQueryUserIdByKeyIdResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionQueryUserIdByKeyIdResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionQueryUserIdByKeyIdResult) ProtoMessage() {}

func (x *SessionQueryUserIdByKeyIdResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionQueryUserIdByKeyIdResult.ProtoReflect.Descriptor instead.
func (*SessionQueryUserIdByKeyIdResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{21}
}

func (x *SessionQueryUserIdByKeyIdResult) GetInternalError() bool {
	if x != nil {
		return x.InternalError
	}
	return false
}

func (x *SessionQueryUserIdByKeyIdResult) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type SessionUpdateOnHandshakeDoneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId   uint64 `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	AuthKey []byte `protobuf:"bytes,2,opt,name=auth_key,json=authKey,proto3" json:"auth_key,omitempty"`
}

func (x *SessionUpdateOnHandshakeDoneReq) Reset() {
	*x = SessionUpdateOnHandshakeDoneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionUpdateOnHandshakeDoneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionUpdateOnHandshakeDoneReq) ProtoMessage() {}

func (x *SessionUpdateOnHandshakeDoneReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionUpdateOnHandshakeDoneReq.ProtoReflect.Descriptor instead.
func (*SessionUpdateOnHandshakeDoneReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{22}
}

func (x *SessionUpdateOnHandshakeDoneReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *SessionUpdateOnHandshakeDoneReq) GetAuthKey() []byte {
	if x != nil {
		return x.AuthKey
	}
	return nil
}

type SessionUpdateOnHandshakeDoneResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                                        `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否保存成功，保存失败infoserver查看失败信息
	Code    SessionUpdateOnHandshakeDoneResult_FailCode `protobuf:"varint,2,opt,name=code,proto3,enum=imsession.SessionUpdateOnHandshakeDoneResult_FailCode" json:"code,omitempty"`
}

func (x *SessionUpdateOnHandshakeDoneResult) Reset() {
	*x = SessionUpdateOnHandshakeDoneResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionUpdateOnHandshakeDoneResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionUpdateOnHandshakeDoneResult) ProtoMessage() {}

func (x *SessionUpdateOnHandshakeDoneResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionUpdateOnHandshakeDoneResult.ProtoReflect.Descriptor instead.
func (*SessionUpdateOnHandshakeDoneResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{23}
}

func (x *SessionUpdateOnHandshakeDoneResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SessionUpdateOnHandshakeDoneResult) GetCode() SessionUpdateOnHandshakeDoneResult_FailCode {
	if x != nil {
		return x.Code
	}
	return SessionUpdateOnHandshakeDoneResult_Internal
}

type SessionIncQtsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId uint64 `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *SessionIncQtsReq) Reset() {
	*x = SessionIncQtsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionIncQtsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionIncQtsReq) ProtoMessage() {}

func (x *SessionIncQtsReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionIncQtsReq.ProtoReflect.Descriptor instead.
func (*SessionIncQtsReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{24}
}

func (x *SessionIncQtsReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

type SessionIncQtsResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code SessionIncQtsResult_ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=imsession.SessionIncQtsResult_ResultCode" json:"code,omitempty"`
	Qts  int32                          `protobuf:"varint,2,opt,name=qts,proto3" json:"qts,omitempty"`
}

func (x *SessionIncQtsResult) Reset() {
	*x = SessionIncQtsResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionIncQtsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionIncQtsResult) ProtoMessage() {}

func (x *SessionIncQtsResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionIncQtsResult.ProtoReflect.Descriptor instead.
func (*SessionIncQtsResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{25}
}

func (x *SessionIncQtsResult) GetCode() SessionIncQtsResult_ResultCode {
	if x != nil {
		return x.Code
	}
	return SessionIncQtsResult_Success
}

func (x *SessionIncQtsResult) GetQts() int32 {
	if x != nil {
		return x.Qts
	}
	return 0
}

type SessionTerminateByKeyIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId        uint64 `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"` // 要剔除的keyid
	PhoneNumber  string `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	UserId       int32  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CurrentKeyId uint64 `protobuf:"varint,4,opt,name=current_key_id,json=currentKeyId,proto3" json:"current_key_id,omitempty"` //踢人端的keyid
}

func (x *SessionTerminateByKeyIdReq) Reset() {
	*x = SessionTerminateByKeyIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionTerminateByKeyIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionTerminateByKeyIdReq) ProtoMessage() {}

func (x *SessionTerminateByKeyIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionTerminateByKeyIdReq.ProtoReflect.Descriptor instead.
func (*SessionTerminateByKeyIdReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{26}
}

func (x *SessionTerminateByKeyIdReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *SessionTerminateByKeyIdReq) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *SessionTerminateByKeyIdReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SessionTerminateByKeyIdReq) GetCurrentKeyId() uint64 {
	if x != nil {
		return x.CurrentKeyId
	}
	return 0
}

type SessionTerminateByKeyIdResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code SessionTerminateByKeyIdResult_ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=imsession.SessionTerminateByKeyIdResult_ResultCode" json:"code,omitempty"`
}

func (x *SessionTerminateByKeyIdResult) Reset() {
	*x = SessionTerminateByKeyIdResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionTerminateByKeyIdResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionTerminateByKeyIdResult) ProtoMessage() {}

func (x *SessionTerminateByKeyIdResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionTerminateByKeyIdResult.ProtoReflect.Descriptor instead.
func (*SessionTerminateByKeyIdResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{27}
}

func (x *SessionTerminateByKeyIdResult) GetCode() SessionTerminateByKeyIdResult_ResultCode {
	if x != nil {
		return x.Code
	}
	return SessionTerminateByKeyIdResult_Success
}

type SessionTerminateExceptKeyIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId       uint64 `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"` // 要保留的keyid
	PhoneNumber string `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	UserId      int32  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *SessionTerminateExceptKeyIdReq) Reset() {
	*x = SessionTerminateExceptKeyIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionTerminateExceptKeyIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionTerminateExceptKeyIdReq) ProtoMessage() {}

func (x *SessionTerminateExceptKeyIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionTerminateExceptKeyIdReq.ProtoReflect.Descriptor instead.
func (*SessionTerminateExceptKeyIdReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{28}
}

func (x *SessionTerminateExceptKeyIdReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *SessionTerminateExceptKeyIdReq) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *SessionTerminateExceptKeyIdReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type SessionTerminateExceptKeyIdResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code SessionTerminateExceptKeyIdResult_ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=imsession.SessionTerminateExceptKeyIdResult_ResultCode" json:"code,omitempty"`
}

func (x *SessionTerminateExceptKeyIdResult) Reset() {
	*x = SessionTerminateExceptKeyIdResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionTerminateExceptKeyIdResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionTerminateExceptKeyIdResult) ProtoMessage() {}

func (x *SessionTerminateExceptKeyIdResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionTerminateExceptKeyIdResult.ProtoReflect.Descriptor instead.
func (*SessionTerminateExceptKeyIdResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{29}
}

func (x *SessionTerminateExceptKeyIdResult) GetCode() SessionTerminateExceptKeyIdResult_ResultCode {
	if x != nil {
		return x.Code
	}
	return SessionTerminateExceptKeyIdResult_Success
}

type SessionUpdateLogoutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId  uint64 `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	UserId int32  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *SessionUpdateLogoutReq) Reset() {
	*x = SessionUpdateLogoutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionUpdateLogoutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionUpdateLogoutReq) ProtoMessage() {}

func (x *SessionUpdateLogoutReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionUpdateLogoutReq.ProtoReflect.Descriptor instead.
func (*SessionUpdateLogoutReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{30}
}

func (x *SessionUpdateLogoutReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *SessionUpdateLogoutReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type SessionUpdateLogoutResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code SessionUpdateLogoutResult_ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=imsession.SessionUpdateLogoutResult_ResultCode" json:"code,omitempty"`
}

func (x *SessionUpdateLogoutResult) Reset() {
	*x = SessionUpdateLogoutResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionUpdateLogoutResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionUpdateLogoutResult) ProtoMessage() {}

func (x *SessionUpdateLogoutResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionUpdateLogoutResult.ProtoReflect.Descriptor instead.
func (*SessionUpdateLogoutResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{31}
}

func (x *SessionUpdateLogoutResult) GetCode() SessionUpdateLogoutResult_ResultCode {
	if x != nil {
		return x.Code
	}
	return SessionUpdateLogoutResult_Success
}

type CheckBanDeviceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId        uint64 `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	UniqueNumber string `protobuf:"bytes,2,opt,name=unique_number,json=uniqueNumber,proto3" json:"unique_number,omitempty"`
}

func (x *CheckBanDeviceReq) Reset() {
	*x = CheckBanDeviceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckBanDeviceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckBanDeviceReq) ProtoMessage() {}

func (x *CheckBanDeviceReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckBanDeviceReq.ProtoReflect.Descriptor instead.
func (*CheckBanDeviceReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{32}
}

func (x *CheckBanDeviceReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *CheckBanDeviceReq) GetUniqueNumber() string {
	if x != nil {
		return x.UniqueNumber
	}
	return ""
}

type CheckBanDeviceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Banned bool `protobuf:"varint,1,opt,name=Banned,proto3" json:"Banned,omitempty"`
}

func (x *CheckBanDeviceResult) Reset() {
	*x = CheckBanDeviceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckBanDeviceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckBanDeviceResult) ProtoMessage() {}

func (x *CheckBanDeviceResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckBanDeviceResult.ProtoReflect.Descriptor instead.
func (*CheckBanDeviceResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{33}
}

func (x *CheckBanDeviceResult) GetBanned() bool {
	if x != nil {
		return x.Banned
	}
	return false
}

type AddBanDeviceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueNumber string `protobuf:"bytes,1,opt,name=unique_number,json=uniqueNumber,proto3" json:"unique_number,omitempty"`
}

func (x *AddBanDeviceReq) Reset() {
	*x = AddBanDeviceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBanDeviceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBanDeviceReq) ProtoMessage() {}

func (x *AddBanDeviceReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBanDeviceReq.ProtoReflect.Descriptor instead.
func (*AddBanDeviceReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{34}
}

func (x *AddBanDeviceReq) GetUniqueNumber() string {
	if x != nil {
		return x.UniqueNumber
	}
	return ""
}

type AddBanDeviceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code AddBanDeviceResult_ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=imsession.AddBanDeviceResult_ResultCode" json:"code,omitempty"`
}

func (x *AddBanDeviceResult) Reset() {
	*x = AddBanDeviceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBanDeviceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBanDeviceResult) ProtoMessage() {}

func (x *AddBanDeviceResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBanDeviceResult.ProtoReflect.Descriptor instead.
func (*AddBanDeviceResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{35}
}

func (x *AddBanDeviceResult) GetCode() AddBanDeviceResult_ResultCode {
	if x != nil {
		return x.Code
	}
	return AddBanDeviceResult_Success
}

type SessionDeleteByKeyIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId  uint64 `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	UserId int32  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *SessionDeleteByKeyIdReq) Reset() {
	*x = SessionDeleteByKeyIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionDeleteByKeyIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionDeleteByKeyIdReq) ProtoMessage() {}

func (x *SessionDeleteByKeyIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionDeleteByKeyIdReq.ProtoReflect.Descriptor instead.
func (*SessionDeleteByKeyIdReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{36}
}

func (x *SessionDeleteByKeyIdReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *SessionDeleteByKeyIdReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type SessionDeleteByKeyIdResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code SessionDeleteByKeyIdResult_ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=imsession.SessionDeleteByKeyIdResult_ResultCode" json:"code,omitempty"`
}

func (x *SessionDeleteByKeyIdResult) Reset() {
	*x = SessionDeleteByKeyIdResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionDeleteByKeyIdResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionDeleteByKeyIdResult) ProtoMessage() {}

func (x *SessionDeleteByKeyIdResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionDeleteByKeyIdResult.ProtoReflect.Descriptor instead.
func (*SessionDeleteByKeyIdResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{37}
}

func (x *SessionDeleteByKeyIdResult) GetCode() SessionDeleteByKeyIdResult_ResultCode {
	if x != nil {
		return x.Code
	}
	return SessionDeleteByKeyIdResult_Success
}

type SessionQueryByKeyIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId uint64 `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *SessionQueryByKeyIdReq) Reset() {
	*x = SessionQueryByKeyIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionQueryByKeyIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionQueryByKeyIdReq) ProtoMessage() {}

func (x *SessionQueryByKeyIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionQueryByKeyIdReq.ProtoReflect.Descriptor instead.
func (*SessionQueryByKeyIdReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{38}
}

func (x *SessionQueryByKeyIdReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

type SessionQueryByKeyIdResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code SessionQueryByKeyIdResult_ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=imsession.SessionQueryByKeyIdResult_ResultCode" json:"code,omitempty"`
	Info *SessionInformation                  `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"` //session信息
}

func (x *SessionQueryByKeyIdResult) Reset() {
	*x = SessionQueryByKeyIdResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionQueryByKeyIdResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionQueryByKeyIdResult) ProtoMessage() {}

func (x *SessionQueryByKeyIdResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionQueryByKeyIdResult.ProtoReflect.Descriptor instead.
func (*SessionQueryByKeyIdResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{39}
}

func (x *SessionQueryByKeyIdResult) GetCode() SessionQueryByKeyIdResult_ResultCode {
	if x != nil {
		return x.Code
	}
	return SessionQueryByKeyIdResult_Success
}

func (x *SessionQueryByKeyIdResult) GetInfo() *SessionInformation {
	if x != nil {
		return x.Info
	}
	return nil
}

type SessionInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiId         int32  `protobuf:"varint,1,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
	DeviceModel   string `protobuf:"bytes,2,opt,name=device_model,json=deviceModel,proto3" json:"device_model,omitempty"`
	SystemVersion string `protobuf:"bytes,3,opt,name=system_version,json=systemVersion,proto3" json:"system_version,omitempty"`
	AppVersion    string `protobuf:"bytes,4,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	LangCode      string `protobuf:"bytes,5,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	Ip            string `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
	Country       string `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
	Layer         int32  `protobuf:"varint,8,opt,name=layer,proto3" json:"layer,omitempty"`
	AuthKey       []byte `protobuf:"bytes,9,opt,name=auth_key,json=authKey,proto3" json:"auth_key,omitempty"`
	Qts           int32  `protobuf:"varint,10,opt,name=qts,proto3" json:"qts,omitempty"`
	PushTokenType int32  `protobuf:"varint,11,opt,name=push_token_type,json=pushTokenType,proto3" json:"push_token_type,omitempty"`
	PushToken     string `protobuf:"bytes,12,opt,name=push_token,json=pushToken,proto3" json:"push_token,omitempty"`
	CallTokenType int32  `protobuf:"varint,13,opt,name=call_token_type,json=callTokenType,proto3" json:"call_token_type,omitempty"`
	CallToken     string `protobuf:"bytes,14,opt,name=call_token,json=callToken,proto3" json:"call_token,omitempty"`
	PingTime      int64  `protobuf:"varint,15,opt,name=ping_time,json=pingTime,proto3" json:"ping_time,omitempty"`
	PhoneNumber   string `protobuf:"bytes,16,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	UserId        int32  `protobuf:"varint,17,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AccessHash    int64  `protobuf:"varint,18,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"`
	Seq           int32  `protobuf:"varint,19,opt,name=seq,proto3" json:"seq,omitempty"`
	KeyId         uint64 `protobuf:"varint,20,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	AppName       string `protobuf:"bytes,21,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	Disconnect    bool   `protobuf:"varint,22,opt,name=disconnect,proto3" json:"disconnect,omitempty"` // 客户端是否已断开连接
}

func (x *SessionInformation) Reset() {
	*x = SessionInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInformation) ProtoMessage() {}

func (x *SessionInformation) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionInformation.ProtoReflect.Descriptor instead.
func (*SessionInformation) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{40}
}

func (x *SessionInformation) GetApiId() int32 {
	if x != nil {
		return x.ApiId
	}
	return 0
}

func (x *SessionInformation) GetDeviceModel() string {
	if x != nil {
		return x.DeviceModel
	}
	return ""
}

func (x *SessionInformation) GetSystemVersion() string {
	if x != nil {
		return x.SystemVersion
	}
	return ""
}

func (x *SessionInformation) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *SessionInformation) GetLangCode() string {
	if x != nil {
		return x.LangCode
	}
	return ""
}

func (x *SessionInformation) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *SessionInformation) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *SessionInformation) GetLayer() int32 {
	if x != nil {
		return x.Layer
	}
	return 0
}

func (x *SessionInformation) GetAuthKey() []byte {
	if x != nil {
		return x.AuthKey
	}
	return nil
}

func (x *SessionInformation) GetQts() int32 {
	if x != nil {
		return x.Qts
	}
	return 0
}

func (x *SessionInformation) GetPushTokenType() int32 {
	if x != nil {
		return x.PushTokenType
	}
	return 0
}

func (x *SessionInformation) GetPushToken() string {
	if x != nil {
		return x.PushToken
	}
	return ""
}

func (x *SessionInformation) GetCallTokenType() int32 {
	if x != nil {
		return x.CallTokenType
	}
	return 0
}

func (x *SessionInformation) GetCallToken() string {
	if x != nil {
		return x.CallToken
	}
	return ""
}

func (x *SessionInformation) GetPingTime() int64 {
	if x != nil {
		return x.PingTime
	}
	return 0
}

func (x *SessionInformation) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *SessionInformation) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SessionInformation) GetAccessHash() int64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

func (x *SessionInformation) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *SessionInformation) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *SessionInformation) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *SessionInformation) GetDisconnect() bool {
	if x != nil {
		return x.Disconnect
	}
	return false
}

type SessionUpdateSignInReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber         string `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	KeyId               uint64 `protobuf:"varint,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	UserId              int32  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AccessHash          int64  `protobuf:"varint,4,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"`
	IsPrivilegedVersion bool   `protobuf:"varint,5,opt,name=is_privileged_version,json=isPrivilegedVersion,proto3" json:"is_privileged_version,omitempty"`
}

func (x *SessionUpdateSignInReq) Reset() {
	*x = SessionUpdateSignInReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionUpdateSignInReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionUpdateSignInReq) ProtoMessage() {}

func (x *SessionUpdateSignInReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionUpdateSignInReq.ProtoReflect.Descriptor instead.
func (*SessionUpdateSignInReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{41}
}

func (x *SessionUpdateSignInReq) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *SessionUpdateSignInReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *SessionUpdateSignInReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SessionUpdateSignInReq) GetAccessHash() int64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

func (x *SessionUpdateSignInReq) GetIsPrivilegedVersion() bool {
	if x != nil {
		return x.IsPrivilegedVersion
	}
	return false
}

type SessionUpdateSignInResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code SessionUpdateSignInResult_ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=imsession.SessionUpdateSignInResult_ResultCode" json:"code,omitempty"`
}

func (x *SessionUpdateSignInResult) Reset() {
	*x = SessionUpdateSignInResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionUpdateSignInResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionUpdateSignInResult) ProtoMessage() {}

func (x *SessionUpdateSignInResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionUpdateSignInResult.ProtoReflect.Descriptor instead.
func (*SessionUpdateSignInResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{42}
}

func (x *SessionUpdateSignInResult) GetCode() SessionUpdateSignInResult_ResultCode {
	if x != nil {
		return x.Code
	}
	return SessionUpdateSignInResult_Success
}

type SessionQueryByUserIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *SessionQueryByUserIdReq) Reset() {
	*x = SessionQueryByUserIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionQueryByUserIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionQueryByUserIdReq) ProtoMessage() {}

func (x *SessionQueryByUserIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionQueryByUserIdReq.ProtoReflect.Descriptor instead.
func (*SessionQueryByUserIdReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{43}
}

func (x *SessionQueryByUserIdReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type SessionQueryByUserIdResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  SessionQueryByUserIdResult_ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=imsession.SessionQueryByUserIdResult_ResultCode" json:"code,omitempty"`
	Infos []*SessionInformation                 `protobuf:"bytes,2,rep,name=infos,proto3" json:"infos,omitempty"`
}

func (x *SessionQueryByUserIdResult) Reset() {
	*x = SessionQueryByUserIdResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionQueryByUserIdResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionQueryByUserIdResult) ProtoMessage() {}

func (x *SessionQueryByUserIdResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionQueryByUserIdResult.ProtoReflect.Descriptor instead.
func (*SessionQueryByUserIdResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{44}
}

func (x *SessionQueryByUserIdResult) GetCode() SessionQueryByUserIdResult_ResultCode {
	if x != nil {
		return x.Code
	}
	return SessionQueryByUserIdResult_Success
}

func (x *SessionQueryByUserIdResult) GetInfos() []*SessionInformation {
	if x != nil {
		return x.Infos
	}
	return nil
}

type SessionQueryBasicInfoByKeyIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId uint64 `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *SessionQueryBasicInfoByKeyIdReq) Reset() {
	*x = SessionQueryBasicInfoByKeyIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionQueryBasicInfoByKeyIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionQueryBasicInfoByKeyIdReq) ProtoMessage() {}

func (x *SessionQueryBasicInfoByKeyIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionQueryBasicInfoByKeyIdReq.ProtoReflect.Descriptor instead.
func (*SessionQueryBasicInfoByKeyIdReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{45}
}

func (x *SessionQueryBasicInfoByKeyIdReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

type SessionQueryBasicInfoByKeyIdResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        SessionQueryBasicInfoByKeyIdResult_ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=imsession.SessionQueryBasicInfoByKeyIdResult_ResultCode" json:"code,omitempty"`
	UserId      int32                                         `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PhoneNumber string                                        `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	AppVersion  string                                        `protobuf:"bytes,4,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
}

func (x *SessionQueryBasicInfoByKeyIdResult) Reset() {
	*x = SessionQueryBasicInfoByKeyIdResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionQueryBasicInfoByKeyIdResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionQueryBasicInfoByKeyIdResult) ProtoMessage() {}

func (x *SessionQueryBasicInfoByKeyIdResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionQueryBasicInfoByKeyIdResult.ProtoReflect.Descriptor instead.
func (*SessionQueryBasicInfoByKeyIdResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{46}
}

func (x *SessionQueryBasicInfoByKeyIdResult) GetCode() SessionQueryBasicInfoByKeyIdResult_ResultCode {
	if x != nil {
		return x.Code
	}
	return SessionQueryBasicInfoByKeyIdResult_Success
}

func (x *SessionQueryBasicInfoByKeyIdResult) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SessionQueryBasicInfoByKeyIdResult) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *SessionQueryBasicInfoByKeyIdResult) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

type SessionQueryDesByKeyIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId uint64 `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *SessionQueryDesByKeyIdReq) Reset() {
	*x = SessionQueryDesByKeyIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionQueryDesByKeyIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionQueryDesByKeyIdReq) ProtoMessage() {}

func (x *SessionQueryDesByKeyIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionQueryDesByKeyIdReq.ProtoReflect.Descriptor instead.
func (*SessionQueryDesByKeyIdReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{47}
}

func (x *SessionQueryDesByKeyIdReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

type SessionQueryDesByKeyIdResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          SessionQueryDesByKeyIdResult_ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=imsession.SessionQueryDesByKeyIdResult_ResultCode" json:"code,omitempty"`
	DeviceModel   string                                  `protobuf:"bytes,2,opt,name=device_model,json=deviceModel,proto3" json:"device_model,omitempty"`
	SystemVersion string                                  `protobuf:"bytes,3,opt,name=system_version,json=systemVersion,proto3" json:"system_version,omitempty"`
	AppVersion    string                                  `protobuf:"bytes,4,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
}

func (x *SessionQueryDesByKeyIdResult) Reset() {
	*x = SessionQueryDesByKeyIdResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionQueryDesByKeyIdResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionQueryDesByKeyIdResult) ProtoMessage() {}

func (x *SessionQueryDesByKeyIdResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionQueryDesByKeyIdResult.ProtoReflect.Descriptor instead.
func (*SessionQueryDesByKeyIdResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{48}
}

func (x *SessionQueryDesByKeyIdResult) GetCode() SessionQueryDesByKeyIdResult_ResultCode {
	if x != nil {
		return x.Code
	}
	return SessionQueryDesByKeyIdResult_Success
}

func (x *SessionQueryDesByKeyIdResult) GetDeviceModel() string {
	if x != nil {
		return x.DeviceModel
	}
	return ""
}

func (x *SessionQueryDesByKeyIdResult) GetSystemVersion() string {
	if x != nil {
		return x.SystemVersion
	}
	return ""
}

func (x *SessionQueryDesByKeyIdResult) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

type SessionDeleteAuthKeysByUserIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *SessionDeleteAuthKeysByUserIdReq) Reset() {
	*x = SessionDeleteAuthKeysByUserIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionDeleteAuthKeysByUserIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionDeleteAuthKeysByUserIdReq) ProtoMessage() {}

func (x *SessionDeleteAuthKeysByUserIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionDeleteAuthKeysByUserIdReq.ProtoReflect.Descriptor instead.
func (*SessionDeleteAuthKeysByUserIdReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{49}
}

func (x *SessionDeleteAuthKeysByUserIdReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type SessionDeleteAuthKeysByUserIdResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   SessionDeleteAuthKeysByUserIdResult_ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=imsession.SessionDeleteAuthKeysByUserIdResult_ResultCode" json:"code,omitempty"`
	KeyIds []int64                                        `protobuf:"varint,2,rep,packed,name=keyIds,proto3" json:"keyIds,omitempty"`
}

func (x *SessionDeleteAuthKeysByUserIdResult) Reset() {
	*x = SessionDeleteAuthKeysByUserIdResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionDeleteAuthKeysByUserIdResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionDeleteAuthKeysByUserIdResult) ProtoMessage() {}

func (x *SessionDeleteAuthKeysByUserIdResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionDeleteAuthKeysByUserIdResult.ProtoReflect.Descriptor instead.
func (*SessionDeleteAuthKeysByUserIdResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{50}
}

func (x *SessionDeleteAuthKeysByUserIdResult) GetCode() SessionDeleteAuthKeysByUserIdResult_ResultCode {
	if x != nil {
		return x.Code
	}
	return SessionDeleteAuthKeysByUserIdResult_Success
}

func (x *SessionDeleteAuthKeysByUserIdResult) GetKeyIds() []int64 {
	if x != nil {
		return x.KeyIds
	}
	return nil
}

type SessionUpdatePingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int32  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	KeyId      uint64 `protobuf:"varint,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	PingTime   int64  `protobuf:"varint,3,opt,name=ping_time,json=pingTime,proto3" json:"ping_time,omitempty"`
	UpdateTime bool   `protobuf:"varint,4,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *SessionUpdatePingReq) Reset() {
	*x = SessionUpdatePingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionUpdatePingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionUpdatePingReq) ProtoMessage() {}

func (x *SessionUpdatePingReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionUpdatePingReq.ProtoReflect.Descriptor instead.
func (*SessionUpdatePingReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{51}
}

func (x *SessionUpdatePingReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SessionUpdatePingReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *SessionUpdatePingReq) GetPingTime() int64 {
	if x != nil {
		return x.PingTime
	}
	return 0
}

func (x *SessionUpdatePingReq) GetUpdateTime() bool {
	if x != nil {
		return x.UpdateTime
	}
	return false
}

type SessionUpdatePingReq2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int32  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	KeyId      uint64 `protobuf:"varint,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	PingTime   int64  `protobuf:"varint,3,opt,name=ping_time,json=pingTime,proto3" json:"ping_time,omitempty"`
	UpdateTime bool   `protobuf:"varint,4,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *SessionUpdatePingReq2) Reset() {
	*x = SessionUpdatePingReq2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionUpdatePingReq2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionUpdatePingReq2) ProtoMessage() {}

func (x *SessionUpdatePingReq2) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionUpdatePingReq2.ProtoReflect.Descriptor instead.
func (*SessionUpdatePingReq2) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{52}
}

func (x *SessionUpdatePingReq2) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SessionUpdatePingReq2) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *SessionUpdatePingReq2) GetPingTime() int64 {
	if x != nil {
		return x.PingTime
	}
	return 0
}

func (x *SessionUpdatePingReq2) GetUpdateTime() bool {
	if x != nil {
		return x.UpdateTime
	}
	return false
}

type SessionUpdatePingResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   SessionUpdatePingResult_ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=imsession.SessionUpdatePingResult_ResultCode" json:"code,omitempty"`
	UserId int32                              `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Phone  string                             `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *SessionUpdatePingResult) Reset() {
	*x = SessionUpdatePingResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionUpdatePingResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionUpdatePingResult) ProtoMessage() {}

func (x *SessionUpdatePingResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionUpdatePingResult.ProtoReflect.Descriptor instead.
func (*SessionUpdatePingResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{53}
}

func (x *SessionUpdatePingResult) GetCode() SessionUpdatePingResult_ResultCode {
	if x != nil {
		return x.Code
	}
	return SessionUpdatePingResult_Success
}

func (x *SessionUpdatePingResult) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SessionUpdatePingResult) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

// 25根据keyId获取创建时间
type GetCreatedByKeyIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId uint64 `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *GetCreatedByKeyIdReq) Reset() {
	*x = GetCreatedByKeyIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCreatedByKeyIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreatedByKeyIdReq) ProtoMessage() {}

func (x *GetCreatedByKeyIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreatedByKeyIdReq.ProtoReflect.Descriptor instead.
func (*GetCreatedByKeyIdReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{54}
}

func (x *GetCreatedByKeyIdReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

// 25根据keyId获取创建时间
type GetCreatedByKeyIdResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    GetCreatedByKeyIdResult_ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=imsession.GetCreatedByKeyIdResult_ResultCode" json:"code,omitempty"`
	Created int32                              `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"` //创建时间
}

func (x *GetCreatedByKeyIdResult) Reset() {
	*x = GetCreatedByKeyIdResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCreatedByKeyIdResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreatedByKeyIdResult) ProtoMessage() {}

func (x *GetCreatedByKeyIdResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreatedByKeyIdResult.ProtoReflect.Descriptor instead.
func (*GetCreatedByKeyIdResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{55}
}

func (x *GetCreatedByKeyIdResult) GetCode() GetCreatedByKeyIdResult_ResultCode {
	if x != nil {
		return x.Code
	}
	return GetCreatedByKeyIdResult_Success
}

func (x *GetCreatedByKeyIdResult) GetCreated() int32 {
	if x != nil {
		return x.Created
	}
	return 0
}

// 26更新app完整校验字段
type UpdateSelfAppHashReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId   uint64 `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	AppHash string `protobuf:"bytes,2,opt,name=app_hash,json=appHash,proto3" json:"app_hash,omitempty"` //完整校验hash
}

func (x *UpdateSelfAppHashReq) Reset() {
	*x = UpdateSelfAppHashReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSelfAppHashReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSelfAppHashReq) ProtoMessage() {}

func (x *UpdateSelfAppHashReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSelfAppHashReq.ProtoReflect.Descriptor instead.
func (*UpdateSelfAppHashReq) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{56}
}

func (x *UpdateSelfAppHashReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *UpdateSelfAppHashReq) GetAppHash() string {
	if x != nil {
		return x.AppHash
	}
	return ""
}

// 26更新app完整校验字段
type UpdateSelfAppHashResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code UpdateSelfAppHashResult_ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=imsession.UpdateSelfAppHashResult_ResultCode" json:"code,omitempty"`
}

func (x *UpdateSelfAppHashResult) Reset() {
	*x = UpdateSelfAppHashResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsession_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSelfAppHashResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSelfAppHashResult) ProtoMessage() {}

func (x *UpdateSelfAppHashResult) ProtoReflect() protoreflect.Message {
	mi := &file_imsession_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSelfAppHashResult.ProtoReflect.Descriptor instead.
func (*UpdateSelfAppHashResult) Descriptor() ([]byte, []int) {
	return file_imsession_proto_rawDescGZIP(), []int{57}
}

func (x *UpdateSelfAppHashResult) GetCode() UpdateSelfAppHashResult_ResultCode {
	if x != nil {
		return x.Code
	}
	return UpdateSelfAppHashResult_Success
}

var File_imsession_proto protoreflect.FileDescriptor

var file_imsession_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x14,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0x2f, 0x0a,
	0x15, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x75, 0x63, 0x65, 0x73, 0x73, 0x22, 0x44,
	0x0a, 0x0e, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x7e, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3b, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2c, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x01, 0x22, 0x27, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0x9b, 0x01,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x3b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x27, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x2c, 0x0a,
	0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x22, 0x32, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79,
	0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22,
	0x43, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0xa7, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a,
	0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b,
	0x65, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x19,
	0x0a, 0x17, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xab, 0x02, 0x0a, 0x18, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x25, 0x0a, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70,
	0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x1b, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x45, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2c,
	0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x22, 0xc5, 0x01, 0x0a,
	0x1e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x26, 0x0a, 0x0f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x75, 0x73, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x21, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4b, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2c, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x10, 0x01, 0x22, 0xcb, 0x01, 0x0a, 0x24, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x48,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x26,
	0x0a, 0x0f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0xda, 0x01, 0x0a, 0x27, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x48, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x51, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e,
	0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x48,
	0x75, 0x61, 0x77, 0x65, 0x69, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6b,
	0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b, 0x65, 0x79,
	0x49, 0x64, 0x22, 0x2c, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01,
	0x22, 0x51, 0x0a, 0x19, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x1c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x46, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x32, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2c, 0x0a, 0x0a,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x22, 0x34, 0x0a, 0x1b, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x70, 0x69, 0x49, 0x44, 0x62,
	0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64,
	0x22, 0x5e, 0x0a, 0x1e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x41, 0x70, 0x69, 0x49, 0x44, 0x62, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x35, 0x0a, 0x1c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x1f, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x79, 0x4b,
	0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x1f, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x48, 0x61, 0x6e,
	0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a,
	0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b,
	0x65, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x22,
	0xb8, 0x01, 0x0a, 0x22, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x44, 0x6f, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x4a, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36,
	0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68,
	0x61, 0x6b, 0x65, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x46, 0x61,
	0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2c, 0x0a, 0x08,
	0x46, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x69, 0x64, 0x10, 0x01, 0x22, 0x29, 0x0a, 0x10, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x63, 0x51, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15,
	0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x63, 0x51, 0x74, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3d, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x69, 0x6d,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x63, 0x51, 0x74, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x71, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x71, 0x74, 0x73, 0x22, 0x2c,
	0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x22, 0x95, 0x01, 0x0a,
	0x1a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6b,
	0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b, 0x65, 0x79,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4b,
	0x65, 0x79, 0x49, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x1d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x47, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x2c, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x22, 0x73, 0x0a,
	0x1e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x21, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x4b, 0x65, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2c, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0x01, 0x22, 0x48, 0x0a, 0x16, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a,
	0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b,
	0x65, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8e, 0x01,
	0x0a, 0x19, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x43, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x69, 0x6d, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x2c, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x22, 0x4f,
	0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x61, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x2e, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x61, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x22,
	0x36, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x42, 0x61, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x80, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x42,
	0x61, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3c,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x69,
	0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x61, 0x6e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2c, 0x0a, 0x0a,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x22, 0x49, 0x0a, 0x17, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x4b, 0x65, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x44, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x30, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x4b, 0x65,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2c, 0x0a, 0x0a, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x22, 0x2f, 0x0a, 0x16, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0xc1, 0x01, 0x0a, 0x19, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x43, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79,
	0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6d, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x2c, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x22, 0x8c, 0x05,
	0x0a, 0x12, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x71, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x71, 0x74, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x75, 0x73, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75,
	0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x22, 0xc0, 0x01, 0x0a,
	0x16, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69,
	0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x32, 0x0a, 0x15, 0x69,
	0x73, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x73, 0x50, 0x72,
	0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x8e, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x43, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x69, 0x6d,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x2c, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01,
	0x22, 0x32, 0x0a, 0x17, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xc5, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x44, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x30, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x2c,
	0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x22, 0x38, 0x0a, 0x1f,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0xfd, 0x01, 0x0a, 0x22, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4c, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x69, 0x6d,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x4b,
	0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70,
	0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x2c, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x22, 0x32, 0x0a, 0x19, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x73, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0xff, 0x01, 0x0a, 0x1c, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x73, 0x42, 0x79,
	0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x46, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x69, 0x6d, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x44, 0x65, 0x73, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x2c,
	0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x22, 0x3b, 0x0a, 0x20,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xba, 0x01, 0x0a, 0x23, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x4b,
	0x65, 0x79, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x4d, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x39, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79,
	0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x06, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x73, 0x22, 0x2c, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x85, 0x01,
	0x0a, 0x15, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x32, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x69, 0x6e, 0x67, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x69, 0x6e, 0x67,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x41, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2d, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x22, 0x45, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10,
	0x01, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x68, 0x6b, 0x65, 0x79, 0x55, 0x6e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x10, 0x02, 0x22, 0x2d, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x41, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x22, 0x2c, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01,
	0x22, 0x48, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x41, 0x70,
	0x70, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x48, 0x61, 0x73, 0x68, 0x22, 0x8a, 0x01, 0x0a, 0x17, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x41, 0x70, 0x70, 0x48, 0x61, 0x73, 0x68,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x41, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x41, 0x70, 0x70, 0x48, 0x61,
	0x73, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2c, 0x0a, 0x0a, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x32, 0x9e, 0x17, 0x0a, 0x09, 0x69, 0x6d, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x11, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4b, 0x65,
	0x79, 0x49, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x69, 0x6d, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4b, 0x65, 0x79, 0x49,
	0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x69, 0x6d,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4b, 0x65, 0x79,
	0x49, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x66, 0x0a, 0x15, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e,
	0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x1b, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x29, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x2c, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x00, 0x12, 0x8a, 0x01, 0x0a, 0x21, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x48, 0x75, 0x61, 0x77, 0x65,
	0x69, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x48, 0x75, 0x61, 0x77, 0x65, 0x69, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x32, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x48, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x69,
	0x0a, 0x16, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x24, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x27,
	0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x13, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x12, 0x21, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67,
	0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x1c, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x48, 0x61,
	0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x2a, 0x2e, 0x69, 0x6d,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65,
	0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x44, 0x6f, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x17, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x42, 0x79, 0x4b, 0x65,
	0x79, 0x49, 0x64, 0x12, 0x25, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x69, 0x6d, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x1b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74,
	0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x29, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x2c, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x45, 0x78, 0x63,
	0x65, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00,
	0x12, 0x63, 0x0a, 0x14, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x22, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x69,
	0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x63, 0x51, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x63, 0x51, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x63, 0x51, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x13, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x21, 0x2e, 0x69,
	0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x24, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x14, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x22, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x1c,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x2a, 0x2e, 0x69,
	0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79,
	0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x16, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x73, 0x42, 0x79, 0x4b, 0x65,
	0x79, 0x49, 0x64, 0x12, 0x24, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x73, 0x42,
	0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x69, 0x6d, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x44, 0x65, 0x73, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x1d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x11, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x2e, 0x69, 0x6d, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x69, 0x6d, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00,
	0x12, 0x5c, 0x0a, 0x12, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x69, 0x6e, 0x67, 0x32, 0x12, 0x20, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x32, 0x1a, 0x22, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x60,
	0x0a, 0x13, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x12, 0x21, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00,
	0x12, 0x6f, 0x0a, 0x18, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x41, 0x70, 0x69, 0x49, 0x44, 0x62, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x26, 0x2e, 0x69,
	0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x70, 0x69, 0x49, 0x44, 0x62, 0x79, 0x4b, 0x65, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x70, 0x69,
	0x49, 0x44, 0x62, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x00, 0x12, 0x72, 0x0a, 0x19, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x27,
	0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x79, 0x4b,
	0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x11, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x1f, 0x2e, 0x69, 0x6d, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x69, 0x6d,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x42, 0x61, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x1a, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64,
	0x64, 0x42, 0x61, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e,
	0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x61, 0x6e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x51,
	0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x61, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x1c, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x42, 0x61, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f,
	0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x42, 0x61, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x00, 0x12, 0x69, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x24, 0x2e, 0x69, 0x6d,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x27, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x4b,
	0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b,
	0x53, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x2e, 0x69, 0x6d,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e,
	0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x1c, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00,
	0x12, 0x5a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4b, 0x65,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4b,
	0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x41, 0x70, 0x70, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x1f, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x41, 0x70, 0x70, 0x48, 0x61, 0x73, 0x68, 0x52,
	0x65, 0x71, 0x1a, 0x22, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x41, 0x70, 0x70, 0x48, 0x61, 0x73, 0x68,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x42, 0x1b, 0x5a, 0x19, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x69, 0x6d, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_imsession_proto_rawDescOnce sync.Once
	file_imsession_proto_rawDescData = file_imsession_proto_rawDesc
)

func file_imsession_proto_rawDescGZIP() []byte {
	file_imsession_proto_rawDescOnce.Do(func() {
		file_imsession_proto_rawDescData = protoimpl.X.CompressGZIP(file_imsession_proto_rawDescData)
	})
	return file_imsession_proto_rawDescData
}

var file_imsession_proto_enumTypes = make([]protoimpl.EnumInfo, 22)
var file_imsession_proto_msgTypes = make([]protoimpl.MessageInfo, 58)
var file_imsession_proto_goTypes = []interface{}{
	(SetLangCodeResult_ResultCode)(0),                       // 0: imsession.SetLangCodeResult.ResultCode
	(GetLangCodeResult_ResultCode)(0),                       // 1: imsession.GetLangCodeResult.ResultCode
	(SessionInitConnectionResult_ResultCode)(0),             // 2: imsession.SessionInitConnectionResult.ResultCode
	(SessionUpdateRegisterDeviceResult_ResultCode)(0),       // 3: imsession.SessionUpdateRegisterDeviceResult.ResultCode
	(SessionUpdateRegisterHuaweiDeviceResult_ResultCode)(0), // 4: imsession.SessionUpdateRegisterHuaweiDeviceResult.ResultCode
	(SessionUpdateUserPhoneResult_ResultCode)(0),            // 5: imsession.SessionUpdateUserPhoneResult.ResultCode
	(SessionUpdateOnHandshakeDoneResult_FailCode)(0),        // 6: imsession.SessionUpdateOnHandshakeDoneResult.FailCode
	(SessionIncQtsResult_ResultCode)(0),                     // 7: imsession.SessionIncQtsResult.ResultCode
	(SessionTerminateByKeyIdResult_ResultCode)(0),           // 8: imsession.SessionTerminateByKeyIdResult.ResultCode
	(SessionTerminateExceptKeyIdResult_ResultCode)(0),       // 9: imsession.SessionTerminateExceptKeyIdResult.ResultCode
	(SessionUpdateLogoutResult_ResultCode)(0),               // 10: imsession.SessionUpdateLogoutResult.ResultCode
	(AddBanDeviceResult_ResultCode)(0),                      // 11: imsession.AddBanDeviceResult.ResultCode
	(SessionDeleteByKeyIdResult_ResultCode)(0),              // 12: imsession.SessionDeleteByKeyIdResult.ResultCode
	(SessionQueryByKeyIdResult_ResultCode)(0),               // 13: imsession.SessionQueryByKeyIdResult.ResultCode
	(SessionUpdateSignInResult_ResultCode)(0),               // 14: imsession.SessionUpdateSignInResult.ResultCode
	(SessionQueryByUserIdResult_ResultCode)(0),              // 15: imsession.SessionQueryByUserIdResult.ResultCode
	(SessionQueryBasicInfoByKeyIdResult_ResultCode)(0),      // 16: imsession.SessionQueryBasicInfoByKeyIdResult.ResultCode
	(SessionQueryDesByKeyIdResult_ResultCode)(0),            // 17: imsession.SessionQueryDesByKeyIdResult.ResultCode
	(SessionDeleteAuthKeysByUserIdResult_ResultCode)(0),     // 18: imsession.SessionDeleteAuthKeysByUserIdResult.ResultCode
	(SessionUpdatePingResult_ResultCode)(0),                 // 19: imsession.SessionUpdatePingResult.ResultCode
	(GetCreatedByKeyIdResult_ResultCode)(0),                 // 20: imsession.GetCreatedByKeyIdResult.ResultCode
	(UpdateSelfAppHashResult_ResultCode)(0),                 // 21: imsession.UpdateSelfAppHashResult.ResultCode
	(*ClearKeyIdSessionReq)(nil),                            // 22: imsession.ClearKeyIdSessionReq
	(*ClearKeyIdSessionResp)(nil),                           // 23: imsession.ClearKeyIdSessionResp
	(*SetLangCodeReq)(nil),                                  // 24: imsession.SetLangCodeReq
	(*SetLangCodeResult)(nil),                               // 25: imsession.SetLangCodeResult
	(*GetLangCodeReq)(nil),                                  // 26: imsession.GetLangCodeReq
	(*GetLangCodeResult)(nil),                               // 27: imsession.GetLangCodeResult
	(*GetUniqueNumberByKeyIdReq)(nil),                       // 28: imsession.GetUniqueNumberByKeyIdReq
	(*GetUniqueNumberByKeyIdResult)(nil),                    // 29: imsession.GetUniqueNumberByKeyIdResult
	(*SessionDisconnectReq)(nil),                            // 30: imsession.SessionDisconnectReq
	(*SessionDisconnectResult)(nil),                         // 31: imsession.SessionDisconnectResult
	(*SessionInitConnectionReq)(nil),                        // 32: imsession.SessionInitConnectionReq
	(*SessionInitConnectionResult)(nil),                     // 33: imsession.SessionInitConnectionResult
	(*SessionUpdateRegisterDeviceReq)(nil),                  // 34: imsession.SessionUpdateRegisterDeviceReq
	(*SessionUpdateRegisterDeviceResult)(nil),               // 35: imsession.SessionUpdateRegisterDeviceResult
	(*SessionUpdateRegisterHuaweiDeviceReq)(nil),            // 36: imsession.SessionUpdateRegisterHuaweiDeviceReq
	(*SessionUpdateRegisterHuaweiDeviceResult)(nil),         // 37: imsession.SessionUpdateRegisterHuaweiDeviceResult
	(*SessionUpdateUserPhoneReq)(nil),                       // 38: imsession.SessionUpdateUserPhoneReq
	(*SessionUpdateUserPhoneResult)(nil),                    // 39: imsession.SessionUpdateUserPhoneResult
	(*SessionQueryApiIDbyKeyIdReq)(nil),                     // 40: imsession.SessionQueryApiIDbyKeyIdReq
	(*SessionQueryApiIDbyKeyIdResult)(nil),                  // 41: imsession.SessionQueryApiIDbyKeyIdResult
	(*SessionQueryUserIdByKeyIdReq)(nil),                    // 42: imsession.SessionQueryUserIdByKeyIdReq
	(*SessionQueryUserIdByKeyIdResult)(nil),                 // 43: imsession.SessionQueryUserIdByKeyIdResult
	(*SessionUpdateOnHandshakeDoneReq)(nil),                 // 44: imsession.SessionUpdateOnHandshakeDoneReq
	(*SessionUpdateOnHandshakeDoneResult)(nil),              // 45: imsession.SessionUpdateOnHandshakeDoneResult
	(*SessionIncQtsReq)(nil),                                // 46: imsession.SessionIncQtsReq
	(*SessionIncQtsResult)(nil),                             // 47: imsession.SessionIncQtsResult
	(*SessionTerminateByKeyIdReq)(nil),                      // 48: imsession.SessionTerminateByKeyIdReq
	(*SessionTerminateByKeyIdResult)(nil),                   // 49: imsession.SessionTerminateByKeyIdResult
	(*SessionTerminateExceptKeyIdReq)(nil),                  // 50: imsession.SessionTerminateExceptKeyIdReq
	(*SessionTerminateExceptKeyIdResult)(nil),               // 51: imsession.SessionTerminateExceptKeyIdResult
	(*SessionUpdateLogoutReq)(nil),                          // 52: imsession.SessionUpdateLogoutReq
	(*SessionUpdateLogoutResult)(nil),                       // 53: imsession.SessionUpdateLogoutResult
	(*CheckBanDeviceReq)(nil),                               // 54: imsession.CheckBanDeviceReq
	(*CheckBanDeviceResult)(nil),                            // 55: imsession.CheckBanDeviceResult
	(*AddBanDeviceReq)(nil),                                 // 56: imsession.AddBanDeviceReq
	(*AddBanDeviceResult)(nil),                              // 57: imsession.AddBanDeviceResult
	(*SessionDeleteByKeyIdReq)(nil),                         // 58: imsession.SessionDeleteByKeyIdReq
	(*SessionDeleteByKeyIdResult)(nil),                      // 59: imsession.SessionDeleteByKeyIdResult
	(*SessionQueryByKeyIdReq)(nil),                          // 60: imsession.SessionQueryByKeyIdReq
	(*SessionQueryByKeyIdResult)(nil),                       // 61: imsession.SessionQueryByKeyIdResult
	(*SessionInformation)(nil),                              // 62: imsession.SessionInformation
	(*SessionUpdateSignInReq)(nil),                          // 63: imsession.SessionUpdateSignInReq
	(*SessionUpdateSignInResult)(nil),                       // 64: imsession.SessionUpdateSignInResult
	(*SessionQueryByUserIdReq)(nil),                         // 65: imsession.SessionQueryByUserIdReq
	(*SessionQueryByUserIdResult)(nil),                      // 66: imsession.SessionQueryByUserIdResult
	(*SessionQueryBasicInfoByKeyIdReq)(nil),                 // 67: imsession.SessionQueryBasicInfoByKeyIdReq
	(*SessionQueryBasicInfoByKeyIdResult)(nil),              // 68: imsession.SessionQueryBasicInfoByKeyIdResult
	(*SessionQueryDesByKeyIdReq)(nil),                       // 69: imsession.SessionQueryDesByKeyIdReq
	(*SessionQueryDesByKeyIdResult)(nil),                    // 70: imsession.SessionQueryDesByKeyIdResult
	(*SessionDeleteAuthKeysByUserIdReq)(nil),                // 71: imsession.SessionDeleteAuthKeysByUserIdReq
	(*SessionDeleteAuthKeysByUserIdResult)(nil),             // 72: imsession.SessionDeleteAuthKeysByUserIdResult
	(*SessionUpdatePingReq)(nil),                            // 73: imsession.SessionUpdatePingReq
	(*SessionUpdatePingReq2)(nil),                           // 74: imsession.SessionUpdatePingReq2
	(*SessionUpdatePingResult)(nil),                         // 75: imsession.SessionUpdatePingResult
	(*GetCreatedByKeyIdReq)(nil),                            // 76: imsession.GetCreatedByKeyIdReq
	(*GetCreatedByKeyIdResult)(nil),                         // 77: imsession.GetCreatedByKeyIdResult
	(*UpdateSelfAppHashReq)(nil),                            // 78: imsession.UpdateSelfAppHashReq
	(*UpdateSelfAppHashResult)(nil),                         // 79: imsession.UpdateSelfAppHashResult
}
var file_imsession_proto_depIdxs = []int32{
	0,  // 0: imsession.SetLangCodeResult.code:type_name -> imsession.SetLangCodeResult.ResultCode
	1,  // 1: imsession.GetLangCodeResult.code:type_name -> imsession.GetLangCodeResult.ResultCode
	2,  // 2: imsession.SessionInitConnectionResult.code:type_name -> imsession.SessionInitConnectionResult.ResultCode
	3,  // 3: imsession.SessionUpdateRegisterDeviceResult.code:type_name -> imsession.SessionUpdateRegisterDeviceResult.ResultCode
	4,  // 4: imsession.SessionUpdateRegisterHuaweiDeviceResult.code:type_name -> imsession.SessionUpdateRegisterHuaweiDeviceResult.ResultCode
	5,  // 5: imsession.SessionUpdateUserPhoneResult.code:type_name -> imsession.SessionUpdateUserPhoneResult.ResultCode
	6,  // 6: imsession.SessionUpdateOnHandshakeDoneResult.code:type_name -> imsession.SessionUpdateOnHandshakeDoneResult.FailCode
	7,  // 7: imsession.SessionIncQtsResult.code:type_name -> imsession.SessionIncQtsResult.ResultCode
	8,  // 8: imsession.SessionTerminateByKeyIdResult.code:type_name -> imsession.SessionTerminateByKeyIdResult.ResultCode
	9,  // 9: imsession.SessionTerminateExceptKeyIdResult.code:type_name -> imsession.SessionTerminateExceptKeyIdResult.ResultCode
	10, // 10: imsession.SessionUpdateLogoutResult.code:type_name -> imsession.SessionUpdateLogoutResult.ResultCode
	11, // 11: imsession.AddBanDeviceResult.code:type_name -> imsession.AddBanDeviceResult.ResultCode
	12, // 12: imsession.SessionDeleteByKeyIdResult.code:type_name -> imsession.SessionDeleteByKeyIdResult.ResultCode
	13, // 13: imsession.SessionQueryByKeyIdResult.code:type_name -> imsession.SessionQueryByKeyIdResult.ResultCode
	62, // 14: imsession.SessionQueryByKeyIdResult.info:type_name -> imsession.SessionInformation
	14, // 15: imsession.SessionUpdateSignInResult.code:type_name -> imsession.SessionUpdateSignInResult.ResultCode
	15, // 16: imsession.SessionQueryByUserIdResult.code:type_name -> imsession.SessionQueryByUserIdResult.ResultCode
	62, // 17: imsession.SessionQueryByUserIdResult.infos:type_name -> imsession.SessionInformation
	16, // 18: imsession.SessionQueryBasicInfoByKeyIdResult.code:type_name -> imsession.SessionQueryBasicInfoByKeyIdResult.ResultCode
	17, // 19: imsession.SessionQueryDesByKeyIdResult.code:type_name -> imsession.SessionQueryDesByKeyIdResult.ResultCode
	18, // 20: imsession.SessionDeleteAuthKeysByUserIdResult.code:type_name -> imsession.SessionDeleteAuthKeysByUserIdResult.ResultCode
	19, // 21: imsession.SessionUpdatePingResult.code:type_name -> imsession.SessionUpdatePingResult.ResultCode
	20, // 22: imsession.GetCreatedByKeyIdResult.code:type_name -> imsession.GetCreatedByKeyIdResult.ResultCode
	21, // 23: imsession.UpdateSelfAppHashResult.code:type_name -> imsession.UpdateSelfAppHashResult.ResultCode
	22, // 24: imsession.imsession.ClearKeyIdSession:input_type -> imsession.ClearKeyIdSessionReq
	32, // 25: imsession.imsession.SessionInitConnection:input_type -> imsession.SessionInitConnectionReq
	34, // 26: imsession.imsession.SessionUpdateRegisterDevice:input_type -> imsession.SessionUpdateRegisterDeviceReq
	36, // 27: imsession.imsession.SessionUpdateRegisterHuaweiDevice:input_type -> imsession.SessionUpdateRegisterHuaweiDeviceReq
	38, // 28: imsession.imsession.SessionUpdateUserPhone:input_type -> imsession.SessionUpdateUserPhoneReq
	52, // 29: imsession.imsession.SessionUpdateLogout:input_type -> imsession.SessionUpdateLogoutReq
	44, // 30: imsession.imsession.SessionUpdateOnHandshakeDone:input_type -> imsession.SessionUpdateOnHandshakeDoneReq
	48, // 31: imsession.imsession.SessionTerminateByKeyId:input_type -> imsession.SessionTerminateByKeyIdReq
	50, // 32: imsession.imsession.SessionTerminateExceptKeyId:input_type -> imsession.SessionTerminateExceptKeyIdReq
	58, // 33: imsession.imsession.SessionDeleteByKeyId:input_type -> imsession.SessionDeleteByKeyIdReq
	46, // 34: imsession.imsession.SessionIncQts:input_type -> imsession.SessionIncQtsReq
	60, // 35: imsession.imsession.SessionQueryByKeyId:input_type -> imsession.SessionQueryByKeyIdReq
	65, // 36: imsession.imsession.SessionQueryByUserId:input_type -> imsession.SessionQueryByUserIdReq
	67, // 37: imsession.imsession.SessionQueryBasicInfoByKeyId:input_type -> imsession.SessionQueryBasicInfoByKeyIdReq
	69, // 38: imsession.imsession.SessionQueryDesByKeyId:input_type -> imsession.SessionQueryDesByKeyIdReq
	71, // 39: imsession.imsession.SessionDeleteAuthKeysByUserId:input_type -> imsession.SessionDeleteAuthKeysByUserIdReq
	73, // 40: imsession.imsession.SessionUpdatePing:input_type -> imsession.SessionUpdatePingReq
	74, // 41: imsession.imsession.SessionUpdatePing2:input_type -> imsession.SessionUpdatePingReq2
	63, // 42: imsession.imsession.SessionUpdateSignIn:input_type -> imsession.SessionUpdateSignInReq
	40, // 43: imsession.imsession.SessionQueryApiIDbyKeyId:input_type -> imsession.SessionQueryApiIDbyKeyIdReq
	42, // 44: imsession.imsession.SessionQueryUserIdByKeyId:input_type -> imsession.SessionQueryUserIdByKeyIdReq
	30, // 45: imsession.imsession.SessionDisconnect:input_type -> imsession.SessionDisconnectReq
	56, // 46: imsession.imsession.AddBanDevice:input_type -> imsession.AddBanDeviceReq
	54, // 47: imsession.imsession.CheckBanDevice:input_type -> imsession.CheckBanDeviceReq
	28, // 48: imsession.imsession.GetUniqueNumberByKeyId:input_type -> imsession.GetUniqueNumberByKeyIdReq
	24, // 49: imsession.imsession.SetLangCode:input_type -> imsession.SetLangCodeReq
	26, // 50: imsession.imsession.GetLangCode:input_type -> imsession.GetLangCodeReq
	76, // 51: imsession.imsession.GetCreatedByKeyId:input_type -> imsession.GetCreatedByKeyIdReq
	78, // 52: imsession.imsession.UpdateSelfAppHash:input_type -> imsession.UpdateSelfAppHashReq
	23, // 53: imsession.imsession.ClearKeyIdSession:output_type -> imsession.ClearKeyIdSessionResp
	33, // 54: imsession.imsession.SessionInitConnection:output_type -> imsession.SessionInitConnectionResult
	35, // 55: imsession.imsession.SessionUpdateRegisterDevice:output_type -> imsession.SessionUpdateRegisterDeviceResult
	37, // 56: imsession.imsession.SessionUpdateRegisterHuaweiDevice:output_type -> imsession.SessionUpdateRegisterHuaweiDeviceResult
	39, // 57: imsession.imsession.SessionUpdateUserPhone:output_type -> imsession.SessionUpdateUserPhoneResult
	53, // 58: imsession.imsession.SessionUpdateLogout:output_type -> imsession.SessionUpdateLogoutResult
	45, // 59: imsession.imsession.SessionUpdateOnHandshakeDone:output_type -> imsession.SessionUpdateOnHandshakeDoneResult
	49, // 60: imsession.imsession.SessionTerminateByKeyId:output_type -> imsession.SessionTerminateByKeyIdResult
	51, // 61: imsession.imsession.SessionTerminateExceptKeyId:output_type -> imsession.SessionTerminateExceptKeyIdResult
	59, // 62: imsession.imsession.SessionDeleteByKeyId:output_type -> imsession.SessionDeleteByKeyIdResult
	47, // 63: imsession.imsession.SessionIncQts:output_type -> imsession.SessionIncQtsResult
	61, // 64: imsession.imsession.SessionQueryByKeyId:output_type -> imsession.SessionQueryByKeyIdResult
	66, // 65: imsession.imsession.SessionQueryByUserId:output_type -> imsession.SessionQueryByUserIdResult
	68, // 66: imsession.imsession.SessionQueryBasicInfoByKeyId:output_type -> imsession.SessionQueryBasicInfoByKeyIdResult
	70, // 67: imsession.imsession.SessionQueryDesByKeyId:output_type -> imsession.SessionQueryDesByKeyIdResult
	72, // 68: imsession.imsession.SessionDeleteAuthKeysByUserId:output_type -> imsession.SessionDeleteAuthKeysByUserIdResult
	75, // 69: imsession.imsession.SessionUpdatePing:output_type -> imsession.SessionUpdatePingResult
	75, // 70: imsession.imsession.SessionUpdatePing2:output_type -> imsession.SessionUpdatePingResult
	64, // 71: imsession.imsession.SessionUpdateSignIn:output_type -> imsession.SessionUpdateSignInResult
	41, // 72: imsession.imsession.SessionQueryApiIDbyKeyId:output_type -> imsession.SessionQueryApiIDbyKeyIdResult
	43, // 73: imsession.imsession.SessionQueryUserIdByKeyId:output_type -> imsession.SessionQueryUserIdByKeyIdResult
	31, // 74: imsession.imsession.SessionDisconnect:output_type -> imsession.SessionDisconnectResult
	57, // 75: imsession.imsession.AddBanDevice:output_type -> imsession.AddBanDeviceResult
	55, // 76: imsession.imsession.CheckBanDevice:output_type -> imsession.CheckBanDeviceResult
	29, // 77: imsession.imsession.GetUniqueNumberByKeyId:output_type -> imsession.GetUniqueNumberByKeyIdResult
	25, // 78: imsession.imsession.SetLangCode:output_type -> imsession.SetLangCodeResult
	27, // 79: imsession.imsession.GetLangCode:output_type -> imsession.GetLangCodeResult
	77, // 80: imsession.imsession.GetCreatedByKeyId:output_type -> imsession.GetCreatedByKeyIdResult
	79, // 81: imsession.imsession.UpdateSelfAppHash:output_type -> imsession.UpdateSelfAppHashResult
	53, // [53:82] is the sub-list for method output_type
	24, // [24:53] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_imsession_proto_init() }
func file_imsession_proto_init() {
	if File_imsession_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_imsession_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearKeyIdSessionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearKeyIdSessionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLangCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLangCodeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLangCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLangCodeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUniqueNumberByKeyIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUniqueNumberByKeyIdResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionDisconnectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionDisconnectResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionInitConnectionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionInitConnectionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionUpdateRegisterDeviceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionUpdateRegisterDeviceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionUpdateRegisterHuaweiDeviceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionUpdateRegisterHuaweiDeviceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionUpdateUserPhoneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionUpdateUserPhoneResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionQueryApiIDbyKeyIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionQueryApiIDbyKeyIdResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionQueryUserIdByKeyIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionQueryUserIdByKeyIdResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionUpdateOnHandshakeDoneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionUpdateOnHandshakeDoneResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionIncQtsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionIncQtsResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionTerminateByKeyIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionTerminateByKeyIdResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionTerminateExceptKeyIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionTerminateExceptKeyIdResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionUpdateLogoutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionUpdateLogoutResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckBanDeviceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckBanDeviceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBanDeviceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBanDeviceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionDeleteByKeyIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionDeleteByKeyIdResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionQueryByKeyIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionQueryByKeyIdResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionUpdateSignInReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionUpdateSignInResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionQueryByUserIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionQueryByUserIdResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionQueryBasicInfoByKeyIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionQueryBasicInfoByKeyIdResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionQueryDesByKeyIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionQueryDesByKeyIdResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionDeleteAuthKeysByUserIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionDeleteAuthKeysByUserIdResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionUpdatePingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionUpdatePingReq2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionUpdatePingResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCreatedByKeyIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCreatedByKeyIdResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSelfAppHashReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsession_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSelfAppHashResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_imsession_proto_rawDesc,
			NumEnums:      22,
			NumMessages:   58,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_imsession_proto_goTypes,
		DependencyIndexes: file_imsession_proto_depIdxs,
		EnumInfos:         file_imsession_proto_enumTypes,
		MessageInfos:      file_imsession_proto_msgTypes,
	}.Build()
	File_imsession_proto = out.File
	file_imsession_proto_rawDesc = nil
	file_imsession_proto_goTypes = nil
	file_imsession_proto_depIdxs = nil
}
