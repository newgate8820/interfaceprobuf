// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: phonecall.proto

package infoserver

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PhoneCallClient is the client API for PhoneCall service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PhoneCallClient interface {
	// 电话功能重做
	// phone.acceptCall
	PhoneAcceptCall(ctx context.Context, in *PhoneAcceptCallReq, opts ...grpc.CallOption) (*PhoneAcceptCallResult, error)
	// phone.confirmCall
	PhoneConfirmCall(ctx context.Context, in *PhoneConfirmCallReq, opts ...grpc.CallOption) (*PhoneConfirmCallResult, error)
	// phone.discardCall
	PhoneDiscardCall(ctx context.Context, in *PhoneDiscardCallReq, opts ...grpc.CallOption) (*PhoneDiscardCallResult, error)
	// phone.getCallConfig
	PhoneGetCallConfig(ctx context.Context, in *PhoneGetCallConfigReq, opts ...grpc.CallOption) (*PhoneGetCallConfigResult, error)
	// phone.receivedCall
	PhoneReceivedCall(ctx context.Context, in *PhoneReceivedCallReq, opts ...grpc.CallOption) (*PhoneReceivedCallResult, error)
	// phone.requestCall
	PhoneRequestCall(ctx context.Context, in *PhoneRequestCallReq, opts ...grpc.CallOption) (*PhoneRequestCallResult, error)
	// phone.saveCallDebug
	PhoneSaveCallDebug(ctx context.Context, in *PhoneSaveCallDebugReq, opts ...grpc.CallOption) (*PhoneSaveCallDebugResult, error)
	// phone.setCallRating
	PhoneSetCallRating(ctx context.Context, in *PhoneSetCallRatingReq, opts ...grpc.CallOption) (*PhoneSetCallRatingResult, error)
	// 用户重连或触发getdifference时做检查
	PhoneCheckUpdates(ctx context.Context, in *PhoneCheckUpdatesReq, opts ...grpc.CallOption) (*PhoneCheckUpdatesResult, error)
}

type phoneCallClient struct {
	cc grpc.ClientConnInterface
}

func NewPhoneCallClient(cc grpc.ClientConnInterface) PhoneCallClient {
	return &phoneCallClient{cc}
}

func (c *phoneCallClient) PhoneAcceptCall(ctx context.Context, in *PhoneAcceptCallReq, opts ...grpc.CallOption) (*PhoneAcceptCallResult, error) {
	out := new(PhoneAcceptCallResult)
	err := c.cc.Invoke(ctx, "/infoserver.PhoneCall/PhoneAcceptCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phoneCallClient) PhoneConfirmCall(ctx context.Context, in *PhoneConfirmCallReq, opts ...grpc.CallOption) (*PhoneConfirmCallResult, error) {
	out := new(PhoneConfirmCallResult)
	err := c.cc.Invoke(ctx, "/infoserver.PhoneCall/PhoneConfirmCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phoneCallClient) PhoneDiscardCall(ctx context.Context, in *PhoneDiscardCallReq, opts ...grpc.CallOption) (*PhoneDiscardCallResult, error) {
	out := new(PhoneDiscardCallResult)
	err := c.cc.Invoke(ctx, "/infoserver.PhoneCall/PhoneDiscardCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phoneCallClient) PhoneGetCallConfig(ctx context.Context, in *PhoneGetCallConfigReq, opts ...grpc.CallOption) (*PhoneGetCallConfigResult, error) {
	out := new(PhoneGetCallConfigResult)
	err := c.cc.Invoke(ctx, "/infoserver.PhoneCall/PhoneGetCallConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phoneCallClient) PhoneReceivedCall(ctx context.Context, in *PhoneReceivedCallReq, opts ...grpc.CallOption) (*PhoneReceivedCallResult, error) {
	out := new(PhoneReceivedCallResult)
	err := c.cc.Invoke(ctx, "/infoserver.PhoneCall/PhoneReceivedCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phoneCallClient) PhoneRequestCall(ctx context.Context, in *PhoneRequestCallReq, opts ...grpc.CallOption) (*PhoneRequestCallResult, error) {
	out := new(PhoneRequestCallResult)
	err := c.cc.Invoke(ctx, "/infoserver.PhoneCall/PhoneRequestCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phoneCallClient) PhoneSaveCallDebug(ctx context.Context, in *PhoneSaveCallDebugReq, opts ...grpc.CallOption) (*PhoneSaveCallDebugResult, error) {
	out := new(PhoneSaveCallDebugResult)
	err := c.cc.Invoke(ctx, "/infoserver.PhoneCall/PhoneSaveCallDebug", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phoneCallClient) PhoneSetCallRating(ctx context.Context, in *PhoneSetCallRatingReq, opts ...grpc.CallOption) (*PhoneSetCallRatingResult, error) {
	out := new(PhoneSetCallRatingResult)
	err := c.cc.Invoke(ctx, "/infoserver.PhoneCall/PhoneSetCallRating", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phoneCallClient) PhoneCheckUpdates(ctx context.Context, in *PhoneCheckUpdatesReq, opts ...grpc.CallOption) (*PhoneCheckUpdatesResult, error) {
	out := new(PhoneCheckUpdatesResult)
	err := c.cc.Invoke(ctx, "/infoserver.PhoneCall/PhoneCheckUpdates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PhoneCallServer is the server API for PhoneCall service.
// All implementations must embed UnimplementedPhoneCallServer
// for forward compatibility
type PhoneCallServer interface {
	// 电话功能重做
	// phone.acceptCall
	PhoneAcceptCall(context.Context, *PhoneAcceptCallReq) (*PhoneAcceptCallResult, error)
	// phone.confirmCall
	PhoneConfirmCall(context.Context, *PhoneConfirmCallReq) (*PhoneConfirmCallResult, error)
	// phone.discardCall
	PhoneDiscardCall(context.Context, *PhoneDiscardCallReq) (*PhoneDiscardCallResult, error)
	// phone.getCallConfig
	PhoneGetCallConfig(context.Context, *PhoneGetCallConfigReq) (*PhoneGetCallConfigResult, error)
	// phone.receivedCall
	PhoneReceivedCall(context.Context, *PhoneReceivedCallReq) (*PhoneReceivedCallResult, error)
	// phone.requestCall
	PhoneRequestCall(context.Context, *PhoneRequestCallReq) (*PhoneRequestCallResult, error)
	// phone.saveCallDebug
	PhoneSaveCallDebug(context.Context, *PhoneSaveCallDebugReq) (*PhoneSaveCallDebugResult, error)
	// phone.setCallRating
	PhoneSetCallRating(context.Context, *PhoneSetCallRatingReq) (*PhoneSetCallRatingResult, error)
	// 用户重连或触发getdifference时做检查
	PhoneCheckUpdates(context.Context, *PhoneCheckUpdatesReq) (*PhoneCheckUpdatesResult, error)
	mustEmbedUnimplementedPhoneCallServer()
}

// UnimplementedPhoneCallServer must be embedded to have forward compatible implementations.
type UnimplementedPhoneCallServer struct {
}

func (UnimplementedPhoneCallServer) PhoneAcceptCall(context.Context, *PhoneAcceptCallReq) (*PhoneAcceptCallResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneAcceptCall not implemented")
}
func (UnimplementedPhoneCallServer) PhoneConfirmCall(context.Context, *PhoneConfirmCallReq) (*PhoneConfirmCallResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneConfirmCall not implemented")
}
func (UnimplementedPhoneCallServer) PhoneDiscardCall(context.Context, *PhoneDiscardCallReq) (*PhoneDiscardCallResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneDiscardCall not implemented")
}
func (UnimplementedPhoneCallServer) PhoneGetCallConfig(context.Context, *PhoneGetCallConfigReq) (*PhoneGetCallConfigResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneGetCallConfig not implemented")
}
func (UnimplementedPhoneCallServer) PhoneReceivedCall(context.Context, *PhoneReceivedCallReq) (*PhoneReceivedCallResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneReceivedCall not implemented")
}
func (UnimplementedPhoneCallServer) PhoneRequestCall(context.Context, *PhoneRequestCallReq) (*PhoneRequestCallResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneRequestCall not implemented")
}
func (UnimplementedPhoneCallServer) PhoneSaveCallDebug(context.Context, *PhoneSaveCallDebugReq) (*PhoneSaveCallDebugResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneSaveCallDebug not implemented")
}
func (UnimplementedPhoneCallServer) PhoneSetCallRating(context.Context, *PhoneSetCallRatingReq) (*PhoneSetCallRatingResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneSetCallRating not implemented")
}
func (UnimplementedPhoneCallServer) PhoneCheckUpdates(context.Context, *PhoneCheckUpdatesReq) (*PhoneCheckUpdatesResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhoneCheckUpdates not implemented")
}
func (UnimplementedPhoneCallServer) mustEmbedUnimplementedPhoneCallServer() {}

// UnsafePhoneCallServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PhoneCallServer will
// result in compilation errors.
type UnsafePhoneCallServer interface {
	mustEmbedUnimplementedPhoneCallServer()
}

func RegisterPhoneCallServer(s grpc.ServiceRegistrar, srv PhoneCallServer) {
	s.RegisterService(&PhoneCall_ServiceDesc, srv)
}

func _PhoneCall_PhoneAcceptCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PhoneAcceptCallReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneCallServer).PhoneAcceptCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/infoserver.PhoneCall/PhoneAcceptCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneCallServer).PhoneAcceptCall(ctx, req.(*PhoneAcceptCallReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhoneCall_PhoneConfirmCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PhoneConfirmCallReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneCallServer).PhoneConfirmCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/infoserver.PhoneCall/PhoneConfirmCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneCallServer).PhoneConfirmCall(ctx, req.(*PhoneConfirmCallReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhoneCall_PhoneDiscardCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PhoneDiscardCallReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneCallServer).PhoneDiscardCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/infoserver.PhoneCall/PhoneDiscardCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneCallServer).PhoneDiscardCall(ctx, req.(*PhoneDiscardCallReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhoneCall_PhoneGetCallConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PhoneGetCallConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneCallServer).PhoneGetCallConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/infoserver.PhoneCall/PhoneGetCallConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneCallServer).PhoneGetCallConfig(ctx, req.(*PhoneGetCallConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhoneCall_PhoneReceivedCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PhoneReceivedCallReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneCallServer).PhoneReceivedCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/infoserver.PhoneCall/PhoneReceivedCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneCallServer).PhoneReceivedCall(ctx, req.(*PhoneReceivedCallReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhoneCall_PhoneRequestCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PhoneRequestCallReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneCallServer).PhoneRequestCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/infoserver.PhoneCall/PhoneRequestCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneCallServer).PhoneRequestCall(ctx, req.(*PhoneRequestCallReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhoneCall_PhoneSaveCallDebug_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PhoneSaveCallDebugReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneCallServer).PhoneSaveCallDebug(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/infoserver.PhoneCall/PhoneSaveCallDebug",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneCallServer).PhoneSaveCallDebug(ctx, req.(*PhoneSaveCallDebugReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhoneCall_PhoneSetCallRating_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PhoneSetCallRatingReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneCallServer).PhoneSetCallRating(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/infoserver.PhoneCall/PhoneSetCallRating",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneCallServer).PhoneSetCallRating(ctx, req.(*PhoneSetCallRatingReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhoneCall_PhoneCheckUpdates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PhoneCheckUpdatesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneCallServer).PhoneCheckUpdates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/infoserver.PhoneCall/PhoneCheckUpdates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneCallServer).PhoneCheckUpdates(ctx, req.(*PhoneCheckUpdatesReq))
	}
	return interceptor(ctx, in, info, handler)
}

// PhoneCall_ServiceDesc is the grpc.ServiceDesc for PhoneCall service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PhoneCall_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "infoserver.PhoneCall",
	HandlerType: (*PhoneCallServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PhoneAcceptCall",
			Handler:    _PhoneCall_PhoneAcceptCall_Handler,
		},
		{
			MethodName: "PhoneConfirmCall",
			Handler:    _PhoneCall_PhoneConfirmCall_Handler,
		},
		{
			MethodName: "PhoneDiscardCall",
			Handler:    _PhoneCall_PhoneDiscardCall_Handler,
		},
		{
			MethodName: "PhoneGetCallConfig",
			Handler:    _PhoneCall_PhoneGetCallConfig_Handler,
		},
		{
			MethodName: "PhoneReceivedCall",
			Handler:    _PhoneCall_PhoneReceivedCall_Handler,
		},
		{
			MethodName: "PhoneRequestCall",
			Handler:    _PhoneCall_PhoneRequestCall_Handler,
		},
		{
			MethodName: "PhoneSaveCallDebug",
			Handler:    _PhoneCall_PhoneSaveCallDebug_Handler,
		},
		{
			MethodName: "PhoneSetCallRating",
			Handler:    _PhoneCall_PhoneSetCallRating_Handler,
		},
		{
			MethodName: "PhoneCheckUpdates",
			Handler:    _PhoneCall_PhoneCheckUpdates_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "phonecall.proto",
}
