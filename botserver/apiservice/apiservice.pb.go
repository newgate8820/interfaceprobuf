//*
// 定义提供给机器人路由服务的API
// 原则上只能由机器人路由服务来调用

//protoc --gogofast_out=plugins=grpc:. ./gitlab.chatserver.im/im/iminterfaceprotobufs/botserver/apiservice/apiservice.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: apiservice.proto

package apiservice

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	basetypes "interfaceprobuf/botserver/basetypes"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetBotListResult_Errorcode int32

const (
	GetBotListResult_Success   GetBotListResult_Errorcode = 0
	GetBotListResult_NotExist  GetBotListResult_Errorcode = 1
	GetBotListResult_NotModify GetBotListResult_Errorcode = 3
)

// Enum value maps for GetBotListResult_Errorcode.
var (
	GetBotListResult_Errorcode_name = map[int32]string{
		0: "Success",
		1: "NotExist",
		3: "NotModify",
	}
	GetBotListResult_Errorcode_value = map[string]int32{
		"Success":   0,
		"NotExist":  1,
		"NotModify": 3,
	}
)

func (x GetBotListResult_Errorcode) Enum() *GetBotListResult_Errorcode {
	p := new(GetBotListResult_Errorcode)
	*p = x
	return p
}

func (x GetBotListResult_Errorcode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetBotListResult_Errorcode) Descriptor() protoreflect.EnumDescriptor {
	return file_apiservice_proto_enumTypes[0].Descriptor()
}

func (GetBotListResult_Errorcode) Type() protoreflect.EnumType {
	return &file_apiservice_proto_enumTypes[0]
}

func (x GetBotListResult_Errorcode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetBotListResult_Errorcode.Descriptor instead.
func (GetBotListResult_Errorcode) EnumDescriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{3, 0}
}

type GetBotDetailResult_Errorcode int32

const (
	GetBotDetailResult_Success    GetBotDetailResult_Errorcode = 0
	GetBotDetailResult_NotExist   GetBotDetailResult_Errorcode = 1
	GetBotDetailResult_OtherError GetBotDetailResult_Errorcode = 2
)

// Enum value maps for GetBotDetailResult_Errorcode.
var (
	GetBotDetailResult_Errorcode_name = map[int32]string{
		0: "Success",
		1: "NotExist",
		2: "OtherError",
	}
	GetBotDetailResult_Errorcode_value = map[string]int32{
		"Success":    0,
		"NotExist":   1,
		"OtherError": 2,
	}
)

func (x GetBotDetailResult_Errorcode) Enum() *GetBotDetailResult_Errorcode {
	p := new(GetBotDetailResult_Errorcode)
	*p = x
	return p
}

func (x GetBotDetailResult_Errorcode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetBotDetailResult_Errorcode) Descriptor() protoreflect.EnumDescriptor {
	return file_apiservice_proto_enumTypes[1].Descriptor()
}

func (GetBotDetailResult_Errorcode) Type() protoreflect.EnumType {
	return &file_apiservice_proto_enumTypes[1]
}

func (x GetBotDetailResult_Errorcode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetBotDetailResult_Errorcode.Descriptor instead.
func (GetBotDetailResult_Errorcode) EnumDescriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{11, 0}
}

type BotLikeResult_Errorcode int32

const (
	BotLikeResult_Success    BotLikeResult_Errorcode = 0
	BotLikeResult_NotExist   BotLikeResult_Errorcode = 1
	BotLikeResult_OtherError BotLikeResult_Errorcode = 2
)

// Enum value maps for BotLikeResult_Errorcode.
var (
	BotLikeResult_Errorcode_name = map[int32]string{
		0: "Success",
		1: "NotExist",
		2: "OtherError",
	}
	BotLikeResult_Errorcode_value = map[string]int32{
		"Success":    0,
		"NotExist":   1,
		"OtherError": 2,
	}
)

func (x BotLikeResult_Errorcode) Enum() *BotLikeResult_Errorcode {
	p := new(BotLikeResult_Errorcode)
	*p = x
	return p
}

func (x BotLikeResult_Errorcode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BotLikeResult_Errorcode) Descriptor() protoreflect.EnumDescriptor {
	return file_apiservice_proto_enumTypes[2].Descriptor()
}

func (BotLikeResult_Errorcode) Type() protoreflect.EnumType {
	return &file_apiservice_proto_enumTypes[2]
}

func (x BotLikeResult_Errorcode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BotLikeResult_Errorcode.Descriptor instead.
func (BotLikeResult_Errorcode) EnumDescriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{13, 0}
}

// 获取自建机器人列表
type GetBotListMineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Hash     string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	OffsetId uint32 `protobuf:"varint,3,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	Limit    uint32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetBotListMineReq) Reset() {
	*x = GetBotListMineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBotListMineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBotListMineReq) ProtoMessage() {}

func (x *GetBotListMineReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBotListMineReq.ProtoReflect.Descriptor instead.
func (*GetBotListMineReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{0}
}

func (x *GetBotListMineReq) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetBotListMineReq) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *GetBotListMineReq) GetOffsetId() uint32 {
	if x != nil {
		return x.OffsetId
	}
	return 0
}

func (x *GetBotListMineReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// 获取机器人列表请求
type GetBotListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash     string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Offcial  bool   `protobuf:"varint,2,opt,name=offcial,proto3" json:"offcial,omitempty"`
	OffsetId uint32 `protobuf:"varint,3,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	Limit    uint32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetBotListReq) Reset() {
	*x = GetBotListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBotListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBotListReq) ProtoMessage() {}

func (x *GetBotListReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBotListReq.ProtoReflect.Descriptor instead.
func (*GetBotListReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{1}
}

func (x *GetBotListReq) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *GetBotListReq) GetOffcial() bool {
	if x != nil {
		return x.Offcial
	}
	return false
}

func (x *GetBotListReq) GetOffsetId() uint32 {
	if x != nil {
		return x.OffsetId
	}
	return 0
}

func (x *GetBotListReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// 机器人列表信息
type BotInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId       uint32 `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	Id          uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type        uint32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Hot         uint32 `protobuf:"varint,6,opt,name=hot,proto3" json:"hot,omitempty"`
}

func (x *BotInfo) Reset() {
	*x = BotInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotInfo) ProtoMessage() {}

func (x *BotInfo) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotInfo.ProtoReflect.Descriptor instead.
func (*BotInfo) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{2}
}

func (x *BotInfo) GetBotId() uint32 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *BotInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BotInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BotInfo) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *BotInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BotInfo) GetHot() uint32 {
	if x != nil {
		return x.Hot
	}
	return 0
}

// 获取机器人列表回应
type GetBotListResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode   GetBotListResult_Errorcode `protobuf:"varint,1,opt,name=errCode,proto3,enum=apiservice.GetBotListResult_Errorcode" json:"errCode,omitempty"`
	Hash      string                     `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	BoInfoArr []*BotInfo                 `protobuf:"bytes,3,rep,name=boInfoArr,proto3" json:"boInfoArr,omitempty"`
}

func (x *GetBotListResult) Reset() {
	*x = GetBotListResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBotListResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBotListResult) ProtoMessage() {}

func (x *GetBotListResult) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBotListResult.ProtoReflect.Descriptor instead.
func (*GetBotListResult) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{3}
}

func (x *GetBotListResult) GetErrCode() GetBotListResult_Errorcode {
	if x != nil {
		return x.ErrCode
	}
	return GetBotListResult_Success
}

func (x *GetBotListResult) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *GetBotListResult) GetBoInfoArr() []*BotInfo {
	if x != nil {
		return x.BoInfoArr
	}
	return nil
}

// 获取单个广场机器人信息
type GetBotPlazaInfoByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 机器人 id
	Language string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetBotPlazaInfoByIdReq) Reset() {
	*x = GetBotPlazaInfoByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBotPlazaInfoByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBotPlazaInfoByIdReq) ProtoMessage() {}

func (x *GetBotPlazaInfoByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBotPlazaInfoByIdReq.ProtoReflect.Descriptor instead.
func (*GetBotPlazaInfoByIdReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{4}
}

func (x *GetBotPlazaInfoByIdReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetBotPlazaInfoByIdReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetBotPlazaInfoByIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    uint32        `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`           // 错误码 0 成功
	BotPlazaInfo *BotPlazaInfo `protobuf:"bytes,2,opt,name=bot_plaza_info,json=botPlazaInfo,proto3" json:"bot_plaza_info,omitempty"` // 机器人广场列表信息
}

func (x *GetBotPlazaInfoByIdReply) Reset() {
	*x = GetBotPlazaInfoByIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBotPlazaInfoByIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBotPlazaInfoByIdReply) ProtoMessage() {}

func (x *GetBotPlazaInfoByIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBotPlazaInfoByIdReply.ProtoReflect.Descriptor instead.
func (*GetBotPlazaInfoByIdReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{5}
}

func (x *GetBotPlazaInfoByIdReply) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetBotPlazaInfoByIdReply) GetBotPlazaInfo() *BotPlazaInfo {
	if x != nil {
		return x.BotPlazaInfo
	}
	return nil
}

// 获取机器人广场信息
type GetBotPlazaInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetBotPlazaInfoReq) Reset() {
	*x = GetBotPlazaInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBotPlazaInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBotPlazaInfoReq) ProtoMessage() {}

func (x *GetBotPlazaInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBotPlazaInfoReq.ProtoReflect.Descriptor instead.
func (*GetBotPlazaInfoReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{6}
}

func (x *GetBotPlazaInfoReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type BotPlazaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`            // 机器人 id
	Classify    string `protobuf:"bytes,2,opt,name=classify,proto3" json:"classify,omitempty"` // 类别 --> 热门 娱乐 图片 工具
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"` // 机器人描述 点start展示的详情
	About       string `protobuf:"bytes,5,opt,name=about,proto3" json:"about,omitempty"`             // 简介 slogan
	Lang        string `protobuf:"bytes,6,opt,name=lang,proto3" json:"lang,omitempty"`               // 語言 en-zh
}

func (x *BotPlazaInfo) Reset() {
	*x = BotPlazaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotPlazaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotPlazaInfo) ProtoMessage() {}

func (x *BotPlazaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotPlazaInfo.ProtoReflect.Descriptor instead.
func (*BotPlazaInfo) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{7}
}

func (x *BotPlazaInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BotPlazaInfo) GetClassify() string {
	if x != nil {
		return x.Classify
	}
	return ""
}

func (x *BotPlazaInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BotPlazaInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BotPlazaInfo) GetAbout() string {
	if x != nil {
		return x.About
	}
	return ""
}

func (x *BotPlazaInfo) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type GetBotPlazaInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    uint32          `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`           // 错误码 0 成功
	BotPlazaInfo []*BotPlazaInfo `protobuf:"bytes,2,rep,name=bot_plaza_info,json=botPlazaInfo,proto3" json:"bot_plaza_info,omitempty"` // 机器人广场列表信息
}

func (x *GetBotPlazaInfoReply) Reset() {
	*x = GetBotPlazaInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBotPlazaInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBotPlazaInfoReply) ProtoMessage() {}

func (x *GetBotPlazaInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBotPlazaInfoReply.ProtoReflect.Descriptor instead.
func (*GetBotPlazaInfoReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{8}
}

func (x *GetBotPlazaInfoReply) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetBotPlazaInfoReply) GetBotPlazaInfo() []*BotPlazaInfo {
	if x != nil {
		return x.BotPlazaInfo
	}
	return nil
}

// GetBotDetailRequest 获取机器人信息请求
type GetBotDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 机器人ID
}

func (x *GetBotDetailReq) Reset() {
	*x = GetBotDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBotDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBotDetailReq) ProtoMessage() {}

func (x *GetBotDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBotDetailReq.ProtoReflect.Descriptor instead.
func (*GetBotDetailReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{9}
}

func (x *GetBotDetailReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 机器人详细信息
type BotDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Botname           string `protobuf:"bytes,2,opt,name=botname,proto3" json:"botname,omitempty"`
	Firstname         string `protobuf:"bytes,3,opt,name=firstname,proto3" json:"firstname,omitempty"`
	Owerid            uint32 `protobuf:"varint,4,opt,name=owerid,proto3" json:"owerid,omitempty"`
	Level             uint32 `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	Commands          string `protobuf:"bytes,6,opt,name=commands,proto3" json:"commands,omitempty"`
	Description       string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	About             string `protobuf:"bytes,8,opt,name=about,proto3" json:"about,omitempty"`
	ChatHistory       bool   `protobuf:"varint,9,opt,name=chat_history,json=chatHistory,proto3" json:"chat_history,omitempty"`
	Nochats           bool   `protobuf:"varint,10,opt,name=nochats,proto3" json:"nochats,omitempty"`
	InfoVersion       uint32 `protobuf:"varint,11,opt,name=info_version,json=infoVersion,proto3" json:"info_version,omitempty"`
	InlinePlaceholder string `protobuf:"bytes,12,opt,name=inline_placeholder,json=inlinePlaceholder,proto3" json:"inline_placeholder,omitempty"`
	Token             string `protobuf:"bytes,13,opt,name=token,proto3" json:"token,omitempty"`
	Webhook           string `protobuf:"bytes,14,opt,name=webhook,proto3" json:"webhook,omitempty"`
	Certificate       []byte `protobuf:"bytes,15,opt,name=certificate,proto3" json:"certificate,omitempty"`
	InsertedAt        uint64 `protobuf:"varint,16,opt,name=inserted_at,json=insertedAt,proto3" json:"inserted_at,omitempty"`
	Type              uint32 `protobuf:"varint,17,opt,name=type,proto3" json:"type,omitempty"`
	Official          uint32 `protobuf:"varint,18,opt,name=official,proto3" json:"official,omitempty"`
	Hot               uint32 `protobuf:"varint,19,opt,name=hot,proto3" json:"hot,omitempty"`
}

func (x *BotDetail) Reset() {
	*x = BotDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotDetail) ProtoMessage() {}

func (x *BotDetail) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotDetail.ProtoReflect.Descriptor instead.
func (*BotDetail) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{10}
}

func (x *BotDetail) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BotDetail) GetBotname() string {
	if x != nil {
		return x.Botname
	}
	return ""
}

func (x *BotDetail) GetFirstname() string {
	if x != nil {
		return x.Firstname
	}
	return ""
}

func (x *BotDetail) GetOwerid() uint32 {
	if x != nil {
		return x.Owerid
	}
	return 0
}

func (x *BotDetail) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *BotDetail) GetCommands() string {
	if x != nil {
		return x.Commands
	}
	return ""
}

func (x *BotDetail) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BotDetail) GetAbout() string {
	if x != nil {
		return x.About
	}
	return ""
}

func (x *BotDetail) GetChatHistory() bool {
	if x != nil {
		return x.ChatHistory
	}
	return false
}

func (x *BotDetail) GetNochats() bool {
	if x != nil {
		return x.Nochats
	}
	return false
}

func (x *BotDetail) GetInfoVersion() uint32 {
	if x != nil {
		return x.InfoVersion
	}
	return 0
}

func (x *BotDetail) GetInlinePlaceholder() string {
	if x != nil {
		return x.InlinePlaceholder
	}
	return ""
}

func (x *BotDetail) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *BotDetail) GetWebhook() string {
	if x != nil {
		return x.Webhook
	}
	return ""
}

func (x *BotDetail) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *BotDetail) GetInsertedAt() uint64 {
	if x != nil {
		return x.InsertedAt
	}
	return 0
}

func (x *BotDetail) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *BotDetail) GetOfficial() uint32 {
	if x != nil {
		return x.Official
	}
	return 0
}

func (x *BotDetail) GetHot() uint32 {
	if x != nil {
		return x.Hot
	}
	return 0
}

// 获取机器人详细信息请求
type GetBotDetailResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode GetBotDetailResult_Errorcode `protobuf:"varint,1,opt,name=errCode,proto3,enum=apiservice.GetBotDetailResult_Errorcode" json:"errCode,omitempty"`
	Detail  *BotDetail                   `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *GetBotDetailResult) Reset() {
	*x = GetBotDetailResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBotDetailResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBotDetailResult) ProtoMessage() {}

func (x *GetBotDetailResult) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBotDetailResult.ProtoReflect.Descriptor instead.
func (*GetBotDetailResult) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{11}
}

func (x *GetBotDetailResult) GetErrCode() GetBotDetailResult_Errorcode {
	if x != nil {
		return x.ErrCode
	}
	return GetBotDetailResult_Success
}

func (x *GetBotDetailResult) GetDetail() *BotDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

// 收藏机器人请求,like = 0为取消收藏，like=1为收藏
type BotLikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Like uint32 `protobuf:"varint,2,opt,name=like,proto3" json:"like,omitempty"`
}

func (x *BotLikeReq) Reset() {
	*x = BotLikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotLikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotLikeReq) ProtoMessage() {}

func (x *BotLikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotLikeReq.ProtoReflect.Descriptor instead.
func (*BotLikeReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{12}
}

func (x *BotLikeReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BotLikeReq) GetLike() uint32 {
	if x != nil {
		return x.Like
	}
	return 0
}

// 收藏机器人请求返回
type BotLikeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode BotLikeResult_Errorcode `protobuf:"varint,1,opt,name=errCode,proto3,enum=apiservice.BotLikeResult_Errorcode" json:"errCode,omitempty"`
}

func (x *BotLikeResult) Reset() {
	*x = BotLikeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotLikeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotLikeResult) ProtoMessage() {}

func (x *BotLikeResult) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotLikeResult.ProtoReflect.Descriptor instead.
func (*BotLikeResult) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{13}
}

func (x *BotLikeResult) GetErrCode() BotLikeResult_Errorcode {
	if x != nil {
		return x.ErrCode
	}
	return BotLikeResult_Success
}

type MusicSaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusicInfo []*MusicDataInfo `protobuf:"bytes,1,rep,name=MusicInfo,proto3" json:"MusicInfo,omitempty"`
}

func (x *MusicSaveReq) Reset() {
	*x = MusicSaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicSaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicSaveReq) ProtoMessage() {}

func (x *MusicSaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicSaveReq.ProtoReflect.Descriptor instead.
func (*MusicSaveReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{14}
}

func (x *MusicSaveReq) GetMusicInfo() []*MusicDataInfo {
	if x != nil {
		return x.MusicInfo
	}
	return nil
}

type MusicSaveRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode uint32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 错误代码
	Id        uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MusicSaveRsp) Reset() {
	*x = MusicSaveRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicSaveRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicSaveRsp) ProtoMessage() {}

func (x *MusicSaveRsp) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicSaveRsp.ProtoReflect.Descriptor instead.
func (*MusicSaveRsp) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{15}
}

func (x *MusicSaveRsp) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *MusicSaveRsp) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// GetMeRequest 获取自身信息请求
type GetMeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 机器人ID
}

func (x *GetMeRequest) Reset() {
	*x = GetMeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeRequest) ProtoMessage() {}

func (x *GetMeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeRequest.ProtoReflect.Descriptor instead.
func (*GetMeRequest) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{16}
}

func (x *GetMeRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// GetMeReply 获取自身信息响应
type GetMeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode uint32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 错误代码
	Id        uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                // 用户唯一ID
	FirstName string `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`  // 用户First name
	LastName  string `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`     // 用户Last name
	Username  string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`                     // 用户名
}

func (x *GetMeReply) Reset() {
	*x = GetMeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeReply) ProtoMessage() {}

func (x *GetMeReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeReply.ProtoReflect.Descriptor instead.
func (*GetMeReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{17}
}

func (x *GetMeReply) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetMeReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetMeReply) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *GetMeReply) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *GetMeReply) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// GetUpdatesRequest 获取更新数据请求
type GetUpdatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`           // 机器人ID
	Timeout uint64 `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"` // 超时时间(time.Duration)
}

func (x *GetUpdatesRequest) Reset() {
	*x = GetUpdatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpdatesRequest) ProtoMessage() {}

func (x *GetUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpdatesRequest.ProtoReflect.Descriptor instead.
func (*GetUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{18}
}

func (x *GetUpdatesRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetUpdatesRequest) GetTimeout() uint64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

// GetUpdatesReply 获取更新数据响应
type GetUpdatesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode uint32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 错误代码
	Messages  []byte `protobuf:"bytes,2,opt,name=messages,proto3" json:"messages,omitempty"`                     // 数据列表
}

func (x *GetUpdatesReply) Reset() {
	*x = GetUpdatesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUpdatesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpdatesReply) ProtoMessage() {}

func (x *GetUpdatesReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpdatesReply.ProtoReflect.Descriptor instead.
func (*GetUpdatesReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{19}
}

func (x *GetUpdatesReply) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetUpdatesReply) GetMessages() []byte {
	if x != nil {
		return x.Messages
	}
	return nil
}

// SendTextMessageRequest 发送文本消息请求
type SendTextMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                         // 机器人ID
	ChatType         basetypes.ChatType `protobuf:"varint,2,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"`     // 聊天类型
	ChatId           int32              `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`                                   // 会话ID
	Text             string             `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`                                                      // 消息文本
	ReplyToMessageId uint64             `protobuf:"varint,5,opt,name=reply_to_message_id,json=replyToMessageId,proto3" json:"reply_to_message_id,omitempty"` // 回复消息ID
	Markdown         bool               `protobuf:"varint,6,opt,name=markdown,proto3" json:"markdown,omitempty"`                                             // 是否使用MarkDown渲染
	ReplyMarkup      []byte             `protobuf:"bytes,7,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`                     // 回复标记
}

func (x *SendTextMessageRequest) Reset() {
	*x = SendTextMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTextMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTextMessageRequest) ProtoMessage() {}

func (x *SendTextMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTextMessageRequest.ProtoReflect.Descriptor instead.
func (*SendTextMessageRequest) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{20}
}

func (x *SendTextMessageRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SendTextMessageRequest) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

func (x *SendTextMessageRequest) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *SendTextMessageRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SendTextMessageRequest) GetReplyToMessageId() uint64 {
	if x != nil {
		return x.ReplyToMessageId
	}
	return 0
}

func (x *SendTextMessageRequest) GetMarkdown() bool {
	if x != nil {
		return x.Markdown
	}
	return false
}

func (x *SendTextMessageRequest) GetReplyMarkup() []byte {
	if x != nil {
		return x.ReplyMarkup
	}
	return nil
}

// SendTextMessageReply 发送文本消息响应
type SendTextMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode uint32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 错误代码
	MessageId uint64 `protobuf:"varint,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // 消息唯一ID
}

func (x *SendTextMessageReply) Reset() {
	*x = SendTextMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTextMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTextMessageReply) ProtoMessage() {}

func (x *SendTextMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTextMessageReply.ProtoReflect.Descriptor instead.
func (*SendTextMessageReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{21}
}

func (x *SendTextMessageReply) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *SendTextMessageReply) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

// SendLocationRequest 发送地理位置请求
type SendLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                         // 机器人ID
	ChatType         basetypes.ChatType `protobuf:"varint,2,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"`     // 聊天类型
	ChatId           int32              `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`                                   // 会话ID
	Latitude         float64            `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`                                            // 纬度
	Longitude        float64            `protobuf:"fixed64,5,opt,name=longitude,proto3" json:"longitude,omitempty"`                                          // 经度
	ReplyToMessageId uint64             `protobuf:"varint,6,opt,name=reply_to_message_id,json=replyToMessageId,proto3" json:"reply_to_message_id,omitempty"` // 回复消息ID
	ReplyMarkup      []byte             `protobuf:"bytes,7,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`                     // 回复标记
}

func (x *SendLocationRequest) Reset() {
	*x = SendLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendLocationRequest) ProtoMessage() {}

func (x *SendLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendLocationRequest.ProtoReflect.Descriptor instead.
func (*SendLocationRequest) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{22}
}

func (x *SendLocationRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SendLocationRequest) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

func (x *SendLocationRequest) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *SendLocationRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *SendLocationRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *SendLocationRequest) GetReplyToMessageId() uint64 {
	if x != nil {
		return x.ReplyToMessageId
	}
	return 0
}

func (x *SendLocationRequest) GetReplyMarkup() []byte {
	if x != nil {
		return x.ReplyMarkup
	}
	return nil
}

// SendLocationReply 发送地理位置响应
type SendLocationReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode uint32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 错误代码
	MessageId uint64 `protobuf:"varint,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // 消息唯一ID
}

func (x *SendLocationReply) Reset() {
	*x = SendLocationReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendLocationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendLocationReply) ProtoMessage() {}

func (x *SendLocationReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendLocationReply.ProtoReflect.Descriptor instead.
func (*SendLocationReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{23}
}

func (x *SendLocationReply) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *SendLocationReply) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

// SendVenueRequest 发送详细地址请求
type SendVenueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                         // 机器人ID
	ChatType         basetypes.ChatType `protobuf:"varint,2,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"`     // 聊天类型
	ChatId           int32              `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`                                   // 会话ID
	Latitude         float64            `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`                                            // 纬度
	Longitude        float64            `protobuf:"fixed64,5,opt,name=longitude,proto3" json:"longitude,omitempty"`                                          // 经度
	Title            string             `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`                                                    // 标题
	Address          string             `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`                                                // 地址
	FoursquareId     string             `protobuf:"bytes,8,opt,name=foursquare_id,json=foursquareId,proto3" json:"foursquare_id,omitempty"`                  // Foursquare标识符
	ReplyToMessageId uint64             `protobuf:"varint,9,opt,name=reply_to_message_id,json=replyToMessageId,proto3" json:"reply_to_message_id,omitempty"` // 回复消息ID
	ReplyMarkup      []byte             `protobuf:"bytes,10,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`                    // 回复标记
}

func (x *SendVenueRequest) Reset() {
	*x = SendVenueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendVenueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendVenueRequest) ProtoMessage() {}

func (x *SendVenueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendVenueRequest.ProtoReflect.Descriptor instead.
func (*SendVenueRequest) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{24}
}

func (x *SendVenueRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SendVenueRequest) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

func (x *SendVenueRequest) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *SendVenueRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *SendVenueRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *SendVenueRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SendVenueRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SendVenueRequest) GetFoursquareId() string {
	if x != nil {
		return x.FoursquareId
	}
	return ""
}

func (x *SendVenueRequest) GetReplyToMessageId() uint64 {
	if x != nil {
		return x.ReplyToMessageId
	}
	return 0
}

func (x *SendVenueRequest) GetReplyMarkup() []byte {
	if x != nil {
		return x.ReplyMarkup
	}
	return nil
}

// SendVenueReply 发送详细地址响应
type SendVenueReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode uint32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 错误代码
	MessageId uint64 `protobuf:"varint,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // 消息唯一ID
}

func (x *SendVenueReply) Reset() {
	*x = SendVenueReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendVenueReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendVenueReply) ProtoMessage() {}

func (x *SendVenueReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendVenueReply.ProtoReflect.Descriptor instead.
func (*SendVenueReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{25}
}

func (x *SendVenueReply) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *SendVenueReply) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

// SendPhotoRequest 发送照片请求
type SendPhotoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                         // 机器人ID
	ChatType         basetypes.ChatType `protobuf:"varint,2,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"`     // 聊天类型
	ChatId           int32              `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`                                   // 会话ID
	Media            []byte             `protobuf:"bytes,4,opt,name=media,proto3" json:"media,omitempty"`                                                    // 媒体摘要
	ReplyToMessageId uint64             `protobuf:"varint,5,opt,name=reply_to_message_id,json=replyToMessageId,proto3" json:"reply_to_message_id,omitempty"` // 回复消息ID
	ReplyMarkup      []byte             `protobuf:"bytes,6,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`                     // 回复标记
}

func (x *SendPhotoRequest) Reset() {
	*x = SendPhotoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPhotoRequest) ProtoMessage() {}

func (x *SendPhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPhotoRequest.ProtoReflect.Descriptor instead.
func (*SendPhotoRequest) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{26}
}

func (x *SendPhotoRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SendPhotoRequest) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

func (x *SendPhotoRequest) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *SendPhotoRequest) GetMedia() []byte {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *SendPhotoRequest) GetReplyToMessageId() uint64 {
	if x != nil {
		return x.ReplyToMessageId
	}
	return 0
}

func (x *SendPhotoRequest) GetReplyMarkup() []byte {
	if x != nil {
		return x.ReplyMarkup
	}
	return nil
}

// SendPhotoReply 发送照片响应
type SendPhotoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode uint32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 错误代码
	MessageId uint64 `protobuf:"varint,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // 消息唯一ID
	FileId    uint64 `protobuf:"varint,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`          // 文件ID
}

func (x *SendPhotoReply) Reset() {
	*x = SendPhotoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPhotoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPhotoReply) ProtoMessage() {}

func (x *SendPhotoReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPhotoReply.ProtoReflect.Descriptor instead.
func (*SendPhotoReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{27}
}

func (x *SendPhotoReply) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *SendPhotoReply) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *SendPhotoReply) GetFileId() uint64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

// SendDocumentRequest 发送文档请求
type SendDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                         // 机器人ID
	ChatType         basetypes.ChatType `protobuf:"varint,2,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"`     // 聊天类型
	ChatId           int32              `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`                                   // 会话ID
	Media            []byte             `protobuf:"bytes,4,opt,name=media,proto3" json:"media,omitempty"`                                                    // 媒体摘要
	ReplyToMessageId uint64             `protobuf:"varint,5,opt,name=reply_to_message_id,json=replyToMessageId,proto3" json:"reply_to_message_id,omitempty"` // 回复消息ID
	ReplyMarkup      []byte             `protobuf:"bytes,6,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`                     // 回复标记
}

func (x *SendDocumentRequest) Reset() {
	*x = SendDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendDocumentRequest) ProtoMessage() {}

func (x *SendDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendDocumentRequest.ProtoReflect.Descriptor instead.
func (*SendDocumentRequest) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{28}
}

func (x *SendDocumentRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SendDocumentRequest) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

func (x *SendDocumentRequest) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *SendDocumentRequest) GetMedia() []byte {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *SendDocumentRequest) GetReplyToMessageId() uint64 {
	if x != nil {
		return x.ReplyToMessageId
	}
	return 0
}

func (x *SendDocumentRequest) GetReplyMarkup() []byte {
	if x != nil {
		return x.ReplyMarkup
	}
	return nil
}

// SendDocumentReply 发送文档响应
type SendDocumentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode uint32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 错误代码
	MessageId uint64 `protobuf:"varint,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // 消息唯一ID
	FileId    uint64 `protobuf:"varint,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`          // 文件ID
}

func (x *SendDocumentReply) Reset() {
	*x = SendDocumentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendDocumentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendDocumentReply) ProtoMessage() {}

func (x *SendDocumentReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendDocumentReply.ProtoReflect.Descriptor instead.
func (*SendDocumentReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{29}
}

func (x *SendDocumentReply) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *SendDocumentReply) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *SendDocumentReply) GetFileId() uint64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

// ForwardMessageRequest 转发已有消息请求
type ForwardMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                   // 机器人ID
	ChatType     basetypes.ChatType `protobuf:"varint,2,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"`               // 目标聊天类型
	ChatId       int32              `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`                                             // 目标会话ID
	FromChatType basetypes.ChatType `protobuf:"varint,4,opt,name=from_chat_type,json=fromChatType,proto3,enum=basetypes.ChatType" json:"from_chat_type,omitempty"` // 来源目标会话类型
	FromChatId   int32              `protobuf:"varint,5,opt,name=from_chat_id,json=fromChatId,proto3" json:"from_chat_id,omitempty"`                               // 来源会话ID
	MessageId    uint64             `protobuf:"varint,6,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`                                    // 被转发消息唯一ID
}

func (x *ForwardMessageRequest) Reset() {
	*x = ForwardMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForwardMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardMessageRequest) ProtoMessage() {}

func (x *ForwardMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardMessageRequest.ProtoReflect.Descriptor instead.
func (*ForwardMessageRequest) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{30}
}

func (x *ForwardMessageRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ForwardMessageRequest) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

func (x *ForwardMessageRequest) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *ForwardMessageRequest) GetFromChatType() basetypes.ChatType {
	if x != nil {
		return x.FromChatType
	}
	return basetypes.ChatType(0)
}

func (x *ForwardMessageRequest) GetFromChatId() int32 {
	if x != nil {
		return x.FromChatId
	}
	return 0
}

func (x *ForwardMessageRequest) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

// ForwardMessageReply 转发已有消息响应
type ForwardMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode uint32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 错误代码
	MessageId uint64 `protobuf:"varint,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // 消息唯一ID
}

func (x *ForwardMessageReply) Reset() {
	*x = ForwardMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForwardMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardMessageReply) ProtoMessage() {}

func (x *ForwardMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardMessageReply.ProtoReflect.Descriptor instead.
func (*ForwardMessageReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{31}
}

func (x *ForwardMessageReply) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *ForwardMessageReply) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

// AnswerCallbackQueryRequest 回答回调查询请求
type AnswerCallbackQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                   // 机器人ID
	InlineMessageId string `protobuf:"bytes,2,opt,name=inline_message_id,json=inlineMessageId,proto3" json:"inline_message_id,omitempty"` // 标识符
	Text            string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`                                                // 通知文本
	ShowAlert       bool   `protobuf:"varint,4,opt,name=show_alert,json=showAlert,proto3" json:"show_alert,omitempty"`                    // 是否显示警告
	Url             string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`                                                  // 打开URL
	CacheTime       uint32 `protobuf:"varint,6,opt,name=cache_time,json=cacheTime,proto3" json:"cache_time,omitempty"`                    // 缓存有效时间
}

func (x *AnswerCallbackQueryRequest) Reset() {
	*x = AnswerCallbackQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerCallbackQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerCallbackQueryRequest) ProtoMessage() {}

func (x *AnswerCallbackQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerCallbackQueryRequest.ProtoReflect.Descriptor instead.
func (*AnswerCallbackQueryRequest) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{32}
}

func (x *AnswerCallbackQueryRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AnswerCallbackQueryRequest) GetInlineMessageId() string {
	if x != nil {
		return x.InlineMessageId
	}
	return ""
}

func (x *AnswerCallbackQueryRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AnswerCallbackQueryRequest) GetShowAlert() bool {
	if x != nil {
		return x.ShowAlert
	}
	return false
}

func (x *AnswerCallbackQueryRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AnswerCallbackQueryRequest) GetCacheTime() uint32 {
	if x != nil {
		return x.CacheTime
	}
	return 0
}

// AnswerCallbackQueryReply 回答回调查询响应
type AnswerCallbackQueryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode uint32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 错误代码
}

func (x *AnswerCallbackQueryReply) Reset() {
	*x = AnswerCallbackQueryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerCallbackQueryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerCallbackQueryReply) ProtoMessage() {}

func (x *AnswerCallbackQueryReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerCallbackQueryReply.ProtoReflect.Descriptor instead.
func (*AnswerCallbackQueryReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{33}
}

func (x *AnswerCallbackQueryReply) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// EditMessageTextRequest 编辑消息文本请求
type EditMessageTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                     // 机器人ID
	ChatType        basetypes.ChatType `protobuf:"varint,2,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"` // 目标聊天类型
	ChatId          int32              `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`                               // 会话ID
	MessageId       uint64             `protobuf:"varint,4,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`                      // 被编辑消息唯一ID
	InlineMessageId string             `protobuf:"bytes,5,opt,name=inline_message_id,json=inlineMessageId,proto3" json:"inline_message_id,omitempty"`
	Text            string             `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`                                  // 消息文本
	Markdown        bool               `protobuf:"varint,7,opt,name=markdown,proto3" json:"markdown,omitempty"`                         // 是否使用MarkDown渲染
	ReplyMarkup     []byte             `protobuf:"bytes,8,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"` // 回复标记
}

func (x *EditMessageTextRequest) Reset() {
	*x = EditMessageTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditMessageTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditMessageTextRequest) ProtoMessage() {}

func (x *EditMessageTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditMessageTextRequest.ProtoReflect.Descriptor instead.
func (*EditMessageTextRequest) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{34}
}

func (x *EditMessageTextRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EditMessageTextRequest) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

func (x *EditMessageTextRequest) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *EditMessageTextRequest) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *EditMessageTextRequest) GetInlineMessageId() string {
	if x != nil {
		return x.InlineMessageId
	}
	return ""
}

func (x *EditMessageTextRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *EditMessageTextRequest) GetMarkdown() bool {
	if x != nil {
		return x.Markdown
	}
	return false
}

func (x *EditMessageTextRequest) GetReplyMarkup() []byte {
	if x != nil {
		return x.ReplyMarkup
	}
	return nil
}

// EditMessageTextReply 编辑消息文本响应
type EditMessageTextReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode uint32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 错误代码
}

func (x *EditMessageTextReply) Reset() {
	*x = EditMessageTextReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditMessageTextReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditMessageTextReply) ProtoMessage() {}

func (x *EditMessageTextReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditMessageTextReply.ProtoReflect.Descriptor instead.
func (*EditMessageTextReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{35}
}

func (x *EditMessageTextReply) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// EditMessageCaptionRequest 编辑消息标题请求
type EditMessageCaptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                     // 机器人ID
	ChatType    basetypes.ChatType `protobuf:"varint,2,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"` // 目标聊天类型
	ChatId      int32              `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`                               // 会话ID
	MessageId   uint64             `protobuf:"varint,4,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`                      // 被编辑消息唯一ID
	Caption     string             `protobuf:"bytes,5,opt,name=caption,proto3" json:"caption,omitempty"`                                            // 媒体标题
	ReplyMarkup []byte             `protobuf:"bytes,6,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`                 // 回复标记
}

func (x *EditMessageCaptionRequest) Reset() {
	*x = EditMessageCaptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditMessageCaptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditMessageCaptionRequest) ProtoMessage() {}

func (x *EditMessageCaptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditMessageCaptionRequest.ProtoReflect.Descriptor instead.
func (*EditMessageCaptionRequest) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{36}
}

func (x *EditMessageCaptionRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EditMessageCaptionRequest) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

func (x *EditMessageCaptionRequest) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *EditMessageCaptionRequest) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *EditMessageCaptionRequest) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

func (x *EditMessageCaptionRequest) GetReplyMarkup() []byte {
	if x != nil {
		return x.ReplyMarkup
	}
	return nil
}

// EditMessageCaptionReply 编辑消息标题响应
type EditMessageCaptionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode uint32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 错误代码
}

func (x *EditMessageCaptionReply) Reset() {
	*x = EditMessageCaptionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditMessageCaptionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditMessageCaptionReply) ProtoMessage() {}

func (x *EditMessageCaptionReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditMessageCaptionReply.ProtoReflect.Descriptor instead.
func (*EditMessageCaptionReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{37}
}

func (x *EditMessageCaptionReply) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// DeleteMessageRequest 删除消息请求
type DeleteMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                     // 机器人ID
	ChatType  basetypes.ChatType `protobuf:"varint,2,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"` // 目标聊天类型
	ChatId    int32              `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`                               // 会话ID
	MessageId uint64             `protobuf:"varint,4,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`                      // 被删除消息唯一ID
}

func (x *DeleteMessageRequest) Reset() {
	*x = DeleteMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageRequest) ProtoMessage() {}

func (x *DeleteMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageRequest.ProtoReflect.Descriptor instead.
func (*DeleteMessageRequest) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteMessageRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteMessageRequest) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

func (x *DeleteMessageRequest) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *DeleteMessageRequest) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

// DeleteMessageReply 删除消息响应
type DeleteMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode uint32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 错误代码
}

func (x *DeleteMessageReply) Reset() {
	*x = DeleteMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageReply) ProtoMessage() {}

func (x *DeleteMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageReply.ProtoReflect.Descriptor instead.
func (*DeleteMessageReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteMessageReply) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// SetWebhookRequest 设置webhook请求
type SetWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  // 机器人ID
	Url         string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`                 // 回调地址
	Certificate []byte `protobuf:"bytes,3,opt,name=certificate,proto3" json:"certificate,omitempty"` // 证书
}

func (x *SetWebhookRequest) Reset() {
	*x = SetWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWebhookRequest) ProtoMessage() {}

func (x *SetWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWebhookRequest.ProtoReflect.Descriptor instead.
func (*SetWebhookRequest) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{40}
}

func (x *SetWebhookRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetWebhookRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SetWebhookRequest) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

// SetWebhookReply 设置webhook响应
type SetWebhookReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode uint32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 错误代码
}

func (x *SetWebhookReply) Reset() {
	*x = SetWebhookReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetWebhookReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWebhookReply) ProtoMessage() {}

func (x *SetWebhookReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWebhookReply.ProtoReflect.Descriptor instead.
func (*SetWebhookReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{41}
}

func (x *SetWebhookReply) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// DelWebhookRequest 删除webhook请求
type DelWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 机器人ID
}

func (x *DelWebhookRequest) Reset() {
	*x = DelWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelWebhookRequest) ProtoMessage() {}

func (x *DelWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelWebhookRequest.ProtoReflect.Descriptor instead.
func (*DelWebhookRequest) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{42}
}

func (x *DelWebhookRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// DelWebhookReply 删除webhook响应
type DelWebhookReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode uint32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 错误代码
}

func (x *DelWebhookReply) Reset() {
	*x = DelWebhookReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelWebhookReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelWebhookReply) ProtoMessage() {}

func (x *DelWebhookReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelWebhookReply.ProtoReflect.Descriptor instead.
func (*DelWebhookReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{43}
}

func (x *DelWebhookReply) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type SendPhoneMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                         // 机器人ID
	Phone            string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`                                                    // 手机号码
	Text             string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`                                                      // 消息文本
	ReplyToMessageId uint64 `protobuf:"varint,4,opt,name=reply_to_message_id,json=replyToMessageId,proto3" json:"reply_to_message_id,omitempty"` // 回复消息ID
	Markdown         bool   `protobuf:"varint,5,opt,name=markdown,proto3" json:"markdown,omitempty"`                                             // 是否使用MarkDown渲染
	ReplyMarkup      []byte `protobuf:"bytes,6,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`                     // 回复标记
}

func (x *SendPhoneMessageRequest) Reset() {
	*x = SendPhoneMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPhoneMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPhoneMessageRequest) ProtoMessage() {}

func (x *SendPhoneMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPhoneMessageRequest.ProtoReflect.Descriptor instead.
func (*SendPhoneMessageRequest) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{44}
}

func (x *SendPhoneMessageRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SendPhoneMessageRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SendPhoneMessageRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SendPhoneMessageRequest) GetReplyToMessageId() uint64 {
	if x != nil {
		return x.ReplyToMessageId
	}
	return 0
}

func (x *SendPhoneMessageRequest) GetMarkdown() bool {
	if x != nil {
		return x.Markdown
	}
	return false
}

func (x *SendPhoneMessageRequest) GetReplyMarkup() []byte {
	if x != nil {
		return x.ReplyMarkup
	}
	return nil
}

// 请求
type MusicQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context string `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`              //查询关键字
	UserId  int32  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //用户id
	KeyId   int64  `protobuf:"varint,3,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`    //用户key_id
	Offset  int32  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`               //查询偏移位置
	Count   int32  `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`                 //查询数量
}

func (x *MusicQueryRequest) Reset() {
	*x = MusicQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicQueryRequest) ProtoMessage() {}

func (x *MusicQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicQueryRequest.ProtoReflect.Descriptor instead.
func (*MusicQueryRequest) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{45}
}

func (x *MusicQueryRequest) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *MusicQueryRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MusicQueryRequest) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *MusicQueryRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *MusicQueryRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 响应
type MusicQueryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode uint32           `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 错误代码
	MusicInfo []*MusicDataInfo `protobuf:"bytes,2,rep,name=music_info,json=musicInfo,proto3" json:"music_info,omitempty"`  // 数据列表
}

func (x *MusicQueryReply) Reset() {
	*x = MusicQueryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicQueryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicQueryReply) ProtoMessage() {}

func (x *MusicQueryReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicQueryReply.ProtoReflect.Descriptor instead.
func (*MusicQueryReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{46}
}

func (x *MusicQueryReply) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *MusicQueryReply) GetMusicInfo() []*MusicDataInfo {
	if x != nil {
		return x.MusicInfo
	}
	return nil
}

// 查询内容
type MusicDataInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryId         string `protobuf:"bytes,1,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`                            //查询id
	MusicName       string `protobuf:"bytes,2,opt,name=music_name,json=musicName,proto3" json:"music_name,omitempty"`                      //音乐名称
	MusicPerformer  string `protobuf:"bytes,3,opt,name=music_performer,json=musicPerformer,proto3" json:"music_performer,omitempty"`       //歌曲演唱者
	MusicAlbum      string `protobuf:"bytes,4,opt,name=music_album,json=musicAlbum,proto3" json:"music_album,omitempty"`                   //唱片集
	MusicFileId     int64  `protobuf:"varint,5,opt,name=music_file_id,json=musicFileId,proto3" json:"music_file_id,omitempty"`             //文件id
	MusicAccessHash int64  `protobuf:"varint,6,opt,name=music_access_hash,json=musicAccessHash,proto3" json:"music_access_hash,omitempty"` //文件hash
	MusicSize       int64  `protobuf:"varint,7,opt,name=music_size,json=musicSize,proto3" json:"music_size,omitempty"`                     //文件大小
	MusicDuration   int32  `protobuf:"varint,8,opt,name=music_duration,json=musicDuration,proto3" json:"music_duration,omitempty"`         //歌曲时长
	MusicRate       int32  `protobuf:"varint,9,opt,name=music_rate,json=musicRate,proto3" json:"music_rate,omitempty"`                     //比特率
	MusicHot        int32  `protobuf:"varint,10,opt,name=music_hot,json=musicHot,proto3" json:"music_hot,omitempty"`                       //歌曲热度
}

func (x *MusicDataInfo) Reset() {
	*x = MusicDataInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicDataInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicDataInfo) ProtoMessage() {}

func (x *MusicDataInfo) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicDataInfo.ProtoReflect.Descriptor instead.
func (*MusicDataInfo) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{47}
}

func (x *MusicDataInfo) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *MusicDataInfo) GetMusicName() string {
	if x != nil {
		return x.MusicName
	}
	return ""
}

func (x *MusicDataInfo) GetMusicPerformer() string {
	if x != nil {
		return x.MusicPerformer
	}
	return ""
}

func (x *MusicDataInfo) GetMusicAlbum() string {
	if x != nil {
		return x.MusicAlbum
	}
	return ""
}

func (x *MusicDataInfo) GetMusicFileId() int64 {
	if x != nil {
		return x.MusicFileId
	}
	return 0
}

func (x *MusicDataInfo) GetMusicAccessHash() int64 {
	if x != nil {
		return x.MusicAccessHash
	}
	return 0
}

func (x *MusicDataInfo) GetMusicSize() int64 {
	if x != nil {
		return x.MusicSize
	}
	return 0
}

func (x *MusicDataInfo) GetMusicDuration() int32 {
	if x != nil {
		return x.MusicDuration
	}
	return 0
}

func (x *MusicDataInfo) GetMusicRate() int32 {
	if x != nil {
		return x.MusicRate
	}
	return 0
}

func (x *MusicDataInfo) GetMusicHot() int32 {
	if x != nil {
		return x.MusicHot
	}
	return 0
}

type GetMusicFileInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryId string `protobuf:"bytes,1,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"` //查询id
	UserId  int32  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`   //用户id
	KeyId   int64  `protobuf:"varint,3,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`      //用户key_id
}

func (x *GetMusicFileInfoReq) Reset() {
	*x = GetMusicFileInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMusicFileInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMusicFileInfoReq) ProtoMessage() {}

func (x *GetMusicFileInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMusicFileInfoReq.ProtoReflect.Descriptor instead.
func (*GetMusicFileInfoReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{48}
}

func (x *GetMusicFileInfoReq) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *GetMusicFileInfoReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetMusicFileInfoReq) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

type GetMusicFileInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode uint32         `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 错误代码
	MusicInfo *MusicDataInfo `protobuf:"bytes,2,opt,name=music_info,json=musicInfo,proto3" json:"music_info,omitempty"`  // 数据列表
}

func (x *GetMusicFileInfoReply) Reset() {
	*x = GetMusicFileInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMusicFileInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMusicFileInfoReply) ProtoMessage() {}

func (x *GetMusicFileInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMusicFileInfoReply.ProtoReflect.Descriptor instead.
func (*GetMusicFileInfoReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{49}
}

func (x *GetMusicFileInfoReply) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetMusicFileInfoReply) GetMusicInfo() *MusicDataInfo {
	if x != nil {
		return x.MusicInfo
	}
	return nil
}

type SendGameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId              int32              `protobuf:"varint,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"` // Unique identifier for the target chat
	ChatType            basetypes.ChatType `protobuf:"varint,2,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"`
	GameShortName       string             `protobuf:"bytes,3,opt,name=game_short_name,json=gameShortName,proto3" json:"game_short_name,omitempty"`                  // Short name of the game
	BotId               int32              `protobuf:"varint,4,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`                                           // the owner of the game
	DisableNotification bool               `protobuf:"varint,5,opt,name=disable_notification,json=disableNotification,proto3" json:"disable_notification,omitempty"` // Users will receive a notification with no sound.
	ReplyToMessageId    uint64             `protobuf:"varint,6,opt,name=reply_to_message_id,json=replyToMessageId,proto3" json:"reply_to_message_id,omitempty"`      // If the message is a reply, ID of the original message
	ReplyMarkup         []byte             `protobuf:"bytes,7,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`
}

func (x *SendGameReq) Reset() {
	*x = SendGameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGameReq) ProtoMessage() {}

func (x *SendGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGameReq.ProtoReflect.Descriptor instead.
func (*SendGameReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{50}
}

func (x *SendGameReq) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *SendGameReq) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

func (x *SendGameReq) GetGameShortName() string {
	if x != nil {
		return x.GameShortName
	}
	return ""
}

func (x *SendGameReq) GetBotId() int32 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *SendGameReq) GetDisableNotification() bool {
	if x != nil {
		return x.DisableNotification
	}
	return false
}

func (x *SendGameReq) GetReplyToMessageId() uint64 {
	if x != nil {
		return x.ReplyToMessageId
	}
	return 0
}

func (x *SendGameReq) GetReplyMarkup() []byte {
	if x != nil {
		return x.ReplyMarkup
	}
	return nil
}

type SendGameReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode uint32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // error code
	MessageId uint64 `protobuf:"varint,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // the sent Message is returned
}

func (x *SendGameReply) Reset() {
	*x = SendGameReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGameReply) ProtoMessage() {}

func (x *SendGameReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGameReply.ProtoReflect.Descriptor instead.
func (*SendGameReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{51}
}

func (x *SendGameReply) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *SendGameReply) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

// 调用设置分数
type SetGameScoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid             int32              `protobuf:"varint,1,opt,name=userid,proto3" json:"userid,omitempty"`                                                     // 用户id
	Score              int32              `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`                                                       // 新分数（非负数）
	Force              bool               `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`                                                       // 如果为true 则覆盖原分数  如果为false则新分数大于旧的分数才会更新
	DisableEditMessage bool               `protobuf:"varint,4,opt,name=disable_edit_message,json=disableEditMessage,proto3" json:"disable_edit_message,omitempty"` // 为true则不编辑
	ChatId             int32              `protobuf:"varint,5,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`                                       // 如果未指定inline_message_id，这里就需要填chatid
	ChatType           basetypes.ChatType `protobuf:"varint,6,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"`         //
	MessageId          int32              `protobuf:"varint,7,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`                              // 如果未指定inline_message_id，则需要填这里的message_id
	InlineMessageId    string             `protobuf:"bytes,8,opt,name=inline_message_id,json=inlineMessageId,proto3" json:"inline_message_id,omitempty"`           // 如果未指定chatid或者message_id 就需要填写inline_message_id
	Botid              int32              `protobuf:"varint,9,opt,name=botid,proto3" json:"botid,omitempty"`                                                       // 请求的机器人id
}

func (x *SetGameScoreReq) Reset() {
	*x = SetGameScoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGameScoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGameScoreReq) ProtoMessage() {}

func (x *SetGameScoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGameScoreReq.ProtoReflect.Descriptor instead.
func (*SetGameScoreReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{52}
}

func (x *SetGameScoreReq) GetUserid() int32 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *SetGameScoreReq) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *SetGameScoreReq) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *SetGameScoreReq) GetDisableEditMessage() bool {
	if x != nil {
		return x.DisableEditMessage
	}
	return false
}

func (x *SetGameScoreReq) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *SetGameScoreReq) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

func (x *SetGameScoreReq) GetMessageId() int32 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *SetGameScoreReq) GetInlineMessageId() string {
	if x != nil {
		return x.InlineMessageId
	}
	return ""
}

func (x *SetGameScoreReq) GetBotid() int32 {
	if x != nil {
		return x.Botid
	}
	return 0
}

// 设置分数返回
type SetGameScoreReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Succeed   bool   `protobuf:"varint,1,opt,name=succeed,proto3" json:"succeed,omitempty"`
	Error     string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Errorcode int32  `protobuf:"varint,3,opt,name=errorcode,proto3" json:"errorcode,omitempty"`
}

func (x *SetGameScoreReply) Reset() {
	*x = SetGameScoreReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGameScoreReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGameScoreReply) ProtoMessage() {}

func (x *SetGameScoreReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGameScoreReply.ProtoReflect.Descriptor instead.
func (*SetGameScoreReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{53}
}

func (x *SetGameScoreReply) GetSucceed() bool {
	if x != nil {
		return x.Succeed
	}
	return false
}

func (x *SetGameScoreReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *SetGameScoreReply) GetErrorcode() int32 {
	if x != nil {
		return x.Errorcode
	}
	return 0
}

type AnswerInlineQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type              string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	InlineQueryId     string `protobuf:"bytes,2,opt,name=inline_query_id,json=inlineQueryId,proto3" json:"inline_query_id,omitempty"`
	Results           []byte `protobuf:"bytes,3,opt,name=results,proto3" json:"results,omitempty"`
	CacheTime         int32  `protobuf:"varint,4,opt,name=cache_time,json=cacheTime,proto3" json:"cache_time,omitempty"`
	IsPersonal        bool   `protobuf:"varint,5,opt,name=is_personal,json=isPersonal,proto3" json:"is_personal,omitempty"`
	NextOffset        string `protobuf:"bytes,6,opt,name=next_offset,json=nextOffset,proto3" json:"next_offset,omitempty"`
	SwitchPmText      string `protobuf:"bytes,7,opt,name=switch_pm_text,json=switchPmText,proto3" json:"switch_pm_text,omitempty"`
	SwitchPmParameter string `protobuf:"bytes,8,opt,name=switch_pm_parameter,json=switchPmParameter,proto3" json:"switch_pm_parameter,omitempty"`
}

func (x *AnswerInlineQueryRequest) Reset() {
	*x = AnswerInlineQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerInlineQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerInlineQueryRequest) ProtoMessage() {}

func (x *AnswerInlineQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerInlineQueryRequest.ProtoReflect.Descriptor instead.
func (*AnswerInlineQueryRequest) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{54}
}

func (x *AnswerInlineQueryRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AnswerInlineQueryRequest) GetInlineQueryId() string {
	if x != nil {
		return x.InlineQueryId
	}
	return ""
}

func (x *AnswerInlineQueryRequest) GetResults() []byte {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *AnswerInlineQueryRequest) GetCacheTime() int32 {
	if x != nil {
		return x.CacheTime
	}
	return 0
}

func (x *AnswerInlineQueryRequest) GetIsPersonal() bool {
	if x != nil {
		return x.IsPersonal
	}
	return false
}

func (x *AnswerInlineQueryRequest) GetNextOffset() string {
	if x != nil {
		return x.NextOffset
	}
	return ""
}

func (x *AnswerInlineQueryRequest) GetSwitchPmText() string {
	if x != nil {
		return x.SwitchPmText
	}
	return ""
}

func (x *AnswerInlineQueryRequest) GetSwitchPmParameter() string {
	if x != nil {
		return x.SwitchPmParameter
	}
	return ""
}

// 机器人返回接口-Inline
type ReplyBotInlineCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []byte `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Error  int32  `protobuf:"varint,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ReplyBotInlineCall) Reset() {
	*x = ReplyBotInlineCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyBotInlineCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyBotInlineCall) ProtoMessage() {}

func (x *ReplyBotInlineCall) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyBotInlineCall.ProtoReflect.Descriptor instead.
func (*ReplyBotInlineCall) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{55}
}

func (x *ReplyBotInlineCall) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ReplyBotInlineCall) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

// 获取用户当前的游戏分数排行
type GetGameHighScoresReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          int32              `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                               // 用户ID
	ChatId          int32              `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`                               // 会话ID
	ChatType        basetypes.ChatType `protobuf:"varint,3,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"` // 会话类型
	MessageId       int32              `protobuf:"varint,4,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`                      // 如果未指定inline_message_id，则需要填这里的message_id
	InlineMessageId string             `protobuf:"bytes,5,opt,name=inline_message_id,json=inlineMessageId,proto3" json:"inline_message_id,omitempty"`   // 内联消息ID
}

func (x *GetGameHighScoresReq) Reset() {
	*x = GetGameHighScoresReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameHighScoresReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameHighScoresReq) ProtoMessage() {}

func (x *GetGameHighScoresReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameHighScoresReq.ProtoReflect.Descriptor instead.
func (*GetGameHighScoresReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{56}
}

func (x *GetGameHighScoresReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetGameHighScoresReq) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *GetGameHighScoresReq) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

func (x *GetGameHighScoresReq) GetMessageId() int32 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *GetGameHighScoresReq) GetInlineMessageId() string {
	if x != nil {
		return x.InlineMessageId
	}
	return ""
}

type GameHighScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position int32           `protobuf:"varint,1,opt,name=position,proto3" json:"position,omitempty"` // Position in high score table for the game
	User     *basetypes.User `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`          // user
	Score    int32           `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`       // score
}

func (x *GameHighScore) Reset() {
	*x = GameHighScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameHighScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameHighScore) ProtoMessage() {}

func (x *GameHighScore) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameHighScore.ProtoReflect.Descriptor instead.
func (*GameHighScore) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{57}
}

func (x *GameHighScore) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *GameHighScore) GetUser() *basetypes.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GameHighScore) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type GetGameHighScoresReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameHighscore []*GameHighScore `protobuf:"bytes,1,rep,name=game_highscore,json=gameHighscore,proto3" json:"game_highscore,omitempty"`
}

func (x *GetGameHighScoresReply) Reset() {
	*x = GetGameHighScoresReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameHighScoresReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameHighScoresReply) ProtoMessage() {}

func (x *GetGameHighScoresReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameHighScoresReply.ProtoReflect.Descriptor instead.
func (*GetGameHighScoresReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{58}
}

func (x *GetGameHighScoresReply) GetGameHighscore() []*GameHighScore {
	if x != nil {
		return x.GameHighscore
	}
	return nil
}

type KickChatMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromId   int32              `protobuf:"varint,1,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`                               // 踢人的机器人ID
	BannedId int32              `protobuf:"varint,2,opt,name=banned_id,json=bannedId,proto3" json:"banned_id,omitempty"`                         // 被踢的用户ID
	ChatId   int32              `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`                               // 会话ID
	ChatType basetypes.ChatType `protobuf:"varint,4,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"` // 会话类型
	UtilDate int32              `protobuf:"varint,5,opt,name=util_date,json=utilDate,proto3" json:"util_date,omitempty"`                         // 解禁日期
}

func (x *KickChatMemberRequest) Reset() {
	*x = KickChatMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickChatMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickChatMemberRequest) ProtoMessage() {}

func (x *KickChatMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickChatMemberRequest.ProtoReflect.Descriptor instead.
func (*KickChatMemberRequest) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{59}
}

func (x *KickChatMemberRequest) GetFromId() int32 {
	if x != nil {
		return x.FromId
	}
	return 0
}

func (x *KickChatMemberRequest) GetBannedId() int32 {
	if x != nil {
		return x.BannedId
	}
	return 0
}

func (x *KickChatMemberRequest) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *KickChatMemberRequest) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

func (x *KickChatMemberRequest) GetUtilDate() int32 {
	if x != nil {
		return x.UtilDate
	}
	return 0
}

type KickChatMemberReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // error code
}

func (x *KickChatMemberReply) Reset() {
	*x = KickChatMemberReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickChatMemberReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickChatMemberReply) ProtoMessage() {}

func (x *KickChatMemberReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickChatMemberReply.ProtoReflect.Descriptor instead.
func (*KickChatMemberReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{60}
}

func (x *KickChatMemberReply) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type GroupInactiveUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`          // 用户ID
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`       // 用户名
	Time    int32  `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`      // 活跃时间
	TimeStr string `protobuf:"bytes,4,opt,name=timeStr,proto3" json:"timeStr,omitempty"` // 活跃时间格式化字符串
}

func (x *GroupInactiveUser) Reset() {
	*x = GroupInactiveUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInactiveUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInactiveUser) ProtoMessage() {}

func (x *GroupInactiveUser) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInactiveUser.ProtoReflect.Descriptor instead.
func (*GroupInactiveUser) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{61}
}

func (x *GroupInactiveUser) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GroupInactiveUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupInactiveUser) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *GroupInactiveUser) GetTimeStr() string {
	if x != nil {
		return x.TimeStr
	}
	return ""
}

type GetGroupInactiveUsersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId   int32              `protobuf:"varint,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	ChatType basetypes.ChatType `protobuf:"varint,2,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"` // 会话类型
	Limit    int32              `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Botid    int32              `protobuf:"varint,4,opt,name=botid,proto3" json:"botid,omitempty"`
}

func (x *GetGroupInactiveUsersReq) Reset() {
	*x = GetGroupInactiveUsersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupInactiveUsersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupInactiveUsersReq) ProtoMessage() {}

func (x *GetGroupInactiveUsersReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupInactiveUsersReq.ProtoReflect.Descriptor instead.
func (*GetGroupInactiveUsersReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{62}
}

func (x *GetGroupInactiveUsersReq) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *GetGroupInactiveUsersReq) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

func (x *GetGroupInactiveUsersReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetGroupInactiveUsersReq) GetBotid() int32 {
	if x != nil {
		return x.Botid
	}
	return 0
}

type GetGroupInactiveUsersResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users     []*GroupInactiveUser `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	Count     int32                `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`                          // 群当前总人数
	ErrorCode int32                `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // error code
}

func (x *GetGroupInactiveUsersResult) Reset() {
	*x = GetGroupInactiveUsersResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupInactiveUsersResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupInactiveUsersResult) ProtoMessage() {}

func (x *GetGroupInactiveUsersResult) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupInactiveUsersResult.ProtoReflect.Descriptor instead.
func (*GetGroupInactiveUsersResult) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{63}
}

func (x *GetGroupInactiveUsersResult) GetUsers() []*GroupInactiveUser {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *GetGroupInactiveUsersResult) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetGroupInactiveUsersResult) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type DeleteChannelHistoryMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId    int32              `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`                                  // 机器人ID
	UserId   int32              `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                               // 用户ID
	ChatId   int32              `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`                               // 会话ID
	ChatType basetypes.ChatType `protobuf:"varint,4,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"` // 会话类型
}

func (x *DeleteChannelHistoryMessageReq) Reset() {
	*x = DeleteChannelHistoryMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChannelHistoryMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChannelHistoryMessageReq) ProtoMessage() {}

func (x *DeleteChannelHistoryMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChannelHistoryMessageReq.ProtoReflect.Descriptor instead.
func (*DeleteChannelHistoryMessageReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{64}
}

func (x *DeleteChannelHistoryMessageReq) GetBotId() int32 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *DeleteChannelHistoryMessageReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteChannelHistoryMessageReq) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *DeleteChannelHistoryMessageReq) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

type DeleteChannelHistoryMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // error code
}

func (x *DeleteChannelHistoryMessageReply) Reset() {
	*x = DeleteChannelHistoryMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChannelHistoryMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChannelHistoryMessageReply) ProtoMessage() {}

func (x *DeleteChannelHistoryMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChannelHistoryMessageReply.ProtoReflect.Descriptor instead.
func (*DeleteChannelHistoryMessageReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{65}
}

func (x *DeleteChannelHistoryMessageReply) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type LeaveChatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId    int32              `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	ChatId   int32              `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	ChatType basetypes.ChatType `protobuf:"varint,3,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"` // 会话类型
}

func (x *LeaveChatReq) Reset() {
	*x = LeaveChatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveChatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveChatReq) ProtoMessage() {}

func (x *LeaveChatReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveChatReq.ProtoReflect.Descriptor instead.
func (*LeaveChatReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{66}
}

func (x *LeaveChatReq) GetBotId() int32 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *LeaveChatReq) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *LeaveChatReq) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

type LeaveChatReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
}

func (x *LeaveChatReply) Reset() {
	*x = LeaveChatReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveChatReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveChatReply) ProtoMessage() {}

func (x *LeaveChatReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveChatReply.ProtoReflect.Descriptor instead.
func (*LeaveChatReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{67}
}

func (x *LeaveChatReply) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type GetChatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId    int32              `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	ChatId   int32              `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	ChatType basetypes.ChatType `protobuf:"varint,3,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"` // 会话类型
}

func (x *GetChatReq) Reset() {
	*x = GetChatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatReq) ProtoMessage() {}

func (x *GetChatReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatReq.ProtoReflect.Descriptor instead.
func (*GetChatReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{68}
}

func (x *GetChatReq) GetBotId() int32 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *GetChatReq) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *GetChatReq) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

type GetChatReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	Chat      []byte `protobuf:"bytes,2,opt,name=chat,proto3" json:"chat,omitempty"` // 数据列表
}

func (x *GetChatReply) Reset() {
	*x = GetChatReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatReply) ProtoMessage() {}

func (x *GetChatReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatReply.ProtoReflect.Descriptor instead.
func (*GetChatReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{69}
}

func (x *GetChatReply) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetChatReply) GetChat() []byte {
	if x != nil {
		return x.Chat
	}
	return nil
}

type GetChatMembersCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId    int32              `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	ChatId   int32              `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	ChatType basetypes.ChatType `protobuf:"varint,3,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"` // 会话类型
}

func (x *GetChatMembersCountReq) Reset() {
	*x = GetChatMembersCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatMembersCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatMembersCountReq) ProtoMessage() {}

func (x *GetChatMembersCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatMembersCountReq.ProtoReflect.Descriptor instead.
func (*GetChatMembersCountReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{70}
}

func (x *GetChatMembersCountReq) GetBotId() int32 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *GetChatMembersCountReq) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *GetChatMembersCountReq) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

type GetChatMembersCountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	Count     int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetChatMembersCountReply) Reset() {
	*x = GetChatMembersCountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatMembersCountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatMembersCountReply) ProtoMessage() {}

func (x *GetChatMembersCountReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatMembersCountReply.ProtoReflect.Descriptor instead.
func (*GetChatMembersCountReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{71}
}

func (x *GetChatMembersCountReply) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetChatMembersCountReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetChatAdministratorsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId    int32              `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	ChatId   int32              `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	ChatType basetypes.ChatType `protobuf:"varint,3,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"` // 会话类型
	UserId   int32              `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                               // 用户id
}

func (x *GetChatAdministratorsReq) Reset() {
	*x = GetChatAdministratorsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatAdministratorsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatAdministratorsReq) ProtoMessage() {}

func (x *GetChatAdministratorsReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatAdministratorsReq.ProtoReflect.Descriptor instead.
func (*GetChatAdministratorsReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{72}
}

func (x *GetChatAdministratorsReq) GetBotId() int32 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *GetChatAdministratorsReq) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *GetChatAdministratorsReq) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

func (x *GetChatAdministratorsReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetChatAdministratorsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode  int32  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ChatMember []byte `protobuf:"bytes,2,opt,name=chat_member,json=chatMember,proto3" json:"chat_member,omitempty"` //
}

func (x *GetChatAdministratorsReply) Reset() {
	*x = GetChatAdministratorsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatAdministratorsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatAdministratorsReply) ProtoMessage() {}

func (x *GetChatAdministratorsReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatAdministratorsReply.ProtoReflect.Descriptor instead.
func (*GetChatAdministratorsReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{73}
}

func (x *GetChatAdministratorsReply) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetChatAdministratorsReply) GetChatMember() []byte {
	if x != nil {
		return x.ChatMember
	}
	return nil
}

type SetChatTitleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId    int32              `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	ChatId   int32              `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	ChatType basetypes.ChatType `protobuf:"varint,3,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"` // 会话类型
	Title    string             `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *SetChatTitleReq) Reset() {
	*x = SetChatTitleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetChatTitleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChatTitleReq) ProtoMessage() {}

func (x *SetChatTitleReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChatTitleReq.ProtoReflect.Descriptor instead.
func (*SetChatTitleReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{74}
}

func (x *SetChatTitleReq) GetBotId() int32 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *SetChatTitleReq) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *SetChatTitleReq) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

func (x *SetChatTitleReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type SetChatTitleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
}

func (x *SetChatTitleReply) Reset() {
	*x = SetChatTitleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetChatTitleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChatTitleReply) ProtoMessage() {}

func (x *SetChatTitleReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChatTitleReply.ProtoReflect.Descriptor instead.
func (*SetChatTitleReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{75}
}

func (x *SetChatTitleReply) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type SetChatDescriptionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId       int32              `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	ChatId      int32              `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	ChatType    basetypes.ChatType `protobuf:"varint,3,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"` // 会话类型
	Description string             `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *SetChatDescriptionReq) Reset() {
	*x = SetChatDescriptionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetChatDescriptionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChatDescriptionReq) ProtoMessage() {}

func (x *SetChatDescriptionReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChatDescriptionReq.ProtoReflect.Descriptor instead.
func (*SetChatDescriptionReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{76}
}

func (x *SetChatDescriptionReq) GetBotId() int32 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *SetChatDescriptionReq) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *SetChatDescriptionReq) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

func (x *SetChatDescriptionReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type SetChatDescriptionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
}

func (x *SetChatDescriptionReply) Reset() {
	*x = SetChatDescriptionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetChatDescriptionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChatDescriptionReply) ProtoMessage() {}

func (x *SetChatDescriptionReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChatDescriptionReply.ProtoReflect.Descriptor instead.
func (*SetChatDescriptionReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{77}
}

func (x *SetChatDescriptionReply) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type PinChatMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId               int32              `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	ChatId              int32              `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	ChatType            basetypes.ChatType `protobuf:"varint,3,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"` // 会话类型
	MessageId           int32              `protobuf:"varint,4,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	DisableNotification bool               `protobuf:"varint,5,opt,name=disable_notification,json=disableNotification,proto3" json:"disable_notification,omitempty"`
}

func (x *PinChatMessageReq) Reset() {
	*x = PinChatMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PinChatMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinChatMessageReq) ProtoMessage() {}

func (x *PinChatMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PinChatMessageReq.ProtoReflect.Descriptor instead.
func (*PinChatMessageReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{78}
}

func (x *PinChatMessageReq) GetBotId() int32 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *PinChatMessageReq) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *PinChatMessageReq) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

func (x *PinChatMessageReq) GetMessageId() int32 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *PinChatMessageReq) GetDisableNotification() bool {
	if x != nil {
		return x.DisableNotification
	}
	return false
}

type PinChatMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
}

func (x *PinChatMessageReply) Reset() {
	*x = PinChatMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PinChatMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinChatMessageReply) ProtoMessage() {}

func (x *PinChatMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PinChatMessageReply.ProtoReflect.Descriptor instead.
func (*PinChatMessageReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{79}
}

func (x *PinChatMessageReply) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type UnPinChatMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId    int32              `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	ChatId   int32              `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	ChatType basetypes.ChatType `protobuf:"varint,3,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"` // 会话类型
}

func (x *UnPinChatMessageReq) Reset() {
	*x = UnPinChatMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnPinChatMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnPinChatMessageReq) ProtoMessage() {}

func (x *UnPinChatMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnPinChatMessageReq.ProtoReflect.Descriptor instead.
func (*UnPinChatMessageReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{80}
}

func (x *UnPinChatMessageReq) GetBotId() int32 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *UnPinChatMessageReq) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *UnPinChatMessageReq) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

type UnPinChatMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
}

func (x *UnPinChatMessageReply) Reset() {
	*x = UnPinChatMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnPinChatMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnPinChatMessageReply) ProtoMessage() {}

func (x *UnPinChatMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnPinChatMessageReply.ProtoReflect.Descriptor instead.
func (*UnPinChatMessageReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{81}
}

func (x *UnPinChatMessageReply) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type SendChatActionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId    int32              `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	ChatId   int32              `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	ChatType basetypes.ChatType `protobuf:"varint,3,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"` // 会话类型
	Action   string             `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *SendChatActionReq) Reset() {
	*x = SendChatActionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChatActionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChatActionReq) ProtoMessage() {}

func (x *SendChatActionReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChatActionReq.ProtoReflect.Descriptor instead.
func (*SendChatActionReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{82}
}

func (x *SendChatActionReq) GetBotId() int32 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *SendChatActionReq) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *SendChatActionReq) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

func (x *SendChatActionReq) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type SendChatActionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
}

func (x *SendChatActionReply) Reset() {
	*x = SendChatActionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChatActionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChatActionReply) ProtoMessage() {}

func (x *SendChatActionReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChatActionReply.ProtoReflect.Descriptor instead.
func (*SendChatActionReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{83}
}

func (x *SendChatActionReply) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type SendContactReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId               int32              `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	ChatId              int32              `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	ChatType            basetypes.ChatType `protobuf:"varint,3,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"` // 会话类型
	PhoneNumber         string             `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	FirstName           string             `protobuf:"bytes,5,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName            string             `protobuf:"bytes,6,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Vcard               string             `protobuf:"bytes,7,opt,name=vcard,proto3" json:"vcard,omitempty"`
	DisableNotification bool               `protobuf:"varint,8,opt,name=disable_notification,json=disableNotification,proto3" json:"disable_notification,omitempty"`
	ReplyToMessageId    uint64             `protobuf:"varint,9,opt,name=reply_to_message_id,json=replyToMessageId,proto3" json:"reply_to_message_id,omitempty"`
	ReplyMarkup         []byte             `protobuf:"bytes,10,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`
}

func (x *SendContactReq) Reset() {
	*x = SendContactReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendContactReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendContactReq) ProtoMessage() {}

func (x *SendContactReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendContactReq.ProtoReflect.Descriptor instead.
func (*SendContactReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{84}
}

func (x *SendContactReq) GetBotId() int32 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *SendContactReq) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *SendContactReq) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

func (x *SendContactReq) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *SendContactReq) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *SendContactReq) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *SendContactReq) GetVcard() string {
	if x != nil {
		return x.Vcard
	}
	return ""
}

func (x *SendContactReq) GetDisableNotification() bool {
	if x != nil {
		return x.DisableNotification
	}
	return false
}

func (x *SendContactReq) GetReplyToMessageId() uint64 {
	if x != nil {
		return x.ReplyToMessageId
	}
	return 0
}

func (x *SendContactReq) GetReplyMarkup() []byte {
	if x != nil {
		return x.ReplyMarkup
	}
	return nil
}

type SendContactReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
}

func (x *SendContactReply) Reset() {
	*x = SendContactReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendContactReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendContactReply) ProtoMessage() {}

func (x *SendContactReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendContactReply.ProtoReflect.Descriptor instead.
func (*SendContactReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{85}
}

func (x *SendContactReply) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type GetGroupsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId      int32 `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	PeerFilter int32 `protobuf:"varint,2,opt,name=peer_filter,json=peerFilter,proto3" json:"peer_filter,omitempty"` // 2：只要普通群 4：只要超级群 8：只要频道 （可相互组合 ex: 2|4|8 暂时不支持单聊)
}

func (x *GetGroupsReq) Reset() {
	*x = GetGroupsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsReq) ProtoMessage() {}

func (x *GetGroupsReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsReq.ProtoReflect.Descriptor instead.
func (*GetGroupsReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{86}
}

func (x *GetGroupsReq) GetBotId() int32 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *GetGroupsReq) GetPeerFilter() int32 {
	if x != nil {
		return x.PeerFilter
	}
	return 0
}

type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID   int32  `protobuf:"varint,1,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
	PeerName string `protobuf:"bytes,2,opt,name=PeerName,proto3" json:"PeerName,omitempty"`
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{87}
}

func (x *Peer) GetPeerID() int32 {
	if x != nil {
		return x.PeerID
	}
	return 0
}

func (x *Peer) GetPeerName() string {
	if x != nil {
		return x.PeerName
	}
	return ""
}

type GetGroupsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode   int32   `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	Groups      []*Peer `protobuf:"bytes,2,rep,name=Groups,proto3" json:"Groups,omitempty"`           // 普通群
	SuperGroups []*Peer `protobuf:"bytes,3,rep,name=SuperGroups,proto3" json:"SuperGroups,omitempty"` // 超级群
	Channels    []*Peer `protobuf:"bytes,4,rep,name=Channels,proto3" json:"Channels,omitempty"`       // 频道
}

func (x *GetGroupsReply) Reset() {
	*x = GetGroupsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsReply) ProtoMessage() {}

func (x *GetGroupsReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsReply.ProtoReflect.Descriptor instead.
func (*GetGroupsReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{88}
}

func (x *GetGroupsReply) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetGroupsReply) GetGroups() []*Peer {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *GetGroupsReply) GetSuperGroups() []*Peer {
	if x != nil {
		return x.SuperGroups
	}
	return nil
}

func (x *GetGroupsReply) GetChannels() []*Peer {
	if x != nil {
		return x.Channels
	}
	return nil
}

type LipBlockReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 禁言时间
	BlockTime int64 `protobuf:"varint,2,opt,name=blockTime,proto3" json:"blockTime,omitempty"`
	GroupId   int64 `protobuf:"varint,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	BotId     int32 `protobuf:"varint,4,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
}

func (x *LipBlockReq) Reset() {
	*x = LipBlockReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LipBlockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LipBlockReq) ProtoMessage() {}

func (x *LipBlockReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LipBlockReq.ProtoReflect.Descriptor instead.
func (*LipBlockReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{89}
}

func (x *LipBlockReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LipBlockReq) GetBlockTime() int64 {
	if x != nil {
		return x.BlockTime
	}
	return 0
}

func (x *LipBlockReq) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *LipBlockReq) GetBotId() int32 {
	if x != nil {
		return x.BotId
	}
	return 0
}

type LipBlockReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
}

func (x *LipBlockReply) Reset() {
	*x = LipBlockReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LipBlockReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LipBlockReply) ProtoMessage() {}

func (x *LipBlockReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LipBlockReply.ProtoReflect.Descriptor instead.
func (*LipBlockReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{90}
}

func (x *LipBlockReply) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type KickNotBanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId    int32              `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`    // 踢人的机器人ID
	UserId   int32              `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 被踢的用户ID
	ChatId   int32              `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	ChatType basetypes.ChatType `protobuf:"varint,4,opt,name=chat_type,json=chatType,proto3,enum=basetypes.ChatType" json:"chat_type,omitempty"`
}

func (x *KickNotBanReq) Reset() {
	*x = KickNotBanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickNotBanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickNotBanReq) ProtoMessage() {}

func (x *KickNotBanReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickNotBanReq.ProtoReflect.Descriptor instead.
func (*KickNotBanReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{91}
}

func (x *KickNotBanReq) GetBotId() int32 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *KickNotBanReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *KickNotBanReq) GetChatId() int32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *KickNotBanReq) GetChatType() basetypes.ChatType {
	if x != nil {
		return x.ChatType
	}
	return basetypes.ChatType(0)
}

type KickNotBanReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
}

func (x *KickNotBanReply) Reset() {
	*x = KickNotBanReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickNotBanReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickNotBanReply) ProtoMessage() {}

func (x *KickNotBanReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickNotBanReply.ProtoReflect.Descriptor instead.
func (*KickNotBanReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{92}
}

func (x *KickNotBanReply) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type GetAdminGroupsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId  int32 `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	UserId int32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetAdminGroupsReq) Reset() {
	*x = GetAdminGroupsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminGroupsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminGroupsReq) ProtoMessage() {}

func (x *GetAdminGroupsReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminGroupsReq.ProtoReflect.Descriptor instead.
func (*GetAdminGroupsReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{93}
}

func (x *GetAdminGroupsReq) GetBotId() int32 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *GetAdminGroupsReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetAdminGroupsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode   int32   `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	Groups      []*Peer `protobuf:"bytes,2,rep,name=Groups,proto3" json:"Groups,omitempty"`           // 普通群
	SuperGroups []*Peer `protobuf:"bytes,3,rep,name=SuperGroups,proto3" json:"SuperGroups,omitempty"` // 超级群
	Channels    []*Peer `protobuf:"bytes,4,rep,name=Channels,proto3" json:"Channels,omitempty"`       // 频道
}

func (x *GetAdminGroupsReply) Reset() {
	*x = GetAdminGroupsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminGroupsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminGroupsReply) ProtoMessage() {}

func (x *GetAdminGroupsReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminGroupsReply.ProtoReflect.Descriptor instead.
func (*GetAdminGroupsReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{94}
}

func (x *GetAdminGroupsReply) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetAdminGroupsReply) GetGroups() []*Peer {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *GetAdminGroupsReply) GetSuperGroups() []*Peer {
	if x != nil {
		return x.SuperGroups
	}
	return nil
}

func (x *GetAdminGroupsReply) GetChannels() []*Peer {
	if x != nil {
		return x.Channels
	}
	return nil
}

type SetJoinGroupsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId  int32 `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	Enable bool  `protobuf:"varint,2,opt,name=enable,proto3" json:"enable,omitempty"` // true 允许加入 false 不允许加群
}

func (x *SetJoinGroupsReq) Reset() {
	*x = SetJoinGroupsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetJoinGroupsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetJoinGroupsReq) ProtoMessage() {}

func (x *SetJoinGroupsReq) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetJoinGroupsReq.ProtoReflect.Descriptor instead.
func (*SetJoinGroupsReq) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{95}
}

func (x *SetJoinGroupsReq) GetBotId() int32 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *SetJoinGroupsReq) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type SetJoinGroupsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 0 成功 其余失败
}

func (x *SetJoinGroupsReply) Reset() {
	*x = SetJoinGroupsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiservice_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetJoinGroupsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetJoinGroupsReply) ProtoMessage() {}

func (x *SetJoinGroupsReply) ProtoReflect() protoreflect.Message {
	mi := &file_apiservice_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetJoinGroupsReply.ProtoReflect.Descriptor instead.
func (*SetJoinGroupsReply) Descriptor() ([]byte, []int) {
	return file_apiservice_proto_rawDescGZIP(), []int{96}
}

func (x *SetJoinGroupsReply) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

var File_apiservice_proto protoreflect.FileDescriptor

var file_apiservice_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x23,
	0x62, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x73, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x70, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42,
	0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a,
	0x07, 0x6f, 0x66, 0x66, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x6f, 0x66, 0x66, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x07, 0x42,
	0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x6f, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x68, 0x6f, 0x74, 0x22, 0xd2, 0x01, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x42, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x40,
	0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x31, 0x0a, 0x09, 0x62, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x72,
	0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x62, 0x6f,
	0x49, 0x6e, 0x66, 0x6f, 0x41, 0x72, 0x72, 0x22, 0x35, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x10, 0x03, 0x22, 0x44,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x7a, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x22, 0x79, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x50, 0x6c,
	0x61, 0x7a, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x3e, 0x0a, 0x0e, 0x62, 0x6f, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x7a, 0x61, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x7a, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0c, 0x62, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x7a, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x30, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x7a, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x22, 0x9a, 0x01, 0x0a, 0x0c, 0x42, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x7a, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x75,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x7a, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3e, 0x0a, 0x0e, 0x62, 0x6f, 0x74, 0x5f, 0x70, 0x6c, 0x61,
	0x7a, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x6f, 0x74, 0x50, 0x6c,
	0x61, 0x7a, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x62, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x7a,
	0x61, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x99, 0x04, 0x0a, 0x09, 0x42, 0x6f, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6f, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6f, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x77, 0x65, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x6f, 0x77, 0x65, 0x72, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x62,
	0x6f, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x62, 0x6f, 0x75, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x63, 0x68, 0x61, 0x74, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x6f, 0x63, 0x68, 0x61, 0x74, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x2d, 0x0a, 0x12, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x6f, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x68, 0x6f, 0x74, 0x22, 0xbf, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x42, 0x0a, 0x07, 0x65,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x2d, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x6f, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x36,
	0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x6f, 0x74, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x10, 0x02, 0x22, 0x30, 0x0a, 0x0a, 0x42, 0x6f, 0x74, 0x4c, 0x69, 0x6b,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x0d, 0x42, 0x6f, 0x74,
	0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x65, 0x72,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x6f, 0x74, 0x4c, 0x69, 0x6b, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x63, 0x6f, 0x64, 0x65,
	0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x36, 0x0a, 0x09, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10,
	0x02, 0x22, 0x47, 0x0a, 0x0c, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x37, 0x0a, 0x09, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3d, 0x0a, 0x0c, 0x4d, 0x75,
	0x73, 0x69, 0x63, 0x53, 0x61, 0x76, 0x65, 0x52, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x3d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x4c,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0xf5, 0x01, 0x0a,
	0x16, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f,
	0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x10, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x75,
	0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61,
	0x72, 0x6b, 0x75, 0x70, 0x22, 0x54, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x78, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xfc, 0x01, 0x0a, 0x13, 0x53,
	0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f,
	0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x22, 0x51, 0x0a, 0x11, 0x53, 0x65, 0x6e,
	0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xce, 0x02, 0x0a,
	0x10, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x6f, 0x75, 0x72, 0x73, 0x71,
	0x75, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66,
	0x6f, 0x75, 0x72, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54,
	0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x22, 0x4e, 0x0a,
	0x0e, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xd5, 0x01,
	0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x12, 0x2d, 0x0a, 0x13, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x6f, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x10, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6d, 0x61, 0x72, 0x6b,
	0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4d,
	0x61, 0x72, 0x6b, 0x75, 0x70, 0x22, 0x67, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xd8,
	0x01, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x2d, 0x0a, 0x13, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f,
	0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x22, 0x6a, 0x0a, 0x11, 0x53, 0x65, 0x6e,
	0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xee, 0x01, 0x0a, 0x15, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x30, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0e, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x43, 0x68, 0x61,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x72, 0x6f,
	0x6d, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x13, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xbc, 0x01, 0x0a, 0x1a,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x73, 0x68, 0x6f, 0x77, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x18, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x91, 0x02, 0x0a, 0x16, 0x45, 0x64, 0x69, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x30, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61,
	0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d, 0x61,
	0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f,
	0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x22, 0x35, 0x0a, 0x14, 0x45, 0x64, 0x69,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0xd2, 0x01, 0x0a, 0x19, 0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30,
	0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6d, 0x61, 0x72, 0x6b,
	0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4d,
	0x61, 0x72, 0x6b, 0x75, 0x70, 0x22, 0x38, 0x0a, 0x17, 0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x90, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61,
	0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x22, 0x33, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x57, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x22, 0x30, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x17, 0x53, 0x65,
	0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x2d, 0x0a, 0x13, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x22, 0x8b, 0x01,
	0x0a, 0x11, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6a, 0x0a, 0x0f, 0x4d,
	0x75, 0x73, 0x69, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x38, 0x0a,
	0x0a, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d,
	0x75, 0x73, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xe5, 0x02, 0x0a, 0x0d, 0x4d, 0x75, 0x73, 0x69,
	0x63, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x70, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x22, 0x0a,
	0x0d, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x68, 0x6f, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x48, 0x6f, 0x74, 0x22,
	0x60, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49,
	0x64, 0x22, 0x70, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x6d, 0x75, 0x73,
	0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63,
	0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x9c, 0x02, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a,
	0x14, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2d, 0x0a, 0x13, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b,
	0x75, 0x70, 0x22, 0x4d, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x22, 0xb3, 0x02, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68,
	0x61, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x68,
	0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x74, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x62, 0x6f, 0x74, 0x69, 0x64, 0x22, 0x61, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xa7, 0x02, 0x0a, 0x18, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x69, 0x73, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x1f, 0x0a,
	0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x24,
	0x0a, 0x0e, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x50, 0x6d,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5f, 0x70,
	0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x50, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x22, 0x42, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x6f, 0x74,
	0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xc5, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61,
	0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x68, 0x61,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x22, 0x66, 0x0a, 0x0d, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x5a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x40, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x69, 0x67, 0x68,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x48, 0x69, 0x67, 0x68, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x15, 0x4b, 0x69, 0x63, 0x6b, 0x43, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x74, 0x69, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x75, 0x74, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x22, 0x34, 0x0a, 0x13,
	0x4b, 0x69, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x65, 0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x22, 0x91, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12,
	0x30, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x74, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x6f, 0x74, 0x69, 0x64, 0x22, 0x87, 0x01,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x33, 0x0a,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x6f, 0x74, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61,
	0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x68, 0x61,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x41, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x70, 0x0a, 0x0c, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x6e, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x6f, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x41, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x22, 0x7a,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4f, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0x89, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63,
	0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63,
	0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x32, 0x0a,
	0x11, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x9b, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62,
	0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x6f, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x38, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x11, 0x50, 0x69,
	0x6e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x15, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12,
	0x30, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x31, 0x0a, 0x14, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x13, 0x50, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x77, 0x0a, 0x13, 0x55, 0x6e, 0x50,
	0x69, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64,
	0x12, 0x30, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x55, 0x6e, 0x50, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x11, 0x53,
	0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64,
	0x12, 0x30, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x13, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0xec, 0x02, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61,
	0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x68, 0x61,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x63, 0x61, 0x72, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x63, 0x61, 0x72, 0x64, 0x12, 0x31, 0x0a, 0x14, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a,
	0x13, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x22,
	0x31, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x46, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x65, 0x65,
	0x72, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x70, 0x65, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x3a, 0x0a, 0x04, 0x50, 0x65,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x65,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x65,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x06, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x53, 0x75, 0x70, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x0b, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x08, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x73, 0x22, 0x76, 0x0a, 0x0b, 0x4c, 0x69, 0x70, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x0d,
	0x4c, 0x69, 0x70, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x8a, 0x01, 0x0a,
	0x0d, 0x4b, 0x69, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x15,
	0x0a, 0x06, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x30, 0x0a, 0x0f, 0x4b, 0x69, 0x63,
	0x6b, 0x4e, 0x6f, 0x74, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x43, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xc0, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x12, 0x32, 0x0a, 0x0b, 0x53, 0x75, 0x70, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x0b, 0x53, 0x75, 0x70, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x08, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x73, 0x22, 0x41, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x69,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x32, 0xd3, 0x1e, 0x0a, 0x03,
	0x42, 0x6f, 0x74, 0x12, 0x3b, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x12, 0x18, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x4a, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1d,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0f,
	0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x22, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x09, 0x53, 0x65, 0x6e,
	0x64, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x47, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12,
	0x1c, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0c, 0x53,
	0x65, 0x6e, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a,
	0x0e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x21, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x13, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x26, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0f,
	0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x22, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x12, 0x45, 0x64, 0x69, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x61, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x4a, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x1d,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x1d, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10, 0x53,
	0x65, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x23, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0d, 0x53, 0x61, 0x76, 0x65,
	0x4d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x61, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x61, 0x76, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x63, 0x0a, 0x1b, 0x42, 0x61, 0x73, 0x65, 0x51, 0x75, 0x65, 0x72, 0x74, 0x49, 0x64, 0x47, 0x65,
	0x74, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x75, 0x73, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x21, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x75, 0x73, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x4d, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x07,
	0x42, 0x6f, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x6f, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x6f, 0x74,
	0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x12, 0x1d,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x08, 0x73, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x73, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x4c, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x1b, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5b, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x11, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x6f, 0x74, 0x49, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x43, 0x61, 0x6c, 0x6c, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0e, 0x4b, 0x69, 0x63, 0x6b, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x68, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x27,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x1b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x09, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x68, 0x61,
	0x74, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x68,
	0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x22, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x5e, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x52, 0x0a, 0x0e, 0x50, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x10, 0x55, 0x6e, 0x50, 0x69, 0x6e, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x6e, 0x50, 0x69, 0x6e, 0x43, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x6e, 0x50, 0x69, 0x6e, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x52, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x43, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x18, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x08, 0x4c, 0x69, 0x70, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4c, 0x69, 0x70, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x70, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0a, 0x4c, 0x69,
	0x70, 0x55, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x70, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c,
	0x69, 0x70, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x0a, 0x4b, 0x69, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x42, 0x61, 0x6e, 0x12, 0x19, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x4e, 0x6f,
	0x74, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x42, 0x61, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74,
	0x50, 0x6c, 0x61, 0x7a, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x50, 0x6c, 0x61,
	0x7a, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x50, 0x6c, 0x61,
	0x7a, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a,
	0x0d, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x1c,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4a,
	0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x69,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x61,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x7a, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x79, 0x49, 0x64, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x7a, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x50, 0x6c, 0x61,
	0x7a, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x42, 0x26, 0x5a, 0x24, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x70, 0x72,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x62, 0x6f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61,
	0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_apiservice_proto_rawDescOnce sync.Once
	file_apiservice_proto_rawDescData = file_apiservice_proto_rawDesc
)

func file_apiservice_proto_rawDescGZIP() []byte {
	file_apiservice_proto_rawDescOnce.Do(func() {
		file_apiservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_apiservice_proto_rawDescData)
	})
	return file_apiservice_proto_rawDescData
}

var file_apiservice_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_apiservice_proto_msgTypes = make([]protoimpl.MessageInfo, 97)
var file_apiservice_proto_goTypes = []interface{}{
	(GetBotListResult_Errorcode)(0),          // 0: apiservice.GetBotListResult.Errorcode
	(GetBotDetailResult_Errorcode)(0),        // 1: apiservice.GetBotDetailResult.Errorcode
	(BotLikeResult_Errorcode)(0),             // 2: apiservice.BotLikeResult.Errorcode
	(*GetBotListMineReq)(nil),                // 3: apiservice.GetBotListMineReq
	(*GetBotListReq)(nil),                    // 4: apiservice.GetBotListReq
	(*BotInfo)(nil),                          // 5: apiservice.BotInfo
	(*GetBotListResult)(nil),                 // 6: apiservice.GetBotListResult
	(*GetBotPlazaInfoByIdReq)(nil),           // 7: apiservice.GetBotPlazaInfoByIdReq
	(*GetBotPlazaInfoByIdReply)(nil),         // 8: apiservice.GetBotPlazaInfoByIdReply
	(*GetBotPlazaInfoReq)(nil),               // 9: apiservice.GetBotPlazaInfoReq
	(*BotPlazaInfo)(nil),                     // 10: apiservice.BotPlazaInfo
	(*GetBotPlazaInfoReply)(nil),             // 11: apiservice.GetBotPlazaInfoReply
	(*GetBotDetailReq)(nil),                  // 12: apiservice.GetBotDetailReq
	(*BotDetail)(nil),                        // 13: apiservice.BotDetail
	(*GetBotDetailResult)(nil),               // 14: apiservice.GetBotDetailResult
	(*BotLikeReq)(nil),                       // 15: apiservice.BotLikeReq
	(*BotLikeResult)(nil),                    // 16: apiservice.BotLikeResult
	(*MusicSaveReq)(nil),                     // 17: apiservice.MusicSaveReq
	(*MusicSaveRsp)(nil),                     // 18: apiservice.MusicSaveRsp
	(*GetMeRequest)(nil),                     // 19: apiservice.GetMeRequest
	(*GetMeReply)(nil),                       // 20: apiservice.GetMeReply
	(*GetUpdatesRequest)(nil),                // 21: apiservice.GetUpdatesRequest
	(*GetUpdatesReply)(nil),                  // 22: apiservice.GetUpdatesReply
	(*SendTextMessageRequest)(nil),           // 23: apiservice.SendTextMessageRequest
	(*SendTextMessageReply)(nil),             // 24: apiservice.SendTextMessageReply
	(*SendLocationRequest)(nil),              // 25: apiservice.SendLocationRequest
	(*SendLocationReply)(nil),                // 26: apiservice.SendLocationReply
	(*SendVenueRequest)(nil),                 // 27: apiservice.SendVenueRequest
	(*SendVenueReply)(nil),                   // 28: apiservice.SendVenueReply
	(*SendPhotoRequest)(nil),                 // 29: apiservice.SendPhotoRequest
	(*SendPhotoReply)(nil),                   // 30: apiservice.SendPhotoReply
	(*SendDocumentRequest)(nil),              // 31: apiservice.SendDocumentRequest
	(*SendDocumentReply)(nil),                // 32: apiservice.SendDocumentReply
	(*ForwardMessageRequest)(nil),            // 33: apiservice.ForwardMessageRequest
	(*ForwardMessageReply)(nil),              // 34: apiservice.ForwardMessageReply
	(*AnswerCallbackQueryRequest)(nil),       // 35: apiservice.AnswerCallbackQueryRequest
	(*AnswerCallbackQueryReply)(nil),         // 36: apiservice.AnswerCallbackQueryReply
	(*EditMessageTextRequest)(nil),           // 37: apiservice.EditMessageTextRequest
	(*EditMessageTextReply)(nil),             // 38: apiservice.EditMessageTextReply
	(*EditMessageCaptionRequest)(nil),        // 39: apiservice.EditMessageCaptionRequest
	(*EditMessageCaptionReply)(nil),          // 40: apiservice.EditMessageCaptionReply
	(*DeleteMessageRequest)(nil),             // 41: apiservice.DeleteMessageRequest
	(*DeleteMessageReply)(nil),               // 42: apiservice.DeleteMessageReply
	(*SetWebhookRequest)(nil),                // 43: apiservice.SetWebhookRequest
	(*SetWebhookReply)(nil),                  // 44: apiservice.SetWebhookReply
	(*DelWebhookRequest)(nil),                // 45: apiservice.DelWebhookRequest
	(*DelWebhookReply)(nil),                  // 46: apiservice.DelWebhookReply
	(*SendPhoneMessageRequest)(nil),          // 47: apiservice.SendPhoneMessageRequest
	(*MusicQueryRequest)(nil),                // 48: apiservice.MusicQueryRequest
	(*MusicQueryReply)(nil),                  // 49: apiservice.MusicQueryReply
	(*MusicDataInfo)(nil),                    // 50: apiservice.MusicDataInfo
	(*GetMusicFileInfoReq)(nil),              // 51: apiservice.GetMusicFileInfoReq
	(*GetMusicFileInfoReply)(nil),            // 52: apiservice.GetMusicFileInfoReply
	(*SendGameReq)(nil),                      // 53: apiservice.sendGameReq
	(*SendGameReply)(nil),                    // 54: apiservice.sendGameReply
	(*SetGameScoreReq)(nil),                  // 55: apiservice.SetGameScoreReq
	(*SetGameScoreReply)(nil),                // 56: apiservice.SetGameScoreReply
	(*AnswerInlineQueryRequest)(nil),         // 57: apiservice.answerInlineQueryRequest
	(*ReplyBotInlineCall)(nil),               // 58: apiservice.ReplyBotInlineCall
	(*GetGameHighScoresReq)(nil),             // 59: apiservice.GetGameHighScoresReq
	(*GameHighScore)(nil),                    // 60: apiservice.GameHighScore
	(*GetGameHighScoresReply)(nil),           // 61: apiservice.GetGameHighScoresReply
	(*KickChatMemberRequest)(nil),            // 62: apiservice.KickChatMemberRequest
	(*KickChatMemberReply)(nil),              // 63: apiservice.KickChatMemberReply
	(*GroupInactiveUser)(nil),                // 64: apiservice.GroupInactiveUser
	(*GetGroupInactiveUsersReq)(nil),         // 65: apiservice.GetGroupInactiveUsersReq
	(*GetGroupInactiveUsersResult)(nil),      // 66: apiservice.GetGroupInactiveUsersResult
	(*DeleteChannelHistoryMessageReq)(nil),   // 67: apiservice.DeleteChannelHistoryMessageReq
	(*DeleteChannelHistoryMessageReply)(nil), // 68: apiservice.DeleteChannelHistoryMessageReply
	(*LeaveChatReq)(nil),                     // 69: apiservice.LeaveChatReq
	(*LeaveChatReply)(nil),                   // 70: apiservice.LeaveChatReply
	(*GetChatReq)(nil),                       // 71: apiservice.GetChatReq
	(*GetChatReply)(nil),                     // 72: apiservice.GetChatReply
	(*GetChatMembersCountReq)(nil),           // 73: apiservice.GetChatMembersCountReq
	(*GetChatMembersCountReply)(nil),         // 74: apiservice.GetChatMembersCountReply
	(*GetChatAdministratorsReq)(nil),         // 75: apiservice.GetChatAdministratorsReq
	(*GetChatAdministratorsReply)(nil),       // 76: apiservice.GetChatAdministratorsReply
	(*SetChatTitleReq)(nil),                  // 77: apiservice.SetChatTitleReq
	(*SetChatTitleReply)(nil),                // 78: apiservice.SetChatTitleReply
	(*SetChatDescriptionReq)(nil),            // 79: apiservice.SetChatDescriptionReq
	(*SetChatDescriptionReply)(nil),          // 80: apiservice.SetChatDescriptionReply
	(*PinChatMessageReq)(nil),                // 81: apiservice.PinChatMessageReq
	(*PinChatMessageReply)(nil),              // 82: apiservice.PinChatMessageReply
	(*UnPinChatMessageReq)(nil),              // 83: apiservice.UnPinChatMessageReq
	(*UnPinChatMessageReply)(nil),            // 84: apiservice.UnPinChatMessageReply
	(*SendChatActionReq)(nil),                // 85: apiservice.SendChatActionReq
	(*SendChatActionReply)(nil),              // 86: apiservice.SendChatActionReply
	(*SendContactReq)(nil),                   // 87: apiservice.SendContactReq
	(*SendContactReply)(nil),                 // 88: apiservice.SendContactReply
	(*GetGroupsReq)(nil),                     // 89: apiservice.GetGroupsReq
	(*Peer)(nil),                             // 90: apiservice.Peer
	(*GetGroupsReply)(nil),                   // 91: apiservice.GetGroupsReply
	(*LipBlockReq)(nil),                      // 92: apiservice.LipBlockReq
	(*LipBlockReply)(nil),                    // 93: apiservice.LipBlockReply
	(*KickNotBanReq)(nil),                    // 94: apiservice.KickNotBanReq
	(*KickNotBanReply)(nil),                  // 95: apiservice.KickNotBanReply
	(*GetAdminGroupsReq)(nil),                // 96: apiservice.GetAdminGroupsReq
	(*GetAdminGroupsReply)(nil),              // 97: apiservice.GetAdminGroupsReply
	(*SetJoinGroupsReq)(nil),                 // 98: apiservice.SetJoinGroupsReq
	(*SetJoinGroupsReply)(nil),               // 99: apiservice.SetJoinGroupsReply
	(basetypes.ChatType)(0),                  // 100: basetypes.ChatType
	(*basetypes.User)(nil),                   // 101: basetypes.User
}
var file_apiservice_proto_depIdxs = []int32{
	0,   // 0: apiservice.GetBotListResult.errCode:type_name -> apiservice.GetBotListResult.Errorcode
	5,   // 1: apiservice.GetBotListResult.boInfoArr:type_name -> apiservice.BotInfo
	10,  // 2: apiservice.GetBotPlazaInfoByIdReply.bot_plaza_info:type_name -> apiservice.BotPlazaInfo
	10,  // 3: apiservice.GetBotPlazaInfoReply.bot_plaza_info:type_name -> apiservice.BotPlazaInfo
	1,   // 4: apiservice.GetBotDetailResult.errCode:type_name -> apiservice.GetBotDetailResult.Errorcode
	13,  // 5: apiservice.GetBotDetailResult.detail:type_name -> apiservice.BotDetail
	2,   // 6: apiservice.BotLikeResult.errCode:type_name -> apiservice.BotLikeResult.Errorcode
	50,  // 7: apiservice.MusicSaveReq.MusicInfo:type_name -> apiservice.MusicDataInfo
	100, // 8: apiservice.SendTextMessageRequest.chat_type:type_name -> basetypes.ChatType
	100, // 9: apiservice.SendLocationRequest.chat_type:type_name -> basetypes.ChatType
	100, // 10: apiservice.SendVenueRequest.chat_type:type_name -> basetypes.ChatType
	100, // 11: apiservice.SendPhotoRequest.chat_type:type_name -> basetypes.ChatType
	100, // 12: apiservice.SendDocumentRequest.chat_type:type_name -> basetypes.ChatType
	100, // 13: apiservice.ForwardMessageRequest.chat_type:type_name -> basetypes.ChatType
	100, // 14: apiservice.ForwardMessageRequest.from_chat_type:type_name -> basetypes.ChatType
	100, // 15: apiservice.EditMessageTextRequest.chat_type:type_name -> basetypes.ChatType
	100, // 16: apiservice.EditMessageCaptionRequest.chat_type:type_name -> basetypes.ChatType
	100, // 17: apiservice.DeleteMessageRequest.chat_type:type_name -> basetypes.ChatType
	50,  // 18: apiservice.MusicQueryReply.music_info:type_name -> apiservice.MusicDataInfo
	50,  // 19: apiservice.GetMusicFileInfoReply.music_info:type_name -> apiservice.MusicDataInfo
	100, // 20: apiservice.sendGameReq.chat_type:type_name -> basetypes.ChatType
	100, // 21: apiservice.SetGameScoreReq.chat_type:type_name -> basetypes.ChatType
	100, // 22: apiservice.GetGameHighScoresReq.chat_type:type_name -> basetypes.ChatType
	101, // 23: apiservice.GameHighScore.user:type_name -> basetypes.User
	60,  // 24: apiservice.GetGameHighScoresReply.game_highscore:type_name -> apiservice.GameHighScore
	100, // 25: apiservice.KickChatMemberRequest.chat_type:type_name -> basetypes.ChatType
	100, // 26: apiservice.GetGroupInactiveUsersReq.chat_type:type_name -> basetypes.ChatType
	64,  // 27: apiservice.GetGroupInactiveUsersResult.users:type_name -> apiservice.GroupInactiveUser
	100, // 28: apiservice.DeleteChannelHistoryMessageReq.chat_type:type_name -> basetypes.ChatType
	100, // 29: apiservice.LeaveChatReq.chat_type:type_name -> basetypes.ChatType
	100, // 30: apiservice.GetChatReq.chat_type:type_name -> basetypes.ChatType
	100, // 31: apiservice.GetChatMembersCountReq.chat_type:type_name -> basetypes.ChatType
	100, // 32: apiservice.GetChatAdministratorsReq.chat_type:type_name -> basetypes.ChatType
	100, // 33: apiservice.SetChatTitleReq.chat_type:type_name -> basetypes.ChatType
	100, // 34: apiservice.SetChatDescriptionReq.chat_type:type_name -> basetypes.ChatType
	100, // 35: apiservice.PinChatMessageReq.chat_type:type_name -> basetypes.ChatType
	100, // 36: apiservice.UnPinChatMessageReq.chat_type:type_name -> basetypes.ChatType
	100, // 37: apiservice.SendChatActionReq.chat_type:type_name -> basetypes.ChatType
	100, // 38: apiservice.SendContactReq.chat_type:type_name -> basetypes.ChatType
	90,  // 39: apiservice.GetGroupsReply.Groups:type_name -> apiservice.Peer
	90,  // 40: apiservice.GetGroupsReply.SuperGroups:type_name -> apiservice.Peer
	90,  // 41: apiservice.GetGroupsReply.Channels:type_name -> apiservice.Peer
	100, // 42: apiservice.KickNotBanReq.chat_type:type_name -> basetypes.ChatType
	90,  // 43: apiservice.GetAdminGroupsReply.Groups:type_name -> apiservice.Peer
	90,  // 44: apiservice.GetAdminGroupsReply.SuperGroups:type_name -> apiservice.Peer
	90,  // 45: apiservice.GetAdminGroupsReply.Channels:type_name -> apiservice.Peer
	19,  // 46: apiservice.Bot.GetMe:input_type -> apiservice.GetMeRequest
	21,  // 47: apiservice.Bot.GetUpdates:input_type -> apiservice.GetUpdatesRequest
	23,  // 48: apiservice.Bot.SendTextMessage:input_type -> apiservice.SendTextMessageRequest
	25,  // 49: apiservice.Bot.SendLocation:input_type -> apiservice.SendLocationRequest
	27,  // 50: apiservice.Bot.SendVenue:input_type -> apiservice.SendVenueRequest
	29,  // 51: apiservice.Bot.SendPhoto:input_type -> apiservice.SendPhotoRequest
	31,  // 52: apiservice.Bot.SendDocument:input_type -> apiservice.SendDocumentRequest
	33,  // 53: apiservice.Bot.ForwardMessage:input_type -> apiservice.ForwardMessageRequest
	35,  // 54: apiservice.Bot.AnswerCallbackQuery:input_type -> apiservice.AnswerCallbackQueryRequest
	37,  // 55: apiservice.Bot.EditMessageText:input_type -> apiservice.EditMessageTextRequest
	39,  // 56: apiservice.Bot.EditMessageCaption:input_type -> apiservice.EditMessageCaptionRequest
	41,  // 57: apiservice.Bot.DeleteMessage:input_type -> apiservice.DeleteMessageRequest
	43,  // 58: apiservice.Bot.SetWebhook:input_type -> apiservice.SetWebhookRequest
	45,  // 59: apiservice.Bot.DeleteWebhook:input_type -> apiservice.DelWebhookRequest
	47,  // 60: apiservice.Bot.SendPhoneMessage:input_type -> apiservice.SendPhoneMessageRequest
	48,  // 61: apiservice.Bot.QueryMusicInfo:input_type -> apiservice.MusicQueryRequest
	17,  // 62: apiservice.Bot.SaveMusicInfo:input_type -> apiservice.MusicSaveReq
	51,  // 63: apiservice.Bot.BaseQuertIdGetMusicFileInfo:input_type -> apiservice.GetMusicFileInfoReq
	4,   // 64: apiservice.Bot.GetBotList:input_type -> apiservice.GetBotListReq
	12,  // 65: apiservice.Bot.GetBotDetail:input_type -> apiservice.GetBotDetailReq
	15,  // 66: apiservice.Bot.BotLike:input_type -> apiservice.BotLikeReq
	3,   // 67: apiservice.Bot.GetBotListMine:input_type -> apiservice.GetBotListMineReq
	53,  // 68: apiservice.Bot.sendGame:input_type -> apiservice.sendGameReq
	55,  // 69: apiservice.Bot.SetGameScore:input_type -> apiservice.SetGameScoreReq
	59,  // 70: apiservice.Bot.GetGameHighScores:input_type -> apiservice.GetGameHighScoresReq
	57,  // 71: apiservice.Bot.AnswerInlineQuery:input_type -> apiservice.answerInlineQueryRequest
	62,  // 72: apiservice.Bot.KickChatMember:input_type -> apiservice.KickChatMemberRequest
	65,  // 73: apiservice.Bot.GetGroupInactiveUsers:input_type -> apiservice.GetGroupInactiveUsersReq
	67,  // 74: apiservice.Bot.DeleteChannelHistoryMessage:input_type -> apiservice.DeleteChannelHistoryMessageReq
	69,  // 75: apiservice.Bot.LeaveChat:input_type -> apiservice.LeaveChatReq
	71,  // 76: apiservice.Bot.GetChat:input_type -> apiservice.GetChatReq
	73,  // 77: apiservice.Bot.GetChatMembersCount:input_type -> apiservice.GetChatMembersCountReq
	75,  // 78: apiservice.Bot.GetChatAdministrators:input_type -> apiservice.GetChatAdministratorsReq
	77,  // 79: apiservice.Bot.SetChatTitle:input_type -> apiservice.SetChatTitleReq
	79,  // 80: apiservice.Bot.SetChatDescription:input_type -> apiservice.SetChatDescriptionReq
	81,  // 81: apiservice.Bot.PinChatMessage:input_type -> apiservice.PinChatMessageReq
	83,  // 82: apiservice.Bot.UnPinChatMessage:input_type -> apiservice.UnPinChatMessageReq
	85,  // 83: apiservice.Bot.SendChatAction:input_type -> apiservice.SendChatActionReq
	87,  // 84: apiservice.Bot.SendContact:input_type -> apiservice.SendContactReq
	89,  // 85: apiservice.Bot.GetGroups:input_type -> apiservice.GetGroupsReq
	96,  // 86: apiservice.Bot.GetAdminGroups:input_type -> apiservice.GetAdminGroupsReq
	92,  // 87: apiservice.Bot.LipBlock:input_type -> apiservice.LipBlockReq
	92,  // 88: apiservice.Bot.LipUnBlock:input_type -> apiservice.LipBlockReq
	94,  // 89: apiservice.Bot.KickNotBan:input_type -> apiservice.KickNotBanReq
	9,   // 90: apiservice.Bot.GetBotPlazaInfo:input_type -> apiservice.GetBotPlazaInfoReq
	98,  // 91: apiservice.Bot.SetJoinGroups:input_type -> apiservice.SetJoinGroupsReq
	7,   // 92: apiservice.Bot.GetBotPlazaInfoById:input_type -> apiservice.GetBotPlazaInfoByIdReq
	20,  // 93: apiservice.Bot.GetMe:output_type -> apiservice.GetMeReply
	22,  // 94: apiservice.Bot.GetUpdates:output_type -> apiservice.GetUpdatesReply
	24,  // 95: apiservice.Bot.SendTextMessage:output_type -> apiservice.SendTextMessageReply
	26,  // 96: apiservice.Bot.SendLocation:output_type -> apiservice.SendLocationReply
	28,  // 97: apiservice.Bot.SendVenue:output_type -> apiservice.SendVenueReply
	30,  // 98: apiservice.Bot.SendPhoto:output_type -> apiservice.SendPhotoReply
	32,  // 99: apiservice.Bot.SendDocument:output_type -> apiservice.SendDocumentReply
	34,  // 100: apiservice.Bot.ForwardMessage:output_type -> apiservice.ForwardMessageReply
	36,  // 101: apiservice.Bot.AnswerCallbackQuery:output_type -> apiservice.AnswerCallbackQueryReply
	38,  // 102: apiservice.Bot.EditMessageText:output_type -> apiservice.EditMessageTextReply
	40,  // 103: apiservice.Bot.EditMessageCaption:output_type -> apiservice.EditMessageCaptionReply
	42,  // 104: apiservice.Bot.DeleteMessage:output_type -> apiservice.DeleteMessageReply
	44,  // 105: apiservice.Bot.SetWebhook:output_type -> apiservice.SetWebhookReply
	46,  // 106: apiservice.Bot.DeleteWebhook:output_type -> apiservice.DelWebhookReply
	24,  // 107: apiservice.Bot.SendPhoneMessage:output_type -> apiservice.SendTextMessageReply
	49,  // 108: apiservice.Bot.QueryMusicInfo:output_type -> apiservice.MusicQueryReply
	18,  // 109: apiservice.Bot.SaveMusicInfo:output_type -> apiservice.MusicSaveRsp
	52,  // 110: apiservice.Bot.BaseQuertIdGetMusicFileInfo:output_type -> apiservice.GetMusicFileInfoReply
	6,   // 111: apiservice.Bot.GetBotList:output_type -> apiservice.GetBotListResult
	14,  // 112: apiservice.Bot.GetBotDetail:output_type -> apiservice.GetBotDetailResult
	16,  // 113: apiservice.Bot.BotLike:output_type -> apiservice.BotLikeResult
	6,   // 114: apiservice.Bot.GetBotListMine:output_type -> apiservice.GetBotListResult
	54,  // 115: apiservice.Bot.sendGame:output_type -> apiservice.sendGameReply
	56,  // 116: apiservice.Bot.SetGameScore:output_type -> apiservice.SetGameScoreReply
	61,  // 117: apiservice.Bot.GetGameHighScores:output_type -> apiservice.GetGameHighScoresReply
	58,  // 118: apiservice.Bot.AnswerInlineQuery:output_type -> apiservice.ReplyBotInlineCall
	63,  // 119: apiservice.Bot.KickChatMember:output_type -> apiservice.KickChatMemberReply
	66,  // 120: apiservice.Bot.GetGroupInactiveUsers:output_type -> apiservice.GetGroupInactiveUsersResult
	68,  // 121: apiservice.Bot.DeleteChannelHistoryMessage:output_type -> apiservice.DeleteChannelHistoryMessageReply
	70,  // 122: apiservice.Bot.LeaveChat:output_type -> apiservice.LeaveChatReply
	72,  // 123: apiservice.Bot.GetChat:output_type -> apiservice.GetChatReply
	74,  // 124: apiservice.Bot.GetChatMembersCount:output_type -> apiservice.GetChatMembersCountReply
	76,  // 125: apiservice.Bot.GetChatAdministrators:output_type -> apiservice.GetChatAdministratorsReply
	78,  // 126: apiservice.Bot.SetChatTitle:output_type -> apiservice.SetChatTitleReply
	80,  // 127: apiservice.Bot.SetChatDescription:output_type -> apiservice.SetChatDescriptionReply
	82,  // 128: apiservice.Bot.PinChatMessage:output_type -> apiservice.PinChatMessageReply
	84,  // 129: apiservice.Bot.UnPinChatMessage:output_type -> apiservice.UnPinChatMessageReply
	86,  // 130: apiservice.Bot.SendChatAction:output_type -> apiservice.SendChatActionReply
	88,  // 131: apiservice.Bot.SendContact:output_type -> apiservice.SendContactReply
	91,  // 132: apiservice.Bot.GetGroups:output_type -> apiservice.GetGroupsReply
	97,  // 133: apiservice.Bot.GetAdminGroups:output_type -> apiservice.GetAdminGroupsReply
	93,  // 134: apiservice.Bot.LipBlock:output_type -> apiservice.LipBlockReply
	93,  // 135: apiservice.Bot.LipUnBlock:output_type -> apiservice.LipBlockReply
	95,  // 136: apiservice.Bot.KickNotBan:output_type -> apiservice.KickNotBanReply
	11,  // 137: apiservice.Bot.GetBotPlazaInfo:output_type -> apiservice.GetBotPlazaInfoReply
	99,  // 138: apiservice.Bot.SetJoinGroups:output_type -> apiservice.SetJoinGroupsReply
	8,   // 139: apiservice.Bot.GetBotPlazaInfoById:output_type -> apiservice.GetBotPlazaInfoByIdReply
	93,  // [93:140] is the sub-list for method output_type
	46,  // [46:93] is the sub-list for method input_type
	46,  // [46:46] is the sub-list for extension type_name
	46,  // [46:46] is the sub-list for extension extendee
	0,   // [0:46] is the sub-list for field type_name
}

func init() { file_apiservice_proto_init() }
func file_apiservice_proto_init() {
	if File_apiservice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apiservice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBotListMineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBotListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBotListResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBotPlazaInfoByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBotPlazaInfoByIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBotPlazaInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotPlazaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBotPlazaInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBotDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBotDetailResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotLikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotLikeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicSaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicSaveRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpdatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUpdatesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTextMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTextMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendLocationReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendVenueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendVenueReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPhotoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPhotoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendDocumentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForwardMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForwardMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerCallbackQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerCallbackQueryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditMessageTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditMessageTextReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditMessageCaptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditMessageCaptionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetWebhookReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelWebhookReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPhoneMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicQueryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicDataInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMusicFileInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMusicFileInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGameReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGameScoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGameScoreReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerInlineQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyBotInlineCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameHighScoresReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameHighScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameHighScoresReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickChatMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickChatMemberReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInactiveUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupInactiveUsersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupInactiveUsersResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChannelHistoryMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChannelHistoryMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveChatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveChatReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatMembersCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatMembersCountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatAdministratorsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatAdministratorsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetChatTitleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetChatTitleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetChatDescriptionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetChatDescriptionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PinChatMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PinChatMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnPinChatMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnPinChatMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChatActionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChatActionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendContactReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendContactReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LipBlockReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LipBlockReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickNotBanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickNotBanReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminGroupsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminGroupsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetJoinGroupsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiservice_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetJoinGroupsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apiservice_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   97,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apiservice_proto_goTypes,
		DependencyIndexes: file_apiservice_proto_depIdxs,
		EnumInfos:         file_apiservice_proto_enumTypes,
		MessageInfos:      file_apiservice_proto_msgTypes,
	}.Build()
	File_apiservice_proto = out.File
	file_apiservice_proto_rawDesc = nil
	file_apiservice_proto_goTypes = nil
	file_apiservice_proto_depIdxs = nil
}
