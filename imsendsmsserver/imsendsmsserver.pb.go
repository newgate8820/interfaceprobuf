// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: imsendsmsserver.proto

package imsendsmsserver

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReErrCode int32

const (
	// 成功
	ReErrCode_Success ReErrCode = 0
	// 手机号错误
	ReErrCode_Phone_Error ReErrCode = 1
	// 邮箱错误
	ReErrCode_Email_Error ReErrCode = 2
)

// Enum value maps for ReErrCode.
var (
	ReErrCode_name = map[int32]string{
		0: "Success",
		1: "Phone_Error",
		2: "Email_Error",
	}
	ReErrCode_value = map[string]int32{
		"Success":     0,
		"Phone_Error": 1,
		"Email_Error": 2,
	}
)

func (x ReErrCode) Enum() *ReErrCode {
	p := new(ReErrCode)
	*p = x
	return p
}

func (x ReErrCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReErrCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imsendsmsserver_proto_enumTypes[0].Descriptor()
}

func (ReErrCode) Type() protoreflect.EnumType {
	return &file_imsendsmsserver_proto_enumTypes[0]
}

func (x ReErrCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReErrCode.Descriptor instead.
func (ReErrCode) EnumDescriptor() ([]byte, []int) {
	return file_imsendsmsserver_proto_rawDescGZIP(), []int{0}
}

// 发送手机验证码请求
type SendPhoneCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 客户端传过来的电话号码 未处理过的
	PhoneNumber string `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// 语言代码
	LangCode string `protobuf:"bytes,2,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	// 用户的ID
	UserId int32 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 用户的keyId(端的标识)
	KeyId int64 `protobuf:"varint,4,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// 国家码
	CountryCode string `protobuf:"bytes,5,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	// 不带国家码的电话号码
	LocalPhone string `protobuf:"bytes,6,opt,name=local_phone,json=localPhone,proto3" json:"local_phone,omitempty"`
}

func (x *SendPhoneCodeReq) Reset() {
	*x = SendPhoneCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsendsmsserver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPhoneCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPhoneCodeReq) ProtoMessage() {}

func (x *SendPhoneCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsendsmsserver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPhoneCodeReq.ProtoReflect.Descriptor instead.
func (*SendPhoneCodeReq) Descriptor() ([]byte, []int) {
	return file_imsendsmsserver_proto_rawDescGZIP(), []int{0}
}

func (x *SendPhoneCodeReq) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *SendPhoneCodeReq) GetLangCode() string {
	if x != nil {
		return x.LangCode
	}
	return ""
}

func (x *SendPhoneCodeReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SendPhoneCodeReq) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *SendPhoneCodeReq) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *SendPhoneCodeReq) GetLocalPhone() string {
	if x != nil {
		return x.LocalPhone
	}
	return ""
}

// 发送验证码响应
type SendPhoneCodeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 发送是否成功
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 验证码的哈希值
	PhoneHashCode string `protobuf:"bytes,2,opt,name=phone_hash_code,json=phoneHashCode,proto3" json:"phone_hash_code,omitempty"`
	// 短信的失效时间
	Timeout int32 `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// 错误信息
	ErrorCode ReErrCode `protobuf:"varint,4,opt,name=error_code,json=errorCode,proto3,enum=imsendsmsserver.ReErrCode" json:"error_code,omitempty"`
}

func (x *SendPhoneCodeReply) Reset() {
	*x = SendPhoneCodeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsendsmsserver_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPhoneCodeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPhoneCodeReply) ProtoMessage() {}

func (x *SendPhoneCodeReply) ProtoReflect() protoreflect.Message {
	mi := &file_imsendsmsserver_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPhoneCodeReply.ProtoReflect.Descriptor instead.
func (*SendPhoneCodeReply) Descriptor() ([]byte, []int) {
	return file_imsendsmsserver_proto_rawDescGZIP(), []int{1}
}

func (x *SendPhoneCodeReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendPhoneCodeReply) GetPhoneHashCode() string {
	if x != nil {
		return x.PhoneHashCode
	}
	return ""
}

func (x *SendPhoneCodeReply) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *SendPhoneCodeReply) GetErrorCode() ReErrCode {
	if x != nil {
		return x.ErrorCode
	}
	return ReErrCode_Success
}

// 校验验证码请求
type CheckPhoneCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 客户端传过来的电话号码 未处理过的
	PhoneNumber string `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// 用户的ID
	UserId int32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 用户的keyId(端的标识)
	KeyId int64 `protobuf:"varint,3,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// 验证码
	Code string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CheckPhoneCodeReq) Reset() {
	*x = CheckPhoneCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsendsmsserver_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPhoneCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPhoneCodeReq) ProtoMessage() {}

func (x *CheckPhoneCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsendsmsserver_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPhoneCodeReq.ProtoReflect.Descriptor instead.
func (*CheckPhoneCodeReq) Descriptor() ([]byte, []int) {
	return file_imsendsmsserver_proto_rawDescGZIP(), []int{2}
}

func (x *CheckPhoneCodeReq) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *CheckPhoneCodeReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CheckPhoneCodeReq) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *CheckPhoneCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// 校验验证码响应
type CheckPhoneCodeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 验证码校验是否成功
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *CheckPhoneCodeReply) Reset() {
	*x = CheckPhoneCodeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsendsmsserver_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPhoneCodeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPhoneCodeReply) ProtoMessage() {}

func (x *CheckPhoneCodeReply) ProtoReflect() protoreflect.Message {
	mi := &file_imsendsmsserver_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPhoneCodeReply.ProtoReflect.Descriptor instead.
func (*CheckPhoneCodeReply) Descriptor() ([]byte, []int) {
	return file_imsendsmsserver_proto_rawDescGZIP(), []int{3}
}

func (x *CheckPhoneCodeReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 发送邮件验证码请求
type SendEmailCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 邮箱地址
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// 语言代码
	LangCode string `protobuf:"bytes,2,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	// 用户的ID
	UserId int32 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 用户的keyId(端的标识)
	KeyId int64 `protobuf:"varint,4,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *SendEmailCodeReq) Reset() {
	*x = SendEmailCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsendsmsserver_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEmailCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailCodeReq) ProtoMessage() {}

func (x *SendEmailCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsendsmsserver_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailCodeReq.ProtoReflect.Descriptor instead.
func (*SendEmailCodeReq) Descriptor() ([]byte, []int) {
	return file_imsendsmsserver_proto_rawDescGZIP(), []int{4}
}

func (x *SendEmailCodeReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SendEmailCodeReq) GetLangCode() string {
	if x != nil {
		return x.LangCode
	}
	return ""
}

func (x *SendEmailCodeReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SendEmailCodeReq) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

// 发送验证码响应
type SendEmailCodeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 发送是否成功
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 验证码的哈希值
	EmailCodeHash string `protobuf:"bytes,2,opt,name=email_code_hash,json=emailCodeHash,proto3" json:"email_code_hash,omitempty"`
	// 短信的失效时间
	Timeout int32 `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// 错误信息
	ErrorCode ReErrCode `protobuf:"varint,4,opt,name=error_code,json=errorCode,proto3,enum=imsendsmsserver.ReErrCode" json:"error_code,omitempty"`
}

func (x *SendEmailCodeReply) Reset() {
	*x = SendEmailCodeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsendsmsserver_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEmailCodeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailCodeReply) ProtoMessage() {}

func (x *SendEmailCodeReply) ProtoReflect() protoreflect.Message {
	mi := &file_imsendsmsserver_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailCodeReply.ProtoReflect.Descriptor instead.
func (*SendEmailCodeReply) Descriptor() ([]byte, []int) {
	return file_imsendsmsserver_proto_rawDescGZIP(), []int{5}
}

func (x *SendEmailCodeReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendEmailCodeReply) GetEmailCodeHash() string {
	if x != nil {
		return x.EmailCodeHash
	}
	return ""
}

func (x *SendEmailCodeReply) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *SendEmailCodeReply) GetErrorCode() ReErrCode {
	if x != nil {
		return x.ErrorCode
	}
	return ReErrCode_Success
}

// 校验邮箱验证码请求
type CheckEmailCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 邮箱
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// 用户的ID
	UserId int32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 用户的keyId(端的标识)
	KeyId int64 `protobuf:"varint,3,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// 验证码
	Code string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CheckEmailCodeReq) Reset() {
	*x = CheckEmailCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsendsmsserver_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckEmailCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckEmailCodeReq) ProtoMessage() {}

func (x *CheckEmailCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsendsmsserver_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckEmailCodeReq.ProtoReflect.Descriptor instead.
func (*CheckEmailCodeReq) Descriptor() ([]byte, []int) {
	return file_imsendsmsserver_proto_rawDescGZIP(), []int{6}
}

func (x *CheckEmailCodeReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CheckEmailCodeReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CheckEmailCodeReq) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *CheckEmailCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// 校验验证码响应
type CheckEmailCodeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 验证码校验是否成功
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *CheckEmailCodeReply) Reset() {
	*x = CheckEmailCodeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsendsmsserver_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckEmailCodeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckEmailCodeReply) ProtoMessage() {}

func (x *CheckEmailCodeReply) ProtoReflect() protoreflect.Message {
	mi := &file_imsendsmsserver_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckEmailCodeReply.ProtoReflect.Descriptor instead.
func (*CheckEmailCodeReply) Descriptor() ([]byte, []int) {
	return file_imsendsmsserver_proto_rawDescGZIP(), []int{7}
}

func (x *CheckEmailCodeReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 批量发送信息请求
type BatchSendSMSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 手机号,数据库取出的手机号
	PhoneNumbers []string `protobuf:"bytes,1,rep,name=phone_numbers,json=phoneNumbers,proto3" json:"phone_numbers,omitempty"`
	// 文本内容
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *BatchSendSMSReq) Reset() {
	*x = BatchSendSMSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsendsmsserver_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSendSMSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSendSMSReq) ProtoMessage() {}

func (x *BatchSendSMSReq) ProtoReflect() protoreflect.Message {
	mi := &file_imsendsmsserver_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSendSMSReq.ProtoReflect.Descriptor instead.
func (*BatchSendSMSReq) Descriptor() ([]byte, []int) {
	return file_imsendsmsserver_proto_rawDescGZIP(), []int{8}
}

func (x *BatchSendSMSReq) GetPhoneNumbers() []string {
	if x != nil {
		return x.PhoneNumbers
	}
	return nil
}

func (x *BatchSendSMSReq) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// 发送短信详细
type SendSmsDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 手机号码
	Mobile string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	// 错误信息
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// 消息id
	Sid int64 `protobuf:"varint,3,opt,name=sid,proto3" json:"sid,omitempty"`
	// code 0 成功
	Code int32 `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	// 数量
	Count int32 `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *SendSmsDetail) Reset() {
	*x = SendSmsDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsendsmsserver_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendSmsDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSmsDetail) ProtoMessage() {}

func (x *SendSmsDetail) ProtoReflect() protoreflect.Message {
	mi := &file_imsendsmsserver_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSmsDetail.ProtoReflect.Descriptor instead.
func (*SendSmsDetail) Descriptor() ([]byte, []int) {
	return file_imsendsmsserver_proto_rawDescGZIP(), []int{9}
}

func (x *SendSmsDetail) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SendSmsDetail) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SendSmsDetail) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *SendSmsDetail) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SendSmsDetail) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 批量发送信息响应
type BatchSendSMSReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 发送成功数
	TotalCount int32 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// 批量发送详细
	Data []*SendSmsDetail `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BatchSendSMSReply) Reset() {
	*x = BatchSendSMSReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imsendsmsserver_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSendSMSReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSendSMSReply) ProtoMessage() {}

func (x *BatchSendSMSReply) ProtoReflect() protoreflect.Message {
	mi := &file_imsendsmsserver_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSendSMSReply.ProtoReflect.Descriptor instead.
func (*BatchSendSMSReply) Descriptor() ([]byte, []int) {
	return file_imsendsmsserver_proto_rawDescGZIP(), []int{10}
}

func (x *BatchSendSMSReply) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *BatchSendSMSReply) GetData() []*SendSmsDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_imsendsmsserver_proto protoreflect.FileDescriptor

var file_imsendsmsserver_proto_rawDesc = []byte{
	0x0a, 0x15, 0x69, 0x6d, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x6d, 0x73, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x69, 0x6d, 0x73, 0x65, 0x6e, 0x64, 0x73,
	0x6d, 0x73, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0xc6, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x6e,
	0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x22, 0xab, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x48, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x6e,
	0x64, 0x73, 0x6d, 0x73, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x45, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x7a, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2f, 0x0a, 0x13, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x75, 0x0a, 0x10,
	0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6b, 0x65,
	0x79, 0x49, 0x64, 0x22, 0xab, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x69, 0x6d, 0x73,
	0x65, 0x6e, 0x64, 0x73, 0x6d, 0x73, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x45,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x6d, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x2f, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x4a, 0x0a, 0x0f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x4d,
	0x53, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x75, 0x0a,
	0x0d, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x6d, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x68, 0x0a, 0x11, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x6e,
	0x64, 0x53, 0x4d, 0x53, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x6e,
	0x64, 0x73, 0x6d, 0x73, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53,
	0x6d, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x3a,
	0x0a, 0x09, 0x52, 0x65, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x02, 0x32, 0x93, 0x05, 0x0a, 0x0d, 0x53,
	0x65, 0x6e, 0x64, 0x53, 0x6d, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x59, 0x0a, 0x0d,
	0x53, 0x65, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x2e,
	0x69, 0x6d, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x6d, 0x73, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x23, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x6d, 0x73, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0f, 0x52, 0x65, 0x53, 0x65, 0x6e,
	0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x2e, 0x69, 0x6d, 0x73,
	0x65, 0x6e, 0x64, 0x73, 0x6d, 0x73, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e,
	0x69, 0x6d, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x6d, 0x73, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x6e, 0x64, 0x73,
	0x6d, 0x73, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x69, 0x6d, 0x73,
	0x65, 0x6e, 0x64, 0x73, 0x6d, 0x73, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x56, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x6e, 0x64, 0x53,
	0x4d, 0x53, 0x12, 0x20, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x6d, 0x73, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x4d,
	0x53, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x6d, 0x73,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x6e, 0x64,
	0x53, 0x4d, 0x53, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0d, 0x53, 0x65,
	0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x2e, 0x69, 0x6d,
	0x73, 0x65, 0x6e, 0x64, 0x73, 0x6d, 0x73, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x23,
	0x2e, 0x69, 0x6d, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x6d, 0x73, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0f, 0x52, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x6e,
	0x64, 0x73, 0x6d, 0x73, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x69, 0x6d,
	0x73, 0x65, 0x6e, 0x64, 0x73, 0x6d, 0x73, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x6d, 0x73,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x69, 0x6d, 0x73, 0x65, 0x6e,
	0x64, 0x73, 0x6d, 0x73, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x42, 0x21, 0x5a, 0x1f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x70, 0x72, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x69, 0x6d, 0x73, 0x65, 0x6e, 0x64, 0x73, 0x6d, 0x73, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_imsendsmsserver_proto_rawDescOnce sync.Once
	file_imsendsmsserver_proto_rawDescData = file_imsendsmsserver_proto_rawDesc
)

func file_imsendsmsserver_proto_rawDescGZIP() []byte {
	file_imsendsmsserver_proto_rawDescOnce.Do(func() {
		file_imsendsmsserver_proto_rawDescData = protoimpl.X.CompressGZIP(file_imsendsmsserver_proto_rawDescData)
	})
	return file_imsendsmsserver_proto_rawDescData
}

var file_imsendsmsserver_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_imsendsmsserver_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_imsendsmsserver_proto_goTypes = []interface{}{
	(ReErrCode)(0),              // 0: imsendsmsserver.ReErrCode
	(*SendPhoneCodeReq)(nil),    // 1: imsendsmsserver.SendPhoneCodeReq
	(*SendPhoneCodeReply)(nil),  // 2: imsendsmsserver.SendPhoneCodeReply
	(*CheckPhoneCodeReq)(nil),   // 3: imsendsmsserver.CheckPhoneCodeReq
	(*CheckPhoneCodeReply)(nil), // 4: imsendsmsserver.CheckPhoneCodeReply
	(*SendEmailCodeReq)(nil),    // 5: imsendsmsserver.SendEmailCodeReq
	(*SendEmailCodeReply)(nil),  // 6: imsendsmsserver.SendEmailCodeReply
	(*CheckEmailCodeReq)(nil),   // 7: imsendsmsserver.CheckEmailCodeReq
	(*CheckEmailCodeReply)(nil), // 8: imsendsmsserver.CheckEmailCodeReply
	(*BatchSendSMSReq)(nil),     // 9: imsendsmsserver.BatchSendSMSReq
	(*SendSmsDetail)(nil),       // 10: imsendsmsserver.SendSmsDetail
	(*BatchSendSMSReply)(nil),   // 11: imsendsmsserver.BatchSendSMSReply
}
var file_imsendsmsserver_proto_depIdxs = []int32{
	0,  // 0: imsendsmsserver.SendPhoneCodeReply.error_code:type_name -> imsendsmsserver.ReErrCode
	0,  // 1: imsendsmsserver.SendEmailCodeReply.error_code:type_name -> imsendsmsserver.ReErrCode
	10, // 2: imsendsmsserver.BatchSendSMSReply.data:type_name -> imsendsmsserver.SendSmsDetail
	1,  // 3: imsendsmsserver.SendSmsServer.SendPhoneCode:input_type -> imsendsmsserver.SendPhoneCodeReq
	1,  // 4: imsendsmsserver.SendSmsServer.ReSendPhoneCode:input_type -> imsendsmsserver.SendPhoneCodeReq
	3,  // 5: imsendsmsserver.SendSmsServer.CheckPhoneCode:input_type -> imsendsmsserver.CheckPhoneCodeReq
	9,  // 6: imsendsmsserver.SendSmsServer.BatchSendSMS:input_type -> imsendsmsserver.BatchSendSMSReq
	5,  // 7: imsendsmsserver.SendSmsServer.SendEmailCode:input_type -> imsendsmsserver.SendEmailCodeReq
	5,  // 8: imsendsmsserver.SendSmsServer.ReSendEmailCode:input_type -> imsendsmsserver.SendEmailCodeReq
	7,  // 9: imsendsmsserver.SendSmsServer.CheckEmailCode:input_type -> imsendsmsserver.CheckEmailCodeReq
	2,  // 10: imsendsmsserver.SendSmsServer.SendPhoneCode:output_type -> imsendsmsserver.SendPhoneCodeReply
	2,  // 11: imsendsmsserver.SendSmsServer.ReSendPhoneCode:output_type -> imsendsmsserver.SendPhoneCodeReply
	4,  // 12: imsendsmsserver.SendSmsServer.CheckPhoneCode:output_type -> imsendsmsserver.CheckPhoneCodeReply
	11, // 13: imsendsmsserver.SendSmsServer.BatchSendSMS:output_type -> imsendsmsserver.BatchSendSMSReply
	6,  // 14: imsendsmsserver.SendSmsServer.SendEmailCode:output_type -> imsendsmsserver.SendEmailCodeReply
	6,  // 15: imsendsmsserver.SendSmsServer.ReSendEmailCode:output_type -> imsendsmsserver.SendEmailCodeReply
	8,  // 16: imsendsmsserver.SendSmsServer.CheckEmailCode:output_type -> imsendsmsserver.CheckEmailCodeReply
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_imsendsmsserver_proto_init() }
func file_imsendsmsserver_proto_init() {
	if File_imsendsmsserver_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_imsendsmsserver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPhoneCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsendsmsserver_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPhoneCodeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsendsmsserver_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPhoneCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsendsmsserver_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPhoneCodeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsendsmsserver_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEmailCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsendsmsserver_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEmailCodeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsendsmsserver_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckEmailCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsendsmsserver_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckEmailCodeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsendsmsserver_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchSendSMSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsendsmsserver_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendSmsDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imsendsmsserver_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchSendSMSReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_imsendsmsserver_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_imsendsmsserver_proto_goTypes,
		DependencyIndexes: file_imsendsmsserver_proto_depIdxs,
		EnumInfos:         file_imsendsmsserver_proto_enumTypes,
		MessageInfos:      file_imsendsmsserver_proto_msgTypes,
	}.Build()
	File_imsendsmsserver_proto = out.File
	file_imsendsmsserver_proto_rawDesc = nil
	file_imsendsmsserver_proto_goTypes = nil
	file_imsendsmsserver_proto_depIdxs = nil
}
