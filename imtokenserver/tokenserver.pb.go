// sudo protoc --gogofast_out=plugins=grpc:. gitlab.chatserver.im/interfaceprobuf/imtokenserver/tokenserver.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: tokenserver.proto

package imtokenservice

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TokenErrorCode int32

const (
	TokenErrorCode_Token_OK                TokenErrorCode = 0    //ok
	TokenErrorCode_Token_REQ_PARAME_ERR    TokenErrorCode = 1001 //请求参数错误
	TokenErrorCode_Token_CTEATE_TOKEN_FAIL TokenErrorCode = 1002 //获取token失败
	TokenErrorCode_Token_ERR               TokenErrorCode = 1003 //token错误
	TokenErrorCode_Token_EXPIRED           TokenErrorCode = 1004 //token超时失效
	TokenErrorCode_Token_NOT_EXIST         TokenErrorCode = 1005 //token不存在
	TokenErrorCode_Token_INTERNAL_ERR      TokenErrorCode = 1006 //内部错误
)

// Enum value maps for TokenErrorCode.
var (
	TokenErrorCode_name = map[int32]string{
		0:    "Token_OK",
		1001: "Token_REQ_PARAME_ERR",
		1002: "Token_CTEATE_TOKEN_FAIL",
		1003: "Token_ERR",
		1004: "Token_EXPIRED",
		1005: "Token_NOT_EXIST",
		1006: "Token_INTERNAL_ERR",
	}
	TokenErrorCode_value = map[string]int32{
		"Token_OK":                0,
		"Token_REQ_PARAME_ERR":    1001,
		"Token_CTEATE_TOKEN_FAIL": 1002,
		"Token_ERR":               1003,
		"Token_EXPIRED":           1004,
		"Token_NOT_EXIST":         1005,
		"Token_INTERNAL_ERR":      1006,
	}
)

func (x TokenErrorCode) Enum() *TokenErrorCode {
	p := new(TokenErrorCode)
	*p = x
	return p
}

func (x TokenErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TokenErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_tokenserver_proto_enumTypes[0].Descriptor()
}

func (TokenErrorCode) Type() protoreflect.EnumType {
	return &file_tokenserver_proto_enumTypes[0]
}

func (x TokenErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TokenErrorCode.Descriptor instead.
func (TokenErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_tokenserver_proto_rawDescGZIP(), []int{0}
}

type ReqGetTokenMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId     string `protobuf:"bytes,1,opt,name=KeyId,proto3" json:"KeyId,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`        //tokenType为2传空字符串
	TokenType int32  `protobuf:"varint,3,opt,name=tokenType,proto3" json:"tokenType,omitempty"` //1 数字钱包,2彩聊钱包
}

func (x *ReqGetTokenMsg) Reset() {
	*x = ReqGetTokenMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokenserver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetTokenMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetTokenMsg) ProtoMessage() {}

func (x *ReqGetTokenMsg) ProtoReflect() protoreflect.Message {
	mi := &file_tokenserver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetTokenMsg.ProtoReflect.Descriptor instead.
func (*ReqGetTokenMsg) Descriptor() ([]byte, []int) {
	return file_tokenserver_proto_rawDescGZIP(), []int{0}
}

func (x *ReqGetTokenMsg) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *ReqGetTokenMsg) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReqGetTokenMsg) GetTokenType() int32 {
	if x != nil {
		return x.TokenType
	}
	return 0
}

type GetTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           TokenErrorCode `protobuf:"varint,1,opt,name=Code,proto3,enum=imtokenservice.TokenErrorCode" json:"Code,omitempty"`
	Error          string         `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
	Token          string         `protobuf:"bytes,3,opt,name=Token,proto3" json:"Token,omitempty"`
	ExpirationTime uint64         `protobuf:"varint,4,opt,name=ExpirationTime,proto3" json:"ExpirationTime,omitempty"` //过期时间戳（秒级）
}

func (x *GetTokenReply) Reset() {
	*x = GetTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokenserver_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenReply) ProtoMessage() {}

func (x *GetTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_tokenserver_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenReply.ProtoReflect.Descriptor instead.
func (*GetTokenReply) Descriptor() ([]byte, []int) {
	return file_tokenserver_proto_rawDescGZIP(), []int{1}
}

func (x *GetTokenReply) GetCode() TokenErrorCode {
	if x != nil {
		return x.Code
	}
	return TokenErrorCode_Token_OK
}

func (x *GetTokenReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetTokenReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetTokenReply) GetExpirationTime() uint64 {
	if x != nil {
		return x.ExpirationTime
	}
	return 0
}

type ReqRefreshTokenMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId     string `protobuf:"bytes,1,opt,name=KeyId,proto3" json:"KeyId,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"` //tokenType为2传空字符串
	OldToken  string `protobuf:"bytes,3,opt,name=OldToken,proto3" json:"OldToken,omitempty"`
	TokenType int32  `protobuf:"varint,4,opt,name=tokenType,proto3" json:"tokenType,omitempty"` //1 数字钱包,2彩聊钱包
}

func (x *ReqRefreshTokenMsg) Reset() {
	*x = ReqRefreshTokenMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokenserver_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRefreshTokenMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRefreshTokenMsg) ProtoMessage() {}

func (x *ReqRefreshTokenMsg) ProtoReflect() protoreflect.Message {
	mi := &file_tokenserver_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRefreshTokenMsg.ProtoReflect.Descriptor instead.
func (*ReqRefreshTokenMsg) Descriptor() ([]byte, []int) {
	return file_tokenserver_proto_rawDescGZIP(), []int{2}
}

func (x *ReqRefreshTokenMsg) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *ReqRefreshTokenMsg) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReqRefreshTokenMsg) GetOldToken() string {
	if x != nil {
		return x.OldToken
	}
	return ""
}

func (x *ReqRefreshTokenMsg) GetTokenType() int32 {
	if x != nil {
		return x.TokenType
	}
	return 0
}

type RefreshTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           TokenErrorCode `protobuf:"varint,1,opt,name=Code,proto3,enum=imtokenservice.TokenErrorCode" json:"Code,omitempty"`
	Error          string         `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
	NewToken       string         `protobuf:"bytes,3,opt,name=NewToken,proto3" json:"NewToken,omitempty"`
	ExpirationTime uint64         `protobuf:"varint,4,opt,name=ExpirationTime,proto3" json:"ExpirationTime,omitempty"` //过期时间戳（秒级）
}

func (x *RefreshTokenReply) Reset() {
	*x = RefreshTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokenserver_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenReply) ProtoMessage() {}

func (x *RefreshTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_tokenserver_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenReply.ProtoReflect.Descriptor instead.
func (*RefreshTokenReply) Descriptor() ([]byte, []int) {
	return file_tokenserver_proto_rawDescGZIP(), []int{3}
}

func (x *RefreshTokenReply) GetCode() TokenErrorCode {
	if x != nil {
		return x.Code
	}
	return TokenErrorCode_Token_OK
}

func (x *RefreshTokenReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *RefreshTokenReply) GetNewToken() string {
	if x != nil {
		return x.NewToken
	}
	return ""
}

func (x *RefreshTokenReply) GetExpirationTime() uint64 {
	if x != nil {
		return x.ExpirationTime
	}
	return 0
}

type ReqValidateTokenMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId          string `protobuf:"bytes,1,opt,name=KeyId,proto3" json:"KeyId,omitempty"`
	UserId         string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"` //tokenType为2传空字符串
	Token          string `protobuf:"bytes,3,opt,name=Token,proto3" json:"Token,omitempty"`
	ExpirationTime uint64 `protobuf:"varint,4,opt,name=ExpirationTime,proto3" json:"ExpirationTime,omitempty"` //过期时间戳（秒级）
	TokenType      int32  `protobuf:"varint,5,opt,name=tokenType,proto3" json:"tokenType,omitempty"`           //1 数字钱包,2彩聊钱包
}

func (x *ReqValidateTokenMsg) Reset() {
	*x = ReqValidateTokenMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokenserver_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqValidateTokenMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqValidateTokenMsg) ProtoMessage() {}

func (x *ReqValidateTokenMsg) ProtoReflect() protoreflect.Message {
	mi := &file_tokenserver_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqValidateTokenMsg.ProtoReflect.Descriptor instead.
func (*ReqValidateTokenMsg) Descriptor() ([]byte, []int) {
	return file_tokenserver_proto_rawDescGZIP(), []int{4}
}

func (x *ReqValidateTokenMsg) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *ReqValidateTokenMsg) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReqValidateTokenMsg) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ReqValidateTokenMsg) GetExpirationTime() uint64 {
	if x != nil {
		return x.ExpirationTime
	}
	return 0
}

func (x *ReqValidateTokenMsg) GetTokenType() int32 {
	if x != nil {
		return x.TokenType
	}
	return 0
}

type ValidateTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  TokenErrorCode `protobuf:"varint,1,opt,name=Code,proto3,enum=imtokenservice.TokenErrorCode" json:"Code,omitempty"`
	Error string         `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *ValidateTokenReply) Reset() {
	*x = ValidateTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokenserver_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateTokenReply) ProtoMessage() {}

func (x *ValidateTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_tokenserver_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateTokenReply.ProtoReflect.Descriptor instead.
func (*ValidateTokenReply) Descriptor() ([]byte, []int) {
	return file_tokenserver_proto_rawDescGZIP(), []int{5}
}

func (x *ValidateTokenReply) GetCode() TokenErrorCode {
	if x != nil {
		return x.Code
	}
	return TokenErrorCode_Token_OK
}

func (x *ValidateTokenReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ReqGetUInfoByTokenMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     string `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	TokenType int32  `protobuf:"varint,2,opt,name=tokenType,proto3" json:"tokenType,omitempty"` //1 数字钱包,2彩聊钱包
}

func (x *ReqGetUInfoByTokenMsg) Reset() {
	*x = ReqGetUInfoByTokenMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokenserver_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetUInfoByTokenMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetUInfoByTokenMsg) ProtoMessage() {}

func (x *ReqGetUInfoByTokenMsg) ProtoReflect() protoreflect.Message {
	mi := &file_tokenserver_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetUInfoByTokenMsg.ProtoReflect.Descriptor instead.
func (*ReqGetUInfoByTokenMsg) Descriptor() ([]byte, []int) {
	return file_tokenserver_proto_rawDescGZIP(), []int{6}
}

func (x *ReqGetUInfoByTokenMsg) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ReqGetUInfoByTokenMsg) GetTokenType() int32 {
	if x != nil {
		return x.TokenType
	}
	return 0
}

type GetUInfoByTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId  string         `protobuf:"bytes,1,opt,name=KeyId,proto3" json:"KeyId,omitempty"`
	UserId string         `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Code   TokenErrorCode `protobuf:"varint,3,opt,name=Code,proto3,enum=imtokenservice.TokenErrorCode" json:"Code,omitempty"`
	Error  string         `protobuf:"bytes,4,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *GetUInfoByTokenReply) Reset() {
	*x = GetUInfoByTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tokenserver_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUInfoByTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUInfoByTokenReply) ProtoMessage() {}

func (x *GetUInfoByTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_tokenserver_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUInfoByTokenReply.ProtoReflect.Descriptor instead.
func (*GetUInfoByTokenReply) Descriptor() ([]byte, []int) {
	return file_tokenserver_proto_rawDescGZIP(), []int{7}
}

func (x *GetUInfoByTokenReply) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *GetUInfoByTokenReply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUInfoByTokenReply) GetCode() TokenErrorCode {
	if x != nil {
		return x.Code
	}
	return TokenErrorCode_Token_OK
}

func (x *GetUInfoByTokenReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_tokenserver_proto protoreflect.FileDescriptor

var file_tokenserver_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x69, 0x6d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x22, 0x5c, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x97, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x69, 0x6d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7c, 0x0a, 0x12, 0x52,
	0x65, 0x71, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x73,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x4f, 0x6c, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4f, 0x6c, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x11, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x69, 0x6d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x65, 0x77,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x65, 0x77,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x9f, 0x01,
	0x0a, 0x13, 0x52, 0x65, 0x71, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x5e, 0x0a, 0x12, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x69, 0x6d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x4b, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x55, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8e, 0x01, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x55, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x69, 0x6d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2a, 0xaa, 0x01,
	0x0a, 0x0e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x0c, 0x0a, 0x08, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x19,
	0x0a, 0x14, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x10, 0xe9, 0x07, 0x12, 0x1c, 0x0a, 0x17, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x43, 0x54, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x10, 0xea, 0x07, 0x12, 0x0e, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x45, 0x52, 0x52, 0x10, 0xeb, 0x07, 0x12, 0x12, 0x0a, 0x0d, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0xec, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xed,
	0x07, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x10, 0xee, 0x07, 0x32, 0xf4, 0x02, 0x0a, 0x0e, 0x49,
	0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x2e, 0x69, 0x6d, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x73, 0x67, 0x1a, 0x1d, 0x2e, 0x69, 0x6d, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0c, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x2e, 0x69, 0x6d, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x73, 0x67, 0x1a, 0x21,
	0x2e, 0x69, 0x6d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0d, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x2e, 0x69, 0x6d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x73, 0x67, 0x1a, 0x22, 0x2e, 0x69, 0x6d, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x60, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x25, 0x2e, 0x69, 0x6d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x55, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x73, 0x67, 0x1a, 0x24, 0x2e, 0x69, 0x6d, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x42, 0x20, 0x5a, 0x1e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x70, 0x72,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x69, 0x6d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tokenserver_proto_rawDescOnce sync.Once
	file_tokenserver_proto_rawDescData = file_tokenserver_proto_rawDesc
)

func file_tokenserver_proto_rawDescGZIP() []byte {
	file_tokenserver_proto_rawDescOnce.Do(func() {
		file_tokenserver_proto_rawDescData = protoimpl.X.CompressGZIP(file_tokenserver_proto_rawDescData)
	})
	return file_tokenserver_proto_rawDescData
}

var file_tokenserver_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tokenserver_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_tokenserver_proto_goTypes = []interface{}{
	(TokenErrorCode)(0),           // 0: imtokenservice.TokenErrorCode
	(*ReqGetTokenMsg)(nil),        // 1: imtokenservice.ReqGetTokenMsg
	(*GetTokenReply)(nil),         // 2: imtokenservice.GetTokenReply
	(*ReqRefreshTokenMsg)(nil),    // 3: imtokenservice.ReqRefreshTokenMsg
	(*RefreshTokenReply)(nil),     // 4: imtokenservice.RefreshTokenReply
	(*ReqValidateTokenMsg)(nil),   // 5: imtokenservice.ReqValidateTokenMsg
	(*ValidateTokenReply)(nil),    // 6: imtokenservice.ValidateTokenReply
	(*ReqGetUInfoByTokenMsg)(nil), // 7: imtokenservice.ReqGetUInfoByTokenMsg
	(*GetUInfoByTokenReply)(nil),  // 8: imtokenservice.GetUInfoByTokenReply
}
var file_tokenserver_proto_depIdxs = []int32{
	0, // 0: imtokenservice.GetTokenReply.Code:type_name -> imtokenservice.TokenErrorCode
	0, // 1: imtokenservice.RefreshTokenReply.Code:type_name -> imtokenservice.TokenErrorCode
	0, // 2: imtokenservice.ValidateTokenReply.Code:type_name -> imtokenservice.TokenErrorCode
	0, // 3: imtokenservice.GetUInfoByTokenReply.Code:type_name -> imtokenservice.TokenErrorCode
	1, // 4: imtokenservice.ImTokenService.GetToken:input_type -> imtokenservice.ReqGetTokenMsg
	3, // 5: imtokenservice.ImTokenService.RefreshToken:input_type -> imtokenservice.ReqRefreshTokenMsg
	5, // 6: imtokenservice.ImTokenService.ValidateToken:input_type -> imtokenservice.ReqValidateTokenMsg
	7, // 7: imtokenservice.ImTokenService.GetUInfoByToken:input_type -> imtokenservice.ReqGetUInfoByTokenMsg
	2, // 8: imtokenservice.ImTokenService.GetToken:output_type -> imtokenservice.GetTokenReply
	4, // 9: imtokenservice.ImTokenService.RefreshToken:output_type -> imtokenservice.RefreshTokenReply
	6, // 10: imtokenservice.ImTokenService.ValidateToken:output_type -> imtokenservice.ValidateTokenReply
	8, // 11: imtokenservice.ImTokenService.GetUInfoByToken:output_type -> imtokenservice.GetUInfoByTokenReply
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_tokenserver_proto_init() }
func file_tokenserver_proto_init() {
	if File_tokenserver_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tokenserver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetTokenMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tokenserver_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tokenserver_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqRefreshTokenMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tokenserver_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tokenserver_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqValidateTokenMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tokenserver_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tokenserver_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetUInfoByTokenMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tokenserver_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUInfoByTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tokenserver_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tokenserver_proto_goTypes,
		DependencyIndexes: file_tokenserver_proto_depIdxs,
		EnumInfos:         file_tokenserver_proto_enumTypes,
		MessageInfos:      file_tokenserver_proto_msgTypes,
	}.Build()
	File_tokenserver_proto = out.File
	file_tokenserver_proto_rawDesc = nil
	file_tokenserver_proto_goTypes = nil
	file_tokenserver_proto_depIdxs = nil
}
