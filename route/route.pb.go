// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: route.proto

package route

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DelUserRequest_OpType int32

const (
	DelUserRequest_DelOne   DelUserRequest_OpType = 0
	DelUserRequest_DelOther DelUserRequest_OpType = 1
)

// Enum value maps for DelUserRequest_OpType.
var (
	DelUserRequest_OpType_name = map[int32]string{
		0: "DelOne",
		1: "DelOther",
	}
	DelUserRequest_OpType_value = map[string]int32{
		"DelOne":   0,
		"DelOther": 1,
	}
)

func (x DelUserRequest_OpType) Enum() *DelUserRequest_OpType {
	p := new(DelUserRequest_OpType)
	*p = x
	return p
}

func (x DelUserRequest_OpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DelUserRequest_OpType) Descriptor() protoreflect.EnumDescriptor {
	return file_route_proto_enumTypes[0].Descriptor()
}

func (DelUserRequest_OpType) Type() protoreflect.EnumType {
	return &file_route_proto_enumTypes[0]
}

func (x DelUserRequest_OpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DelUserRequest_OpType.Descriptor instead.
func (DelUserRequest_OpType) EnumDescriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{0, 0}
}

type FindUserRequest_OpType int32

const (
	FindUserRequest_FindAll   FindUserRequest_OpType = 0
	FindUserRequest_FindOne   FindUserRequest_OpType = 1
	FindUserRequest_FindOther FindUserRequest_OpType = 2
)

// Enum value maps for FindUserRequest_OpType.
var (
	FindUserRequest_OpType_name = map[int32]string{
		0: "FindAll",
		1: "FindOne",
		2: "FindOther",
	}
	FindUserRequest_OpType_value = map[string]int32{
		"FindAll":   0,
		"FindOne":   1,
		"FindOther": 2,
	}
)

func (x FindUserRequest_OpType) Enum() *FindUserRequest_OpType {
	p := new(FindUserRequest_OpType)
	*p = x
	return p
}

func (x FindUserRequest_OpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FindUserRequest_OpType) Descriptor() protoreflect.EnumDescriptor {
	return file_route_proto_enumTypes[1].Descriptor()
}

func (FindUserRequest_OpType) Type() protoreflect.EnumType {
	return &file_route_proto_enumTypes[1]
}

func (x FindUserRequest_OpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FindUserRequest_OpType.Descriptor instead.
func (FindUserRequest_OpType) EnumDescriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{2, 0}
}

type FindUserExRequest_OpType int32

const (
	FindUserExRequest_FindAll   FindUserExRequest_OpType = 0
	FindUserExRequest_FindOne   FindUserExRequest_OpType = 1
	FindUserExRequest_FindOther FindUserExRequest_OpType = 2
)

// Enum value maps for FindUserExRequest_OpType.
var (
	FindUserExRequest_OpType_name = map[int32]string{
		0: "FindAll",
		1: "FindOne",
		2: "FindOther",
	}
	FindUserExRequest_OpType_value = map[string]int32{
		"FindAll":   0,
		"FindOne":   1,
		"FindOther": 2,
	}
)

func (x FindUserExRequest_OpType) Enum() *FindUserExRequest_OpType {
	p := new(FindUserExRequest_OpType)
	*p = x
	return p
}

func (x FindUserExRequest_OpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FindUserExRequest_OpType) Descriptor() protoreflect.EnumDescriptor {
	return file_route_proto_enumTypes[2].Descriptor()
}

func (FindUserExRequest_OpType) Type() protoreflect.EnumType {
	return &file_route_proto_enumTypes[2]
}

func (x FindUserExRequest_OpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FindUserExRequest_OpType.Descriptor instead.
func (FindUserExRequest_OpType) EnumDescriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{6, 0}
}

type Route_Kind int32

const (
	Route_RegisterUser   Route_Kind = 0
	Route_UnregisterUser Route_Kind = 1
	Route_Data           Route_Kind = 2
	Route_RegisterClient Route_Kind = 3
)

// Enum value maps for Route_Kind.
var (
	Route_Kind_name = map[int32]string{
		0: "RegisterUser",
		1: "UnregisterUser",
		2: "Data",
		3: "RegisterClient",
	}
	Route_Kind_value = map[string]int32{
		"RegisterUser":   0,
		"UnregisterUser": 1,
		"Data":           2,
		"RegisterClient": 3,
	}
)

func (x Route_Kind) Enum() *Route_Kind {
	p := new(Route_Kind)
	*p = x
	return p
}

func (x Route_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Route_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_route_proto_enumTypes[3].Descriptor()
}

func (Route_Kind) Type() protoreflect.EnumType {
	return &file_route_proto_enumTypes[3]
}

func (x Route_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Route_Kind.Descriptor instead.
func (Route_Kind) EnumDescriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{17, 0}
}

type Message_Kind int32

const (
	Message_SendUser      Message_Kind = 0
	Message_SendUserOne   Message_Kind = 1
	Message_SendUserOther Message_Kind = 3
)

// Enum value maps for Message_Kind.
var (
	Message_Kind_name = map[int32]string{
		0: "SendUser",
		1: "SendUserOne",
		3: "SendUserOther",
	}
	Message_Kind_value = map[string]int32{
		"SendUser":      0,
		"SendUserOne":   1,
		"SendUserOther": 3,
	}
)

func (x Message_Kind) Enum() *Message_Kind {
	p := new(Message_Kind)
	*p = x
	return p
}

func (x Message_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_route_proto_enumTypes[4].Descriptor()
}

func (Message_Kind) Type() protoreflect.EnumType {
	return &file_route_proto_enumTypes[4]
}

func (x Message_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Message_Kind.Descriptor instead.
func (Message_Kind) EnumDescriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{22, 0}
}

type DelUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *PeerUser             `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	How  DelUserRequest_OpType `protobuf:"varint,2,opt,name=how,proto3,enum=route.DelUserRequest_OpType" json:"how,omitempty"`
}

func (x *DelUserRequest) Reset() {
	*x = DelUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUserRequest) ProtoMessage() {}

func (x *DelUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUserRequest.ProtoReflect.Descriptor instead.
func (*DelUserRequest) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{0}
}

func (x *DelUserRequest) GetPeer() *PeerUser {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *DelUserRequest) GetHow() DelUserRequest_OpType {
	if x != nil {
		return x.How
	}
	return DelUserRequest_DelOne
}

type DelUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelUserReply) Reset() {
	*x = DelUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUserReply) ProtoMessage() {}

func (x *DelUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUserReply.ProtoReflect.Descriptor instead.
func (*DelUserReply) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{1}
}

type FindUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *PeerUser              `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	How  FindUserRequest_OpType `protobuf:"varint,2,opt,name=how,proto3,enum=route.FindUserRequest_OpType" json:"how,omitempty"`
}

func (x *FindUserRequest) Reset() {
	*x = FindUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserRequest) ProtoMessage() {}

func (x *FindUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserRequest.ProtoReflect.Descriptor instead.
func (*FindUserRequest) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{2}
}

func (x *FindUserRequest) GetPeer() *PeerUser {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *FindUserRequest) GetHow() FindUserRequest_OpType {
	if x != nil {
		return x.How
	}
	return FindUserRequest_FindAll
}

type FindUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicIdentifiers []uint32 `protobuf:"varint,1,rep,packed,name=topic_identifiers,json=topicIdentifiers,proto3" json:"topic_identifiers,omitempty"`
}

func (x *FindUserReply) Reset() {
	*x = FindUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserReply) ProtoMessage() {}

func (x *FindUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserReply.ProtoReflect.Descriptor instead.
func (*FindUserReply) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{3}
}

func (x *FindUserReply) GetTopicIdentifiers() []uint32 {
	if x != nil {
		return x.TopicIdentifiers
	}
	return nil
}

type UpdateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer       *PeerUser `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	Online     bool      `protobuf:"varint,2,opt,name=online,proto3" json:"online,omitempty"`
	Updated    int64     `protobuf:"varint,3,opt,name=updated,proto3" json:"updated,omitempty"`
	TopicId    uint32    `protobuf:"varint,4,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	DelayDeath bool      `protobuf:"varint,5,opt,name=delay_death,json=delayDeath,proto3" json:"delay_death,omitempty"`
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateUserRequest) GetPeer() *PeerUser {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *UpdateUserRequest) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *UpdateUserRequest) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *UpdateUserRequest) GetTopicId() uint32 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *UpdateUserRequest) GetDelayDeath() bool {
	if x != nil {
		return x.DelayDeath
	}
	return false
}

type UpdateUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserReply) Reset() {
	*x = UpdateUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserReply) ProtoMessage() {}

func (x *UpdateUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserReply.ProtoReflect.Descriptor instead.
func (*UpdateUserReply) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{5}
}

type FindUserExRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *PeerUser                `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	How  FindUserExRequest_OpType `protobuf:"varint,2,opt,name=how,proto3,enum=route.FindUserExRequest_OpType" json:"how,omitempty"`
}

func (x *FindUserExRequest) Reset() {
	*x = FindUserExRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserExRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserExRequest) ProtoMessage() {}

func (x *FindUserExRequest) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserExRequest.ProtoReflect.Descriptor instead.
func (*FindUserExRequest) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{6}
}

func (x *FindUserExRequest) GetPeer() *PeerUser {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *FindUserExRequest) GetHow() FindUserExRequest_OpType {
	if x != nil {
		return x.How
	}
	return FindUserExRequest_FindAll
}

type FindUserExReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*KeyInfo `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *FindUserExReply) Reset() {
	*x = FindUserExReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserExReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserExReply) ProtoMessage() {}

func (x *FindUserExReply) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserExReply.ProtoReflect.Descriptor instead.
func (*FindUserExReply) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{7}
}

func (x *FindUserExReply) GetKeys() []*KeyInfo {
	if x != nil {
		return x.Keys
	}
	return nil
}

type KeyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthKeyId       uint64 `protobuf:"varint,1,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	TopicIdentifier uint32 `protobuf:"varint,2,opt,name=topic_identifier,json=topicIdentifier,proto3" json:"topic_identifier,omitempty"`
	Layer           uint32 `protobuf:"varint,3,opt,name=layer,proto3" json:"layer,omitempty"`
	Version         string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	ApiId           int32  `protobuf:"varint,5,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
}

func (x *KeyInfo) Reset() {
	*x = KeyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyInfo) ProtoMessage() {}

func (x *KeyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyInfo.ProtoReflect.Descriptor instead.
func (*KeyInfo) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{8}
}

func (x *KeyInfo) GetAuthKeyId() uint64 {
	if x != nil {
		return x.AuthKeyId
	}
	return 0
}

func (x *KeyInfo) GetTopicIdentifier() uint32 {
	if x != nil {
		return x.TopicIdentifier
	}
	return 0
}

func (x *KeyInfo) GetLayer() uint32 {
	if x != nil {
		return x.Layer
	}
	return 0
}

func (x *KeyInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *KeyInfo) GetApiId() int32 {
	if x != nil {
		return x.ApiId
	}
	return 0
}

type UpdateUserExRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer       *PeerUser `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	Online     bool      `protobuf:"varint,2,opt,name=online,proto3" json:"online,omitempty"`
	Updated    int64     `protobuf:"varint,3,opt,name=updated,proto3" json:"updated,omitempty"`
	TopicId    uint32    `protobuf:"varint,4,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	DelayDeath bool      `protobuf:"varint,5,opt,name=delay_death,json=delayDeath,proto3" json:"delay_death,omitempty"`
	Layer      uint32    `protobuf:"varint,6,opt,name=layer,proto3" json:"layer,omitempty"`
	Version    string    `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	ApiId      int32     `protobuf:"varint,8,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
}

func (x *UpdateUserExRequest) Reset() {
	*x = UpdateUserExRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserExRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserExRequest) ProtoMessage() {}

func (x *UpdateUserExRequest) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserExRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserExRequest) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateUserExRequest) GetPeer() *PeerUser {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *UpdateUserExRequest) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *UpdateUserExRequest) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *UpdateUserExRequest) GetTopicId() uint32 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *UpdateUserExRequest) GetDelayDeath() bool {
	if x != nil {
		return x.DelayDeath
	}
	return false
}

func (x *UpdateUserExRequest) GetLayer() uint32 {
	if x != nil {
		return x.Layer
	}
	return 0
}

func (x *UpdateUserExRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UpdateUserExRequest) GetApiId() int32 {
	if x != nil {
		return x.ApiId
	}
	return 0
}

type UpdateUserExReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserExReply) Reset() {
	*x = UpdateUserExReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserExReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserExReply) ProtoMessage() {}

func (x *UpdateUserExReply) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserExReply.ProtoReflect.Descriptor instead.
func (*UpdateUserExReply) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{10}
}

type UpdateUserExV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer       *PeerUser `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	Online     bool      `protobuf:"varint,2,opt,name=online,proto3" json:"online,omitempty"`
	Delay      int64     `protobuf:"varint,3,opt,name=delay,proto3" json:"delay,omitempty"`
	TopicId    uint32    `protobuf:"varint,4,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	DelayDeath bool      `protobuf:"varint,5,opt,name=delay_death,json=delayDeath,proto3" json:"delay_death,omitempty"`
	Layer      uint32    `protobuf:"varint,6,opt,name=layer,proto3" json:"layer,omitempty"`
	Version    string    `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	ApiId      int32     `protobuf:"varint,8,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
}

func (x *UpdateUserExV2Request) Reset() {
	*x = UpdateUserExV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserExV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserExV2Request) ProtoMessage() {}

func (x *UpdateUserExV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserExV2Request.ProtoReflect.Descriptor instead.
func (*UpdateUserExV2Request) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateUserExV2Request) GetPeer() *PeerUser {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *UpdateUserExV2Request) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *UpdateUserExV2Request) GetDelay() int64 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *UpdateUserExV2Request) GetTopicId() uint32 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *UpdateUserExV2Request) GetDelayDeath() bool {
	if x != nil {
		return x.DelayDeath
	}
	return false
}

func (x *UpdateUserExV2Request) GetLayer() uint32 {
	if x != nil {
		return x.Layer
	}
	return 0
}

func (x *UpdateUserExV2Request) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UpdateUserExV2Request) GetApiId() int32 {
	if x != nil {
		return x.ApiId
	}
	return 0
}

type UpdateUserExV2Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserExV2Reply) Reset() {
	*x = UpdateUserExV2Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserExV2Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserExV2Reply) ProtoMessage() {}

func (x *UpdateUserExV2Reply) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserExV2Reply.ProtoReflect.Descriptor instead.
func (*UpdateUserExV2Reply) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{12}
}

type FindUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peers []*PeerUser `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
}

func (x *FindUsersRequest) Reset() {
	*x = FindUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUsersRequest) ProtoMessage() {}

func (x *FindUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUsersRequest.ProtoReflect.Descriptor instead.
func (*FindUsersRequest) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{13}
}

func (x *FindUsersRequest) GetPeers() []*PeerUser {
	if x != nil {
		return x.Peers
	}
	return nil
}

type FindUsersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserKeys map[int32]*FindUserExReply `protobuf:"bytes,1,rep,name=user_keys,json=userKeys,proto3" json:"user_keys,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FindUsersReply) Reset() {
	*x = FindUsersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUsersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUsersReply) ProtoMessage() {}

func (x *FindUsersReply) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUsersReply.ProtoReflect.Descriptor instead.
func (*FindUsersReply) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{14}
}

func (x *FindUsersReply) GetUserKeys() map[int32]*FindUserExReply {
	if x != nil {
		return x.UserKeys
	}
	return nil
}

type UpdateUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*UpdateUserExV2Request `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *UpdateUsersRequest) Reset() {
	*x = UpdateUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUsersRequest) ProtoMessage() {}

func (x *UpdateUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUsersRequest.ProtoReflect.Descriptor instead.
func (*UpdateUsersRequest) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateUsersRequest) GetRequests() []*UpdateUserExV2Request {
	if x != nil {
		return x.Requests
	}
	return nil
}

type UpdateUsersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replies map[int32]*UpdateUserExV2Reply `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateUsersReply) Reset() {
	*x = UpdateUsersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUsersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUsersReply) ProtoMessage() {}

func (x *UpdateUsersReply) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUsersReply.ProtoReflect.Descriptor instead.
func (*UpdateUsersReply) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateUsersReply) GetReplies() map[int32]*UpdateUserExV2Reply {
	if x != nil {
		return x.Replies
	}
	return nil
}

// //////////////////////////////////////TCP////////////////////////////////
type Route struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Route) Reset() {
	*x = Route{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{17}
}

// router client
type RegisterClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostName string `protobuf:"bytes,1,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
}

func (x *RegisterClient) Reset() {
	*x = RegisterClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterClient) ProtoMessage() {}

func (x *RegisterClient) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterClient.ProtoReflect.Descriptor instead.
func (*RegisterClient) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{18}
}

func (x *RegisterClient) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

type PeerUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	KeyId  uint64 `protobuf:"varint,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *PeerUser) Reset() {
	*x = PeerUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerUser) ProtoMessage() {}

func (x *PeerUser) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerUser.ProtoReflect.Descriptor instead.
func (*PeerUser) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{19}
}

func (x *PeerUser) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PeerUser) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

type RegisterUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User      *PeerUser `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	SessionId uint64    `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *RegisterUser) Reset() {
	*x = RegisterUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUser) ProtoMessage() {}

func (x *RegisterUser) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUser.ProtoReflect.Descriptor instead.
func (*RegisterUser) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{20}
}

func (x *RegisterUser) GetUser() *PeerUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *RegisterUser) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

type UnregisterUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User      *PeerUser `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	SessionId uint64    `protobuf:"varint,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *UnregisterUser) Reset() {
	*x = UnregisterUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterUser) ProtoMessage() {}

func (x *UnregisterUser) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterUser.ProtoReflect.Descriptor instead.
func (*UnregisterUser) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{21}
}

func (x *UnregisterUser) GetUser() *PeerUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UnregisterUser) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User    *PeerUser    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Content []byte       `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Kind    Message_Kind `protobuf:"varint,3,opt,name=kind,proto3,enum=route.Message_Kind" json:"kind,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{22}
}

func (x *Message) GetUser() *PeerUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Message) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Message) GetKind() Message_Kind {
	if x != nil {
		return x.Kind
	}
	return Message_SendUser
}

type MessageContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShootTime int64  `protobuf:"varint,1,opt,name=shoot_time,json=shootTime,proto3" json:"shoot_time,omitempty"`
	Content   []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *MessageContent) Reset() {
	*x = MessageContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_route_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageContent) ProtoMessage() {}

func (x *MessageContent) ProtoReflect() protoreflect.Message {
	mi := &file_route_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageContent.ProtoReflect.Descriptor instead.
func (*MessageContent) Descriptor() ([]byte, []int) {
	return file_route_proto_rawDescGZIP(), []int{23}
}

func (x *MessageContent) GetShootTime() int64 {
	if x != nil {
		return x.ShootTime
	}
	return 0
}

func (x *MessageContent) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

var File_route_proto protoreflect.FileDescriptor

var file_route_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x50, 0x65,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x03,
	0x68, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03, 0x68, 0x6f, 0x77, 0x22, 0x22, 0x0a, 0x06,
	0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x4f, 0x6e, 0x65,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x10, 0x01,
	0x22, 0x0e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x9a, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x03, 0x68, 0x6f, 0x77,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03, 0x68, 0x6f, 0x77, 0x22, 0x31, 0x0a, 0x06, 0x4f, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x10, 0x02, 0x22, 0x3c, 0x0a,
	0x0d, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b,
	0x0a, 0x11, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x10, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x65, 0x61,
	0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x44,
	0x65, 0x61, 0x74, 0x68, 0x22, 0x11, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x9e, 0x01, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65,
	0x65, 0x72, 0x12, 0x31, 0x0a, 0x03, 0x68, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x45, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x03, 0x68, 0x6f, 0x77, 0x22, 0x31, 0x0a, 0x06, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x69, 0x6e,
	0x64, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x10, 0x02, 0x22, 0x35, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x0a, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x2e, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22,
	0x9b, 0x01, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0b, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x22, 0xef, 0x01,
	0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x61, 0x79,
	0x5f, 0x64, 0x65, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x65,
	0x6c, 0x61, 0x79, 0x44, 0x65, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x22,
	0x13, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0xed, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x45, 0x78, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x70,
	0x65, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64,
	0x65, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61,
	0x79, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x65, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x44, 0x65, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61,
	0x70, 0x69, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x45, 0x78, 0x56, 0x32, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x39, 0x0a, 0x10, 0x46,
	0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x40, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x1a, 0x53, 0x0a, 0x0d, 0x55,
	0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x4e, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x56, 0x32, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x22, 0xaa, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x65, 0x73, 0x1a, 0x56, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x56, 0x32, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x53, 0x0a,
	0x05, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x4a, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x10,
	0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x10, 0x03, 0x22, 0x2d, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x3a, 0x0a, 0x08, 0x50, 0x65, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0x52, 0x0a,
	0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x23, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x54, 0x0a, 0x0e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xab, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x38, 0x0a, 0x04, 0x4b,
	0x69, 0x6e, 0x64, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x10,
	0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x65,
	0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x74,
	0x68, 0x65, 0x72, 0x10, 0x03, 0x22, 0x49, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x6f, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x68, 0x6f,
	0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x32, 0xf9, 0x02, 0x0a, 0x0a, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x31, 0x0a, 0x03, 0x44, 0x65, 0x6c, 0x12, 0x15, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x34, 0x0a, 0x04, 0x46, 0x69, 0x6e, 0x64, 0x12, 0x16, 0x2e, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3a, 0x0a, 0x06, 0x46, 0x69, 0x6e, 0x64,
	0x45, 0x78, 0x12, 0x18, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x45, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x09, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x12, 0x17, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x46, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x56, 0x32, 0x12,
	0x1c, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x45, 0x78, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x45, 0x78, 0x56, 0x32, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x0b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x19, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x17, 0x5a, 0x15,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_route_proto_rawDescOnce sync.Once
	file_route_proto_rawDescData = file_route_proto_rawDesc
)

func file_route_proto_rawDescGZIP() []byte {
	file_route_proto_rawDescOnce.Do(func() {
		file_route_proto_rawDescData = protoimpl.X.CompressGZIP(file_route_proto_rawDescData)
	})
	return file_route_proto_rawDescData
}

var file_route_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_route_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_route_proto_goTypes = []interface{}{
	(DelUserRequest_OpType)(0),    // 0: route.DelUserRequest.OpType
	(FindUserRequest_OpType)(0),   // 1: route.FindUserRequest.OpType
	(FindUserExRequest_OpType)(0), // 2: route.FindUserExRequest.OpType
	(Route_Kind)(0),               // 3: route.Route.Kind
	(Message_Kind)(0),             // 4: route.Message.Kind
	(*DelUserRequest)(nil),        // 5: route.DelUserRequest
	(*DelUserReply)(nil),          // 6: route.DelUserReply
	(*FindUserRequest)(nil),       // 7: route.FindUserRequest
	(*FindUserReply)(nil),         // 8: route.FindUserReply
	(*UpdateUserRequest)(nil),     // 9: route.UpdateUserRequest
	(*UpdateUserReply)(nil),       // 10: route.UpdateUserReply
	(*FindUserExRequest)(nil),     // 11: route.FindUserExRequest
	(*FindUserExReply)(nil),       // 12: route.FindUserExReply
	(*KeyInfo)(nil),               // 13: route.KeyInfo
	(*UpdateUserExRequest)(nil),   // 14: route.UpdateUserExRequest
	(*UpdateUserExReply)(nil),     // 15: route.UpdateUserExReply
	(*UpdateUserExV2Request)(nil), // 16: route.UpdateUserExV2Request
	(*UpdateUserExV2Reply)(nil),   // 17: route.UpdateUserExV2Reply
	(*FindUsersRequest)(nil),      // 18: route.FindUsersRequest
	(*FindUsersReply)(nil),        // 19: route.FindUsersReply
	(*UpdateUsersRequest)(nil),    // 20: route.UpdateUsersRequest
	(*UpdateUsersReply)(nil),      // 21: route.UpdateUsersReply
	(*Route)(nil),                 // 22: route.Route
	(*RegisterClient)(nil),        // 23: route.RegisterClient
	(*PeerUser)(nil),              // 24: route.PeerUser
	(*RegisterUser)(nil),          // 25: route.RegisterUser
	(*UnregisterUser)(nil),        // 26: route.UnregisterUser
	(*Message)(nil),               // 27: route.Message
	(*MessageContent)(nil),        // 28: route.MessageContent
	nil,                           // 29: route.FindUsersReply.UserKeysEntry
	nil,                           // 30: route.UpdateUsersReply.RepliesEntry
}
var file_route_proto_depIdxs = []int32{
	24, // 0: route.DelUserRequest.peer:type_name -> route.PeerUser
	0,  // 1: route.DelUserRequest.how:type_name -> route.DelUserRequest.OpType
	24, // 2: route.FindUserRequest.peer:type_name -> route.PeerUser
	1,  // 3: route.FindUserRequest.how:type_name -> route.FindUserRequest.OpType
	24, // 4: route.UpdateUserRequest.peer:type_name -> route.PeerUser
	24, // 5: route.FindUserExRequest.peer:type_name -> route.PeerUser
	2,  // 6: route.FindUserExRequest.how:type_name -> route.FindUserExRequest.OpType
	13, // 7: route.FindUserExReply.keys:type_name -> route.KeyInfo
	24, // 8: route.UpdateUserExRequest.peer:type_name -> route.PeerUser
	24, // 9: route.UpdateUserExV2Request.peer:type_name -> route.PeerUser
	24, // 10: route.FindUsersRequest.peers:type_name -> route.PeerUser
	29, // 11: route.FindUsersReply.user_keys:type_name -> route.FindUsersReply.UserKeysEntry
	16, // 12: route.UpdateUsersRequest.requests:type_name -> route.UpdateUserExV2Request
	30, // 13: route.UpdateUsersReply.replies:type_name -> route.UpdateUsersReply.RepliesEntry
	24, // 14: route.RegisterUser.user:type_name -> route.PeerUser
	24, // 15: route.UnregisterUser.user:type_name -> route.PeerUser
	24, // 16: route.Message.user:type_name -> route.PeerUser
	4,  // 17: route.Message.kind:type_name -> route.Message.Kind
	12, // 18: route.FindUsersReply.UserKeysEntry.value:type_name -> route.FindUserExReply
	17, // 19: route.UpdateUsersReply.RepliesEntry.value:type_name -> route.UpdateUserExV2Reply
	5,  // 20: route.RouteTable.Del:input_type -> route.DelUserRequest
	7,  // 21: route.RouteTable.Find:input_type -> route.FindUserRequest
	11, // 22: route.RouteTable.FindEx:input_type -> route.FindUserExRequest
	18, // 23: route.RouteTable.FindUsers:input_type -> route.FindUsersRequest
	16, // 24: route.RouteTable.UpdateExV2:input_type -> route.UpdateUserExV2Request
	20, // 25: route.RouteTable.UpdateUsers:input_type -> route.UpdateUsersRequest
	6,  // 26: route.RouteTable.Del:output_type -> route.DelUserReply
	8,  // 27: route.RouteTable.Find:output_type -> route.FindUserReply
	12, // 28: route.RouteTable.FindEx:output_type -> route.FindUserExReply
	19, // 29: route.RouteTable.FindUsers:output_type -> route.FindUsersReply
	17, // 30: route.RouteTable.UpdateExV2:output_type -> route.UpdateUserExV2Reply
	21, // 31: route.RouteTable.UpdateUsers:output_type -> route.UpdateUsersReply
	26, // [26:32] is the sub-list for method output_type
	20, // [20:26] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_route_proto_init() }
func file_route_proto_init() {
	if File_route_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_route_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserExRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserExReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserExRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserExReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserExV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserExV2Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUsersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUsersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_route_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_route_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_route_proto_goTypes,
		DependencyIndexes: file_route_proto_depIdxs,
		EnumInfos:         file_route_proto_enumTypes,
		MessageInfos:      file_route_proto_msgTypes,
	}.Build()
	File_route_proto = out.File
	file_route_proto_rawDesc = nil
	file_route_proto_goTypes = nil
	file_route_proto_depIdxs = nil
}
