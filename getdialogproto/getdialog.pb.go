// Code generated by protoc-gen-gogo.
// source: getdialog.proto
// DO NOT EDIT!

/*
Package getdialogproto is a generated protocol buffer package.

It is generated from these files:

	getdialog.proto

It has these top-level messages:

	GetPinnedDialogsReq
	GetPinnedDialogsResp
	GetRouterMessageReq
	GetRouterMessageResp
	GetDialogsReq
	GetDialogsResp
	GetPeerDialogsReq
	GetPeerDialogsResp
	InputDialogPeer
	InputPeer
*/
package getdialogproto

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type GetPinnedDialogsReq struct {
	ReqMsgID   int64  `protobuf:"varint,1,opt,name=ReqMsgID,proto3" json:"ReqMsgID,omitempty"`
	AppVersion string `protobuf:"bytes,2,opt,name=AppVersion,proto3" json:"AppVersion,omitempty"`
	MtLayer    int32  `protobuf:"varint,3,opt,name=MtLayer,proto3" json:"MtLayer,omitempty"`
	KeyID      uint64 `protobuf:"varint,4,opt,name=KeyID,proto3" json:"KeyID,omitempty"`
	UserID     int32  `protobuf:"varint,10,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (m *GetPinnedDialogsReq) Reset()                    { *m = GetPinnedDialogsReq{} }
func (m *GetPinnedDialogsReq) String() string            { return proto.CompactTextString(m) }
func (*GetPinnedDialogsReq) ProtoMessage()               {}
func (*GetPinnedDialogsReq) Descriptor() ([]byte, []int) { return fileDescriptorGetdialog, []int{0} }

func (m *GetPinnedDialogsReq) GetReqMsgID() int64 {
	if m != nil {
		return m.ReqMsgID
	}
	return 0
}

func (m *GetPinnedDialogsReq) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *GetPinnedDialogsReq) GetMtLayer() int32 {
	if m != nil {
		return m.MtLayer
	}
	return 0
}

func (m *GetPinnedDialogsReq) GetKeyID() uint64 {
	if m != nil {
		return m.KeyID
	}
	return 0
}

func (m *GetPinnedDialogsReq) GetUserID() int32 {
	if m != nil {
		return m.UserID
	}
	return 0
}

type GetPinnedDialogsResp struct {
	MessagesPeerDialogsBytes []byte `protobuf:"bytes,1,opt,name=MessagesPeerDialogsBytes,proto3" json:"MessagesPeerDialogsBytes,omitempty"`
}

func (m *GetPinnedDialogsResp) Reset()                    { *m = GetPinnedDialogsResp{} }
func (m *GetPinnedDialogsResp) String() string            { return proto.CompactTextString(m) }
func (*GetPinnedDialogsResp) ProtoMessage()               {}
func (*GetPinnedDialogsResp) Descriptor() ([]byte, []int) { return fileDescriptorGetdialog, []int{1} }

func (m *GetPinnedDialogsResp) GetMessagesPeerDialogsBytes() []byte {
	if m != nil {
		return m.MessagesPeerDialogsBytes
	}
	return nil
}

type GetRouterMessageReq struct {
}

func (m *GetRouterMessageReq) Reset()                    { *m = GetRouterMessageReq{} }
func (m *GetRouterMessageReq) String() string            { return proto.CompactTextString(m) }
func (*GetRouterMessageReq) ProtoMessage()               {}
func (*GetRouterMessageReq) Descriptor() ([]byte, []int) { return fileDescriptorGetdialog, []int{2} }

type GetRouterMessageResp struct {
}

func (m *GetRouterMessageResp) Reset()                    { *m = GetRouterMessageResp{} }
func (m *GetRouterMessageResp) String() string            { return proto.CompactTextString(m) }
func (*GetRouterMessageResp) ProtoMessage()               {}
func (*GetRouterMessageResp) Descriptor() ([]byte, []int) { return fileDescriptorGetdialog, []int{3} }

type GetDialogsReq struct {
	ReqMsgID      int64      `protobuf:"varint,1,opt,name=ReqMsgID,proto3" json:"ReqMsgID,omitempty"`
	AppVersion    string     `protobuf:"bytes,2,opt,name=AppVersion,proto3" json:"AppVersion,omitempty"`
	MtLayer       int32      `protobuf:"varint,3,opt,name=MtLayer,proto3" json:"MtLayer,omitempty"`
	Flags         int32      `protobuf:"varint,4,opt,name=Flags,proto3" json:"Flags,omitempty"`
	UserID        int32      `protobuf:"varint,5,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ExcludePinned bool       `protobuf:"varint,6,opt,name=ExcludePinned,proto3" json:"ExcludePinned,omitempty"`
	OffsetDate    int32      `protobuf:"varint,7,opt,name=OffsetDate,proto3" json:"OffsetDate,omitempty"`
	OffsetID      int32      `protobuf:"varint,8,opt,name=OffsetID,proto3" json:"OffsetID,omitempty"`
	OffsetPeer    *InputPeer `protobuf:"bytes,9,opt,name=OffsetPeer" json:"OffsetPeer,omitempty"`
	Limit         int32      `protobuf:"varint,10,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Hash          int32      `protobuf:"varint,11,opt,name=Hash,proto3" json:"Hash,omitempty"`
}

func (m *GetDialogsReq) Reset()                    { *m = GetDialogsReq{} }
func (m *GetDialogsReq) String() string            { return proto.CompactTextString(m) }
func (*GetDialogsReq) ProtoMessage()               {}
func (*GetDialogsReq) Descriptor() ([]byte, []int) { return fileDescriptorGetdialog, []int{4} }

func (m *GetDialogsReq) GetReqMsgID() int64 {
	if m != nil {
		return m.ReqMsgID
	}
	return 0
}

func (m *GetDialogsReq) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *GetDialogsReq) GetMtLayer() int32 {
	if m != nil {
		return m.MtLayer
	}
	return 0
}

func (m *GetDialogsReq) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *GetDialogsReq) GetUserID() int32 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *GetDialogsReq) GetExcludePinned() bool {
	if m != nil {
		return m.ExcludePinned
	}
	return false
}

func (m *GetDialogsReq) GetOffsetDate() int32 {
	if m != nil {
		return m.OffsetDate
	}
	return 0
}

func (m *GetDialogsReq) GetOffsetID() int32 {
	if m != nil {
		return m.OffsetID
	}
	return 0
}

func (m *GetDialogsReq) GetOffsetPeer() *InputPeer {
	if m != nil {
		return m.OffsetPeer
	}
	return nil
}

func (m *GetDialogsReq) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetDialogsReq) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

type GetDialogsResp struct {
	MessagesDialogsBytes []byte `protobuf:"bytes,1,opt,name=MessagesDialogsBytes,proto3" json:"MessagesDialogsBytes,omitempty"`
}

func (m *GetDialogsResp) Reset()                    { *m = GetDialogsResp{} }
func (m *GetDialogsResp) String() string            { return proto.CompactTextString(m) }
func (*GetDialogsResp) ProtoMessage()               {}
func (*GetDialogsResp) Descriptor() ([]byte, []int) { return fileDescriptorGetdialog, []int{5} }

func (m *GetDialogsResp) GetMessagesDialogsBytes() []byte {
	if m != nil {
		return m.MessagesDialogsBytes
	}
	return nil
}

type GetPeerDialogsReq struct {
	ReqMsgID   int64              `protobuf:"varint,1,opt,name=ReqMsgID,proto3" json:"ReqMsgID,omitempty"`
	AppVersion string             `protobuf:"bytes,2,opt,name=AppVersion,proto3" json:"AppVersion,omitempty"`
	MtLayer    int32              `protobuf:"varint,3,opt,name=MtLayer,proto3" json:"MtLayer,omitempty"`
	KeyID      uint64             `protobuf:"varint,4,opt,name=KeyID,proto3" json:"KeyID,omitempty"`
	UserID     int32              `protobuf:"varint,5,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Peers      []*InputDialogPeer `protobuf:"bytes,6,rep,name=peers" json:"peers,omitempty"`
}

func (m *GetPeerDialogsReq) Reset()                    { *m = GetPeerDialogsReq{} }
func (m *GetPeerDialogsReq) String() string            { return proto.CompactTextString(m) }
func (*GetPeerDialogsReq) ProtoMessage()               {}
func (*GetPeerDialogsReq) Descriptor() ([]byte, []int) { return fileDescriptorGetdialog, []int{6} }

func (m *GetPeerDialogsReq) GetReqMsgID() int64 {
	if m != nil {
		return m.ReqMsgID
	}
	return 0
}

func (m *GetPeerDialogsReq) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *GetPeerDialogsReq) GetMtLayer() int32 {
	if m != nil {
		return m.MtLayer
	}
	return 0
}

func (m *GetPeerDialogsReq) GetKeyID() uint64 {
	if m != nil {
		return m.KeyID
	}
	return 0
}

func (m *GetPeerDialogsReq) GetUserID() int32 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *GetPeerDialogsReq) GetPeers() []*InputDialogPeer {
	if m != nil {
		return m.Peers
	}
	return nil
}

type GetPeerDialogsResp struct {
	MessagesPeerDialogsBytes []byte `protobuf:"bytes,1,opt,name=MessagesPeerDialogsBytes,proto3" json:"MessagesPeerDialogsBytes,omitempty"`
}

func (m *GetPeerDialogsResp) Reset()                    { *m = GetPeerDialogsResp{} }
func (m *GetPeerDialogsResp) String() string            { return proto.CompactTextString(m) }
func (*GetPeerDialogsResp) ProtoMessage()               {}
func (*GetPeerDialogsResp) Descriptor() ([]byte, []int) { return fileDescriptorGetdialog, []int{7} }

func (m *GetPeerDialogsResp) GetMessagesPeerDialogsBytes() []byte {
	if m != nil {
		return m.MessagesPeerDialogsBytes
	}
	return nil
}

type InputDialogPeer struct {
	Peer *InputPeer `protobuf:"bytes,1,opt,name=Peer" json:"Peer,omitempty"`
}

func (m *InputDialogPeer) Reset()                    { *m = InputDialogPeer{} }
func (m *InputDialogPeer) String() string            { return proto.CompactTextString(m) }
func (*InputDialogPeer) ProtoMessage()               {}
func (*InputDialogPeer) Descriptor() ([]byte, []int) { return fileDescriptorGetdialog, []int{8} }

func (m *InputDialogPeer) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type InputPeer struct {
	PeerID   int32 `protobuf:"varint,1,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
	PeerType int32 `protobuf:"varint,2,opt,name=PeerType,proto3" json:"PeerType,omitempty"`
}

func (m *InputPeer) Reset()                    { *m = InputPeer{} }
func (m *InputPeer) String() string            { return proto.CompactTextString(m) }
func (*InputPeer) ProtoMessage()               {}
func (*InputPeer) Descriptor() ([]byte, []int) { return fileDescriptorGetdialog, []int{9} }

func (m *InputPeer) GetPeerID() int32 {
	if m != nil {
		return m.PeerID
	}
	return 0
}

func (m *InputPeer) GetPeerType() int32 {
	if m != nil {
		return m.PeerType
	}
	return 0
}

func init() {
	proto.RegisterType((*GetPinnedDialogsReq)(nil), "getdialogproto.GetPinnedDialogsReq")
	proto.RegisterType((*GetPinnedDialogsResp)(nil), "getdialogproto.GetPinnedDialogsResp")
	proto.RegisterType((*GetRouterMessageReq)(nil), "getdialogproto.GetRouterMessageReq")
	proto.RegisterType((*GetRouterMessageResp)(nil), "getdialogproto.GetRouterMessageResp")
	proto.RegisterType((*GetDialogsReq)(nil), "getdialogproto.GetDialogsReq")
	proto.RegisterType((*GetDialogsResp)(nil), "getdialogproto.GetDialogsResp")
	proto.RegisterType((*GetPeerDialogsReq)(nil), "getdialogproto.GetPeerDialogsReq")
	proto.RegisterType((*GetPeerDialogsResp)(nil), "getdialogproto.GetPeerDialogsResp")
	proto.RegisterType((*InputDialogPeer)(nil), "getdialogproto.InputDialogPeer")
	proto.RegisterType((*InputPeer)(nil), "getdialogproto.InputPeer")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GetDialogService service

type GetDialogServiceClient interface {
	// GetDialogs 分片获取用户对话框
	GetDialogs(ctx context.Context, in *GetDialogsReq, opts ...grpc.CallOption) (*GetDialogsResp, error)
	// GetPeerDialogs 获取用户指定对话框
	GetPeerDialogs(ctx context.Context, in *GetPeerDialogsReq, opts ...grpc.CallOption) (*GetPeerDialogsResp, error)
	// 获取用户路由表，返回用户对应的机器im、hostname etc
	GetRouterMessage(ctx context.Context, in *GetRouterMessageReq, opts ...grpc.CallOption) (*GetRouterMessageResp, error)
	// GetPinnedDialogs 获取置顶对话框
	GetPinnedDialogs(ctx context.Context, in *GetPinnedDialogsReq, opts ...grpc.CallOption) (*GetPinnedDialogsResp, error)
}

type getDialogServiceClient struct {
	cc *grpc.ClientConn
}

func NewGetDialogServiceClient(cc *grpc.ClientConn) GetDialogServiceClient {
	return &getDialogServiceClient{cc}
}

func (c *getDialogServiceClient) GetDialogs(ctx context.Context, in *GetDialogsReq, opts ...grpc.CallOption) (*GetDialogsResp, error) {
	out := new(GetDialogsResp)
	err := grpc.Invoke(ctx, "/getdialogproto.GetDialogService/GetDialogs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getDialogServiceClient) GetPeerDialogs(ctx context.Context, in *GetPeerDialogsReq, opts ...grpc.CallOption) (*GetPeerDialogsResp, error) {
	out := new(GetPeerDialogsResp)
	err := grpc.Invoke(ctx, "/getdialogproto.GetDialogService/GetPeerDialogs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getDialogServiceClient) GetRouterMessage(ctx context.Context, in *GetRouterMessageReq, opts ...grpc.CallOption) (*GetRouterMessageResp, error) {
	out := new(GetRouterMessageResp)
	err := grpc.Invoke(ctx, "/getdialogproto.GetDialogService/GetRouterMessage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getDialogServiceClient) GetPinnedDialogs(ctx context.Context, in *GetPinnedDialogsReq, opts ...grpc.CallOption) (*GetPinnedDialogsResp, error) {
	out := new(GetPinnedDialogsResp)
	err := grpc.Invoke(ctx, "/getdialogproto.GetDialogService/GetPinnedDialogs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GetDialogService service

type GetDialogServiceServer interface {
	// GetDialogs 分片获取用户对话框
	GetDialogs(context.Context, *GetDialogsReq) (*GetDialogsResp, error)
	// GetPeerDialogs 获取用户指定对话框
	GetPeerDialogs(context.Context, *GetPeerDialogsReq) (*GetPeerDialogsResp, error)
	// 获取用户路由表，返回用户对应的机器im、hostname etc
	GetRouterMessage(context.Context, *GetRouterMessageReq) (*GetRouterMessageResp, error)
	// GetPinnedDialogs 获取置顶对话框
	GetPinnedDialogs(context.Context, *GetPinnedDialogsReq) (*GetPinnedDialogsResp, error)
}

func RegisterGetDialogServiceServer(s *grpc.Server, srv GetDialogServiceServer) {
	s.RegisterService(&_GetDialogService_serviceDesc, srv)
}

func _GetDialogService_GetDialogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDialogsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetDialogServiceServer).GetDialogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/getdialogproto.GetDialogService/GetDialogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetDialogServiceServer).GetDialogs(ctx, req.(*GetDialogsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetDialogService_GetPeerDialogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPeerDialogsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetDialogServiceServer).GetPeerDialogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/getdialogproto.GetDialogService/GetPeerDialogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetDialogServiceServer).GetPeerDialogs(ctx, req.(*GetPeerDialogsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetDialogService_GetRouterMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRouterMessageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetDialogServiceServer).GetRouterMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/getdialogproto.GetDialogService/GetRouterMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetDialogServiceServer).GetRouterMessage(ctx, req.(*GetRouterMessageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetDialogService_GetPinnedDialogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPinnedDialogsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetDialogServiceServer).GetPinnedDialogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/getdialogproto.GetDialogService/GetPinnedDialogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetDialogServiceServer).GetPinnedDialogs(ctx, req.(*GetPinnedDialogsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _GetDialogService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "getdialogproto.GetDialogService",
	HandlerType: (*GetDialogServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDialogs",
			Handler:    _GetDialogService_GetDialogs_Handler,
		},
		{
			MethodName: "GetPeerDialogs",
			Handler:    _GetDialogService_GetPeerDialogs_Handler,
		},
		{
			MethodName: "GetRouterMessage",
			Handler:    _GetDialogService_GetRouterMessage_Handler,
		},
		{
			MethodName: "GetPinnedDialogs",
			Handler:    _GetDialogService_GetPinnedDialogs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "getdialog.proto",
}

func (m *GetPinnedDialogsReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPinnedDialogsReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ReqMsgID != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(m.ReqMsgID))
	}
	if len(m.AppVersion) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(len(m.AppVersion)))
		i += copy(dAtA[i:], m.AppVersion)
	}
	if m.MtLayer != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(m.MtLayer))
	}
	if m.KeyID != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(m.KeyID))
	}
	if m.UserID != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(m.UserID))
	}
	return i, nil
}

func (m *GetPinnedDialogsResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPinnedDialogsResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.MessagesPeerDialogsBytes) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(len(m.MessagesPeerDialogsBytes)))
		i += copy(dAtA[i:], m.MessagesPeerDialogsBytes)
	}
	return i, nil
}

func (m *GetRouterMessageReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetRouterMessageReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *GetRouterMessageResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetRouterMessageResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *GetDialogsReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetDialogsReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ReqMsgID != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(m.ReqMsgID))
	}
	if len(m.AppVersion) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(len(m.AppVersion)))
		i += copy(dAtA[i:], m.AppVersion)
	}
	if m.MtLayer != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(m.MtLayer))
	}
	if m.Flags != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(m.Flags))
	}
	if m.UserID != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(m.UserID))
	}
	if m.ExcludePinned {
		dAtA[i] = 0x30
		i++
		if m.ExcludePinned {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.OffsetDate != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(m.OffsetDate))
	}
	if m.OffsetID != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(m.OffsetID))
	}
	if m.OffsetPeer != nil {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(m.OffsetPeer.Size()))
		n1, err := m.OffsetPeer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.Limit != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(m.Limit))
	}
	if m.Hash != 0 {
		dAtA[i] = 0x58
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(m.Hash))
	}
	return i, nil
}

func (m *GetDialogsResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetDialogsResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.MessagesDialogsBytes) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(len(m.MessagesDialogsBytes)))
		i += copy(dAtA[i:], m.MessagesDialogsBytes)
	}
	return i, nil
}

func (m *GetPeerDialogsReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPeerDialogsReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ReqMsgID != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(m.ReqMsgID))
	}
	if len(m.AppVersion) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(len(m.AppVersion)))
		i += copy(dAtA[i:], m.AppVersion)
	}
	if m.MtLayer != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(m.MtLayer))
	}
	if m.KeyID != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(m.KeyID))
	}
	if m.UserID != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(m.UserID))
	}
	if len(m.Peers) > 0 {
		for _, msg := range m.Peers {
			dAtA[i] = 0x32
			i++
			i = encodeVarintGetdialog(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *GetPeerDialogsResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPeerDialogsResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.MessagesPeerDialogsBytes) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(len(m.MessagesPeerDialogsBytes)))
		i += copy(dAtA[i:], m.MessagesPeerDialogsBytes)
	}
	return i, nil
}

func (m *InputDialogPeer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InputDialogPeer) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Peer != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(m.Peer.Size()))
		n2, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	return i, nil
}

func (m *InputPeer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InputPeer) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.PeerID != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(m.PeerID))
	}
	if m.PeerType != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintGetdialog(dAtA, i, uint64(m.PeerType))
	}
	return i, nil
}

func encodeFixed64Getdialog(dAtA []byte, offset int, v uint64) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	dAtA[offset+4] = uint8(v >> 32)
	dAtA[offset+5] = uint8(v >> 40)
	dAtA[offset+6] = uint8(v >> 48)
	dAtA[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32Getdialog(dAtA []byte, offset int, v uint32) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintGetdialog(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *GetPinnedDialogsReq) Size() (n int) {
	var l int
	_ = l
	if m.ReqMsgID != 0 {
		n += 1 + sovGetdialog(uint64(m.ReqMsgID))
	}
	l = len(m.AppVersion)
	if l > 0 {
		n += 1 + l + sovGetdialog(uint64(l))
	}
	if m.MtLayer != 0 {
		n += 1 + sovGetdialog(uint64(m.MtLayer))
	}
	if m.KeyID != 0 {
		n += 1 + sovGetdialog(uint64(m.KeyID))
	}
	if m.UserID != 0 {
		n += 1 + sovGetdialog(uint64(m.UserID))
	}
	return n
}

func (m *GetPinnedDialogsResp) Size() (n int) {
	var l int
	_ = l
	l = len(m.MessagesPeerDialogsBytes)
	if l > 0 {
		n += 1 + l + sovGetdialog(uint64(l))
	}
	return n
}

func (m *GetRouterMessageReq) Size() (n int) {
	var l int
	_ = l
	return n
}

func (m *GetRouterMessageResp) Size() (n int) {
	var l int
	_ = l
	return n
}

func (m *GetDialogsReq) Size() (n int) {
	var l int
	_ = l
	if m.ReqMsgID != 0 {
		n += 1 + sovGetdialog(uint64(m.ReqMsgID))
	}
	l = len(m.AppVersion)
	if l > 0 {
		n += 1 + l + sovGetdialog(uint64(l))
	}
	if m.MtLayer != 0 {
		n += 1 + sovGetdialog(uint64(m.MtLayer))
	}
	if m.Flags != 0 {
		n += 1 + sovGetdialog(uint64(m.Flags))
	}
	if m.UserID != 0 {
		n += 1 + sovGetdialog(uint64(m.UserID))
	}
	if m.ExcludePinned {
		n += 2
	}
	if m.OffsetDate != 0 {
		n += 1 + sovGetdialog(uint64(m.OffsetDate))
	}
	if m.OffsetID != 0 {
		n += 1 + sovGetdialog(uint64(m.OffsetID))
	}
	if m.OffsetPeer != nil {
		l = m.OffsetPeer.Size()
		n += 1 + l + sovGetdialog(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovGetdialog(uint64(m.Limit))
	}
	if m.Hash != 0 {
		n += 1 + sovGetdialog(uint64(m.Hash))
	}
	return n
}

func (m *GetDialogsResp) Size() (n int) {
	var l int
	_ = l
	l = len(m.MessagesDialogsBytes)
	if l > 0 {
		n += 1 + l + sovGetdialog(uint64(l))
	}
	return n
}

func (m *GetPeerDialogsReq) Size() (n int) {
	var l int
	_ = l
	if m.ReqMsgID != 0 {
		n += 1 + sovGetdialog(uint64(m.ReqMsgID))
	}
	l = len(m.AppVersion)
	if l > 0 {
		n += 1 + l + sovGetdialog(uint64(l))
	}
	if m.MtLayer != 0 {
		n += 1 + sovGetdialog(uint64(m.MtLayer))
	}
	if m.KeyID != 0 {
		n += 1 + sovGetdialog(uint64(m.KeyID))
	}
	if m.UserID != 0 {
		n += 1 + sovGetdialog(uint64(m.UserID))
	}
	if len(m.Peers) > 0 {
		for _, e := range m.Peers {
			l = e.Size()
			n += 1 + l + sovGetdialog(uint64(l))
		}
	}
	return n
}

func (m *GetPeerDialogsResp) Size() (n int) {
	var l int
	_ = l
	l = len(m.MessagesPeerDialogsBytes)
	if l > 0 {
		n += 1 + l + sovGetdialog(uint64(l))
	}
	return n
}

func (m *InputDialogPeer) Size() (n int) {
	var l int
	_ = l
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovGetdialog(uint64(l))
	}
	return n
}

func (m *InputPeer) Size() (n int) {
	var l int
	_ = l
	if m.PeerID != 0 {
		n += 1 + sovGetdialog(uint64(m.PeerID))
	}
	if m.PeerType != 0 {
		n += 1 + sovGetdialog(uint64(m.PeerType))
	}
	return n
}

func sovGetdialog(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozGetdialog(x uint64) (n int) {
	return sovGetdialog(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetPinnedDialogsReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGetdialog
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPinnedDialogsReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPinnedDialogsReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqMsgID", wireType)
			}
			m.ReqMsgID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqMsgID |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGetdialog
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MtLayer", wireType)
			}
			m.MtLayer = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MtLayer |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field KeyID", wireType)
			}
			m.KeyID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.KeyID |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserID", wireType)
			}
			m.UserID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserID |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGetdialog(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGetdialog
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPinnedDialogsResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGetdialog
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPinnedDialogsResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPinnedDialogsResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessagesPeerDialogsBytes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthGetdialog
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MessagesPeerDialogsBytes = append(m.MessagesPeerDialogsBytes[:0], dAtA[iNdEx:postIndex]...)
			if m.MessagesPeerDialogsBytes == nil {
				m.MessagesPeerDialogsBytes = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGetdialog(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGetdialog
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetRouterMessageReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGetdialog
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetRouterMessageReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetRouterMessageReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGetdialog(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGetdialog
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetRouterMessageResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGetdialog
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetRouterMessageResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetRouterMessageResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGetdialog(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGetdialog
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetDialogsReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGetdialog
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetDialogsReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetDialogsReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqMsgID", wireType)
			}
			m.ReqMsgID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqMsgID |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGetdialog
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MtLayer", wireType)
			}
			m.MtLayer = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MtLayer |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserID", wireType)
			}
			m.UserID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserID |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExcludePinned", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExcludePinned = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetDate", wireType)
			}
			m.OffsetDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetDate |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetID", wireType)
			}
			m.OffsetID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetID |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetPeer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGetdialog
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OffsetPeer == nil {
				m.OffsetPeer = &InputPeer{}
			}
			if err := m.OffsetPeer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGetdialog(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGetdialog
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetDialogsResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGetdialog
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetDialogsResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetDialogsResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessagesDialogsBytes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthGetdialog
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MessagesDialogsBytes = append(m.MessagesDialogsBytes[:0], dAtA[iNdEx:postIndex]...)
			if m.MessagesDialogsBytes == nil {
				m.MessagesDialogsBytes = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGetdialog(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGetdialog
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPeerDialogsReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGetdialog
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPeerDialogsReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPeerDialogsReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqMsgID", wireType)
			}
			m.ReqMsgID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqMsgID |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGetdialog
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MtLayer", wireType)
			}
			m.MtLayer = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MtLayer |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field KeyID", wireType)
			}
			m.KeyID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.KeyID |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserID", wireType)
			}
			m.UserID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserID |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGetdialog
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Peers = append(m.Peers, &InputDialogPeer{})
			if err := m.Peers[len(m.Peers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGetdialog(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGetdialog
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPeerDialogsResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGetdialog
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPeerDialogsResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPeerDialogsResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessagesPeerDialogsBytes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthGetdialog
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MessagesPeerDialogsBytes = append(m.MessagesPeerDialogsBytes[:0], dAtA[iNdEx:postIndex]...)
			if m.MessagesPeerDialogsBytes == nil {
				m.MessagesPeerDialogsBytes = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGetdialog(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGetdialog
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InputDialogPeer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGetdialog
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InputDialogPeer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InputDialogPeer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGetdialog
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGetdialog(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGetdialog
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InputPeer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGetdialog
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InputPeer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InputPeer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PeerID", wireType)
			}
			m.PeerID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PeerID |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PeerType", wireType)
			}
			m.PeerType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PeerType |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGetdialog(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGetdialog
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGetdialog(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGetdialog
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGetdialog
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthGetdialog
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowGetdialog
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipGetdialog(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthGetdialog = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGetdialog   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("getdialog.proto", fileDescriptorGetdialog) }

var fileDescriptorGetdialog = []byte{
	// 552 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x54, 0x3d, 0x8f, 0xd3, 0x4c,
	0x10, 0xbe, 0x4d, 0xe2, 0x5c, 0x32, 0xb9, 0x8f, 0xf7, 0x5d, 0xc2, 0x69, 0x89, 0x44, 0x30, 0xcb,
	0x15, 0x6e, 0x48, 0x11, 0x44, 0x01, 0x0d, 0x70, 0x32, 0x84, 0x88, 0x8b, 0x88, 0x96, 0x0f, 0x89,
	0x0a, 0x99, 0xcb, 0x5c, 0xb0, 0x14, 0x62, 0xc7, 0xeb, 0x20, 0xf2, 0x53, 0xf8, 0x47, 0x54, 0x88,
	0x9a, 0x0a, 0xe5, 0x87, 0x20, 0xe4, 0xb1, 0x63, 0x6c, 0x9f, 0x21, 0x05, 0x12, 0x54, 0xde, 0x67,
	0xe6, 0xd9, 0x9d, 0x99, 0x67, 0xc6, 0x03, 0x87, 0x53, 0x0c, 0x27, 0xae, 0x33, 0xf3, 0xa6, 0x3d,
	0x3f, 0xf0, 0x42, 0x8f, 0x1f, 0xa4, 0x06, 0xc2, 0xf2, 0x23, 0x83, 0x4b, 0x03, 0x0c, 0xc7, 0xee,
	0x7c, 0x8e, 0x13, 0x9b, 0x1c, 0x5a, 0xe1, 0x82, 0x77, 0xa0, 0xa1, 0x70, 0x31, 0xd2, 0xd3, 0xa1,
	0x2d, 0x98, 0xc9, 0xac, 0xaa, 0x4a, 0x31, 0xef, 0x02, 0x3c, 0xf0, 0xfd, 0x97, 0x18, 0x68, 0xd7,
	0x9b, 0x8b, 0x8a, 0xc9, 0xac, 0xa6, 0xca, 0x58, 0xb8, 0x80, 0xdd, 0x51, 0x78, 0xea, 0xac, 0x30,
	0x10, 0x55, 0x93, 0x59, 0x86, 0xda, 0x40, 0xde, 0x06, 0xe3, 0x09, 0xae, 0x86, 0xb6, 0xa8, 0x99,
	0xcc, 0xaa, 0xa9, 0x18, 0xf0, 0x23, 0xa8, 0xbf, 0xd0, 0x18, 0x0c, 0x6d, 0x01, 0x44, 0x4f, 0x90,
	0x54, 0xd0, 0xbe, 0x98, 0x9a, 0xf6, 0xf9, 0x5d, 0x10, 0x23, 0xd4, 0xda, 0x99, 0xa2, 0x1e, 0x23,
	0x06, 0x89, 0xeb, 0x64, 0x15, 0xa2, 0xa6, 0x5c, 0xf7, 0xd4, 0x2f, 0xfd, 0xf2, 0x32, 0x95, 0xab,
	0xbc, 0x65, 0x88, 0x41, 0x42, 0x52, 0xb8, 0x90, 0x47, 0x14, 0xaa, 0x60, 0xd6, 0xbe, 0xfc, 0x5a,
	0x81, 0xfd, 0x01, 0x86, 0x7f, 0x43, 0x98, 0x47, 0x33, 0x67, 0xaa, 0x49, 0x18, 0x43, 0xc5, 0x20,
	0x23, 0x8c, 0x91, 0x15, 0x86, 0x1f, 0xc3, 0xfe, 0xc3, 0x0f, 0x67, 0xb3, 0xe5, 0x04, 0x63, 0x71,
	0x44, 0xdd, 0x64, 0x56, 0x43, 0xe5, 0x8d, 0x51, 0x36, 0x4f, 0xcf, 0xcf, 0x35, 0x86, 0xb6, 0x13,
	0xa2, 0xd8, 0xa5, 0x17, 0x32, 0x96, 0xa8, 0x92, 0x18, 0x0d, 0x6d, 0xd1, 0x20, 0x6f, 0x8a, 0xf9,
	0x9d, 0xcd, 0xdd, 0x48, 0x40, 0xd1, 0x34, 0x99, 0xd5, 0xea, 0x5f, 0xe9, 0xe5, 0x67, 0xa7, 0x37,
	0x9c, 0xfb, 0x4b, 0x22, 0xa8, 0x0c, 0x39, 0x2a, 0xe5, 0xd4, 0x7d, 0xe7, 0x86, 0x49, 0x33, 0x63,
	0xc0, 0x39, 0xd4, 0x1e, 0x3b, 0xfa, 0xad, 0x68, 0x91, 0x91, 0xce, 0xd2, 0x86, 0x83, 0xac, 0xb6,
	0xda, 0xe7, 0x7d, 0x68, 0x6f, 0x3a, 0x57, 0xd2, 0xd5, 0x52, 0x9f, 0xfc, 0xcc, 0xe0, 0xff, 0x41,
	0x1c, 0xfb, 0x9f, 0xcf, 0x6f, 0xbe, 0x4d, 0xb7, 0xc1, 0xf0, 0x11, 0x03, 0x2d, 0xea, 0x66, 0xd5,
	0x6a, 0xf5, 0xaf, 0x95, 0xea, 0x17, 0xe7, 0x4c, 0x2a, 0xc6, 0x6c, 0x39, 0x06, 0x5e, 0xac, 0xe7,
	0x0f, 0x87, 0xfe, 0x3e, 0x1c, 0x16, 0x62, 0xf1, 0x9b, 0x50, 0xa3, 0xd6, 0xb2, 0x6d, 0xad, 0x25,
	0x9a, 0xbc, 0x07, 0xcd, 0xd4, 0x14, 0xd5, 0x1b, 0x7d, 0x13, 0x65, 0x0d, 0x95, 0xa0, 0x48, 0xf3,
	0xe8, 0xf4, 0x7c, 0xe5, 0x23, 0xa9, 0x6a, 0xa8, 0x14, 0xf7, 0xbf, 0x57, 0xe0, 0xbf, 0xb4, 0xd9,
	0xcf, 0x30, 0x78, 0xef, 0x9e, 0x21, 0x1f, 0x01, 0xfc, 0x1c, 0x00, 0x7e, 0xb5, 0x98, 0x44, 0xee,
	0xc7, 0xeb, 0x74, 0x7f, 0xe7, 0xd6, 0xbe, 0xdc, 0xe1, 0xaf, 0x68, 0x9e, 0x32, 0xd5, 0xf3, 0xeb,
	0x25, 0x77, 0xf2, 0x83, 0xd2, 0x91, 0xdb, 0x28, 0xf4, 0xf4, 0x6b, 0xca, 0x3e, 0xb7, 0x1f, 0xf8,
	0x8d, 0x92, 0x9b, 0xc5, 0xc5, 0xd2, 0x39, 0xde, 0x4e, 0xca, 0x04, 0xc8, 0xed, 0xba, 0xd2, 0x00,
	0xc5, 0x45, 0x5d, 0x1a, 0xe0, 0xc2, 0xca, 0x94, 0x3b, 0x27, 0x7b, 0x9f, 0xd6, 0x5d, 0xf6, 0x65,
	0xdd, 0x65, 0xdf, 0xd6, 0x5d, 0xf6, 0xa6, 0x4e, 0xdc, 0x5b, 0x3f, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x34, 0xe2, 0xe2, 0x96, 0x20, 0x06, 0x00, 0x00,
}
