syntax = "proto3";
package imapigateway;

// 日志格式结构
message Debug {
    int32 userid = 1;  // 用户id
    string Phone = 2;  // 电话号码
    string ip = 3;  // ip
    uint64 key_id = 4;  // keyid
    uint64 session_id = 5; // 连接id
    int32  layer = 6;  // 层
    uint32  ostype = 7; //1 是安卓 2 是Iphone/IPAD 3 是PC 4是web 5是机器人
    uint32 current_crc = 8; // 当前协议的crc32
    string app_version = 9; // 客户端版本
}


//群基础信息
message ChannelInfoBase {
    int32 channel_id = 1; //超级群、频道ID
    int64 access_hash = 2;
    bool encry = 3; //是否是加密群
    bool broadcast = 4; //是否是频道
    bool verified = 5;
    bool megagroup = 6; //	是否是超级群的标识
    bool restricted = 7; //是否被限制
    bool democracy = 8; //是否民主（设置管理员的时候需要用）
    bool signatures = 9;
    bool min = 10;
    string title = 11; //群名称
    string username = 12; //超级群的唯一标识名称
    string photo = 13; //用户头像 json格式
    int32 date = 14; //创建时间
    int32 version = 15; //版本
    string restriction_reason = 16; //被限制的原因
    int32 cluster = 17; //超级群创建的cluster
   // bool moderator = 18; //是不是主持人
    bool is_creator = 18; //是不是创建者
   // bool editor = 19; //是否是管理员
    bool is_admin = 19; //是否是管理员
    bool left = 20; //是否是已经离开此超级群
    bool kicked = 21; //是否是被踢人
    int32 migrated_from_chat_id = 22;
    int32  invite_rule = 23 ;//0:所有人能邀请  1:仅管理员  其他：扩展用
    int32  Admins_count = 24;
	int32  Kicked_count = 25;
	int32  Banned_count = 26;
    int32  Bot_count   =27;
    int32 Participants_count  =28;
    bool  IsInChannel  =29;
    int32 util_date  =30;
    string exported_invite_link = 31; //邀请链接
    int32 Creator = 32;
    string About = 33;
    bool EveryoneQuiet = 34;
    bool PrivateChat = 35;
}

//普通群的基础信息
message GetChatInfoResp {
    int32          chat_id            = 1 ;
    bool           admins_enabled     = 2 ;
    bool           deactivated        = 3 ; //群是否活跃
    string         exported_invite    = 4 ;
    bool           encry              = 5 ; //是否加密群
    int32          creator            = 6 ; //创建者的id
    string         title              = 7 ;
    bytes          photo              = 8 ; //群头像
    bytes          full_photo          = 9 ; //群头像
    int32          version            = 10 ; //群version
    int32          participants_count = 11; //	群成员个数 （邀请人和踢人都要相应变化）
    int32          date               = 12; //群创建时间
    string         migrate_to         = 13; //升级为超级群的时候默认"" 格式为json格式
    ChatResultCode resultcode         = 14;//结果码
}

// 结果码定义，后续在此添加 ...
enum ERpcResultCode {
    RRC_OK                           	 = 0;        // 成功
    RRC_FILE_NOT_EXISITS               	 = 1;        // 文件不存在
    RRC_SYSTEM_EXCEPTION                 = 2;        // 系统异常
    RRC_PARAMETER_EXCEPTION              = 3;        // 参数异常
    RRC_LOGIC_EXCEPTION                  = 4;        // 逻辑异常
    RRC_REPEAT_SLICE                     = 5;        // 重复分片
    RRC_SESSION_NOT_EXISITS            	 = 6;        // 会话不存在
    RRC_DATA_EXCEPTION                   = 7;        // 数据异常
    RRC_NO_ACCESS_RIGHTS                 = 8;        // 没有访问权限
    RRC_DB_EXCEPTION                     = 9;        // DB（redis）异常
    RRC_UNKNOWN                      	 = 65535;    // 未知异常
}

// Fid参数
message FidPara {
    uint64                 fid           = 1;        // 存储服务分配存储文件的唯一标识
}

enum ChatResultCode {
    Chat_RPC_OK                           = 0;         //成功
    Chat_ADDUSER3549_EXP                  = 4000;       //3549隐私选项
    Chat_User_Priavcay                    = 4001;       //隐私选项 没有权限
    Chat_To_User_Blocked                  = 4002;       //block你将用户拉入黑名单  隐私选项
    Chat_User_Blocked                     = 4003;       //block用户将你拉入黑名单  隐私选项
    Chat_REPEAT_CREAT                     = 4004;       //短时间重复创建群
    Chat_REPEAT_ADD_USER                  = 4005;       //重复添加群成员
	Chat_EXCEED_CREATE_MAXNUM             = 4006;       //超过最大建群数量
	Chat_EXCEED_TODAY_CREATE_MAXNUM       = 4007;       //超过当日最大建群数量
    Chat_EXCEED_ADD_USER_MAXNUM           = 4008;       //超过群最大添加人数
    Chat_PROHIBIT_ADD_GROUP               = 4009;       //禁止加入群组
    Chat_ADMINLEVEL_EXCEPTION             = 4010;       //没有邀请权限
    Chat_ALREADYLEFT_EXCEPTION            = 4011;       //用户不在群里
    Chat_GROUP_DISBAND                    = 4012;       //该群已经解散
    Chat_GROUP_KICKED                     = 4013;       //该群以将你拉黑
    Chat_HOURS_ADD_USER_MAXNUM            = 4114;       //超过每小时最多添加群成员数
    Chat_ONCE_ADD_USER_MAXNUM             = 4115;       //超过单次最多添加群成员数
    //
    Chat_UNKNOWN                      	  = 4100;       //未知异常
    Chat_PARAMETER_EXCEPTION              = 4101;       //参数异常
    Chat_LOGIC_EXCEPTION                  = 4102;       //逻辑异常
    Chat_REDIS_EXCEPTION                  = 4103;       //redis异常
    Chat_DB_EXCEPTION                     = 4104;       //数据库异常
    Chat_AllocId_EXCEPTION                = 4105;       //群id分配错误
    Chat_CallGetUser_EXCEPTION            = 4106;       //获取user出错  刘鑫磊提供接口
    Chat_DB_NORECORD                      = 4107;       //无记录
    Chat_Group_NORECORD                   = 4108;       //无群记录
}

// uinfo 相关错误代码
enum ReErrCode {
    Success = 0; //成功
    DBError = 1; //数据库错误
    InternalError = 2; //内部其他错误
    NotExist = 3; //用户不存在
    UserNameOccupied = 4; //用户名已占用
    Register = 5; //已经注册
    Unregister = 6; //用户注册
    NotModify = 7; //联系人没有变化
    Blocked = 8; //是黑名单
    UnBlocked = 9; //不是黑明单
    Valid = 10; //隐私选项等可用的返回
    UnValid = 11; //隐私选项校验失败的情况
    Failed = 12; //失败
    HashNotSuccess = 13; //用户哈希值不合法
    UsernameNotEmpty = 14; // user already has username
    VipOnly = 15;
    IllegalUserId = 16; //不合法的userid
    CanNotBeSelf = 17; //目标不能是自己
    ContactHasAdded = 18; //联系人已添加
    AppliedNotExist = 19; //联系人申请不存在
    Params = 20; //参数错误
    Unknown = 21;
    RedisError = 22; //redis错误
    GroupNotExist = 23; //分组不存在
    AppliedNotModify = 24;
}

//用户信息数组
message UserInfoArray {
    repeated userInfo userin = 1;
}

//查询出来的用户基础信息（self 、contact、 mutual_contact 需要在逻辑中判断 ）
message userInfo {
    int32 user_id = 1; //用户的id
    int64 access_hash = 2;
    string first_name = 3;
    string last_name = 4;
    string username = 5;
    string phone = 6; //用户的电话号码
    int32 status = 7; //是否在线的标识	0 代表不在线 1代表在线
    int32 last_logout = 8; //最后在线时间
    int32 cluster_region = 9; // 用户所在的dc
    string font_rgb = 10; //用户的特色字体颜色（扩展使用） {0,0,0}
    string country_code = 11; //用户的国家码
    string photo = 12; //用户头像为json格式
    int32 bot_info_version = 13; //机器人version
    string bot_inline_placeholder = 14; //机器人相关
    string restriction_reason = 15;
    string lang_code = 16; //国家语言代码
    string local_phone = 17;
    bool deleted = 18;
    bool bot = 19;
    bool bot_chat_history = 20;
    bool bot_nochats = 21;
    bool verified = 22;
    bool restricted = 23;
    bool min = 24;
    bool bot_inline_geo = 25;
    bool self = 26; //是否是自己
    bool contact = 27; //是否是自己联系人
    bool mutal_contact = 28; //是否是双向联系人
    bool star_mark = 29; // 是否星标联系人
    bool show_contact_phone = 30; //是否显示联系人手机
    int32 group_id = 31; // 组
    int32 created = 32; // 创建时间
    int32 user_type = 33;//用户类别
    int32 user_lable = 34;//标记
    int32 user_level = 35; // 用户等级
    string about = 36;
    int32 sex = 37; //
    int32 birthday = 38;
    string address = 39;
}

message UserMsg {
    int64   Id              = 1;  // 唯一键
    int32   UserId          = 2;  // 用户ID
    int32   WithId          = 3;  // 消息交互方
    int32   WithIdType      = 4;  // 消息交互方类型 1.user 2:chat 3:channel
    int32   MessageType     = 5;  // 消息类型
    int32   Flags           = 6;  // 消息标识
    bool    Out             = 7;  // 是否为自己发送
    bool    Mentioned       = 8;  // 是否提及他人
    bool    MediaUnread     = 9;  // 媒体是否已读
    bool    Silent          = 10; // 是否静音
    bool    Post            = 11; // 是否邮递
    int64   GroupId         = 12; // 图片组ID
    int32   MsgId           = 13; // 消息id
    int32   ToId            = 14; // 接收方id
    int32   Pts             = 15; // 消息的pts
    bytes   FwdFrom         = 16; // 引用
    int32   ViaBotId        = 17; // 机器人id
    int32   ReplyToMsgId    = 18; // 回复id
    int32   Date            = 19; // 时间
    string  Message         = 20; // 消息内容
    int64   Media           = 21; // 媒体id
    bytes   MediaData       = 22; // 媒体二进制
    bytes   ReplyMarkup     = 23; // 小键盘
    repeated bytes Entities = 24; // 高亮
    int32   FromId          = 25; // 发送方
    int32   Views           = 26; // 查看人数
    int32   EditDate        = 27; // 编辑时间
    bytes   Action          = 28; // 行为
    int64   RandomId        = 29; // 随机id
    int64   Uuid            = 30; // 消息全局唯一id
    int32   InsertDate      = 31; // 插入时间
    int32   UpdateDate      = 32; // 更新时间
    int32   Encry           = 33; // 是否加密信息 0: 不加密 1：加密
    Combination Combination = 34; // 预留字段
}

message Combination {
    repeated MentionStatus MentionedSlice = 1; // @人 二进制
    repeated int64 KeyId                  = 2; // keyId 判断
}

message MentionStatus {
    int32 UserId = 1;
    int32 Status = 2;
}

// 红包游戏错误码(后续需要添加)
enum RedGameErrorCode {
    Error_OK                           	 = 0;        // 成功
    Error_Failed               	         = 1;        // 失败
}