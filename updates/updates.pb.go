// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: updates.proto

package updates

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PtsHandleInt int32

const (
	PtsHandle_COMMON PtsHandleInt = 0
	PtsHandle_ACTION PtsHandleInt = 1
)

// Enum value maps for PtsHandleInt.
var (
	PtsHandleInt_name = map[int32]string{
		0: "COMMON",
		1: "ACTION",
	}
	PtsHandleInt_value = map[string]int32{
		"COMMON": 0,
		"ACTION": 1,
	}
)

func (x PtsHandleInt) Enum() *PtsHandleInt {
	p := new(PtsHandleInt)
	*p = x
	return p
}

func (x PtsHandleInt) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PtsHandleInt) Descriptor() protoreflect.EnumDescriptor {
	return file_updates_proto_enumTypes[0].Descriptor()
}

func (PtsHandleInt) Type() protoreflect.EnumType {
	return &file_updates_proto_enumTypes[0]
}

func (x PtsHandleInt) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PtsHandleInt.Descriptor instead.
func (PtsHandleInt) EnumDescriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{25, 0}
}

type ReqGetUserPtsHandleByMsgIDs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int32   `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	MsgIDs []int32 `protobuf:"varint,2,rep,packed,name=MsgIDs,proto3" json:"MsgIDs,omitempty"`
}

func (x *ReqGetUserPtsHandleByMsgIDs) Reset() {
	*x = ReqGetUserPtsHandleByMsgIDs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetUserPtsHandleByMsgIDs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetUserPtsHandleByMsgIDs) ProtoMessage() {}

func (x *ReqGetUserPtsHandleByMsgIDs) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetUserPtsHandleByMsgIDs.ProtoReflect.Descriptor instead.
func (*ReqGetUserPtsHandleByMsgIDs) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{0}
}

func (x *ReqGetUserPtsHandleByMsgIDs) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ReqGetUserPtsHandleByMsgIDs) GetMsgIDs() []int32 {
	if x != nil {
		return x.MsgIDs
	}
	return nil
}

type ReplyGetUserPtsHandleByMsgIDs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PtsHandles []*PtsHandle `protobuf:"bytes,1,rep,name=PtsHandles,proto3" json:"PtsHandles,omitempty"`
}

func (x *ReplyGetUserPtsHandleByMsgIDs) Reset() {
	*x = ReplyGetUserPtsHandleByMsgIDs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyGetUserPtsHandleByMsgIDs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyGetUserPtsHandleByMsgIDs) ProtoMessage() {}

func (x *ReplyGetUserPtsHandleByMsgIDs) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyGetUserPtsHandleByMsgIDs.ProtoReflect.Descriptor instead.
func (*ReplyGetUserPtsHandleByMsgIDs) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{1}
}

func (x *ReplyGetUserPtsHandleByMsgIDs) GetPtsHandles() []*PtsHandle {
	if x != nil {
		return x.PtsHandles
	}
	return nil
}

type ReplyUpdateUserPtsHandle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReplyUpdateUserPtsHandle) Reset() {
	*x = ReplyUpdateUserPtsHandle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyUpdateUserPtsHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyUpdateUserPtsHandle) ProtoMessage() {}

func (x *ReplyUpdateUserPtsHandle) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyUpdateUserPtsHandle.ProtoReflect.Descriptor instead.
func (*ReplyUpdateUserPtsHandle) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{2}
}

type ReqUpdateUserPtsHandle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PtsHandle *PtsHandle `protobuf:"bytes,1,opt,name=PtsHandle,proto3" json:"PtsHandle,omitempty"`
}

func (x *ReqUpdateUserPtsHandle) Reset() {
	*x = ReqUpdateUserPtsHandle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateUserPtsHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateUserPtsHandle) ProtoMessage() {}

func (x *ReqUpdateUserPtsHandle) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateUserPtsHandle.ProtoReflect.Descriptor instead.
func (*ReqUpdateUserPtsHandle) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{3}
}

func (x *ReqUpdateUserPtsHandle) GetPtsHandle() *PtsHandle {
	if x != nil {
		return x.PtsHandle
	}
	return nil
}

type ReqDeleteUserPtsHandleByMsgIDs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int32   `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	MsgIDs []int32 `protobuf:"varint,2,rep,packed,name=MsgIDs,proto3" json:"MsgIDs,omitempty"`
}

func (x *ReqDeleteUserPtsHandleByMsgIDs) Reset() {
	*x = ReqDeleteUserPtsHandleByMsgIDs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDeleteUserPtsHandleByMsgIDs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDeleteUserPtsHandleByMsgIDs) ProtoMessage() {}

func (x *ReqDeleteUserPtsHandleByMsgIDs) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDeleteUserPtsHandleByMsgIDs.ProtoReflect.Descriptor instead.
func (*ReqDeleteUserPtsHandleByMsgIDs) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{4}
}

func (x *ReqDeleteUserPtsHandleByMsgIDs) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ReqDeleteUserPtsHandleByMsgIDs) GetMsgIDs() []int32 {
	if x != nil {
		return x.MsgIDs
	}
	return nil
}

type ReplyDeleteUserPtsHandleByMsgIDs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReplyDeleteUserPtsHandleByMsgIDs) Reset() {
	*x = ReplyDeleteUserPtsHandleByMsgIDs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyDeleteUserPtsHandleByMsgIDs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyDeleteUserPtsHandleByMsgIDs) ProtoMessage() {}

func (x *ReplyDeleteUserPtsHandleByMsgIDs) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyDeleteUserPtsHandleByMsgIDs.ProtoReflect.Descriptor instead.
func (*ReplyDeleteUserPtsHandleByMsgIDs) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{5}
}

type ReqMonitor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command    string   `protobuf:"bytes,1,opt,name=Command,proto3" json:"Command,omitempty"`       // 命令
	SubCommand string   `protobuf:"bytes,2,opt,name=SubCommand,proto3" json:"SubCommand,omitempty"` // 子命令
	Args       []string `protobuf:"bytes,3,rep,name=Args,proto3" json:"Args,omitempty"`             // 参数
}

func (x *ReqMonitor) Reset() {
	*x = ReqMonitor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqMonitor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqMonitor) ProtoMessage() {}

func (x *ReqMonitor) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqMonitor.ProtoReflect.Descriptor instead.
func (*ReqMonitor) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{6}
}

func (x *ReqMonitor) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *ReqMonitor) GetSubCommand() string {
	if x != nil {
		return x.SubCommand
	}
	return ""
}

func (x *ReqMonitor) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

type ReplyMonitor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"` // 返回消息
}

func (x *ReplyMonitor) Reset() {
	*x = ReplyMonitor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyMonitor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyMonitor) ProtoMessage() {}

func (x *ReplyMonitor) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyMonitor.ProtoReflect.Descriptor instead.
func (*ReplyMonitor) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{7}
}

func (x *ReplyMonitor) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReqStoreOtherInfoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtherInfoMsg *OtherInfoMsg `protobuf:"bytes,1,opt,name=OtherInfoMsg,proto3" json:"OtherInfoMsg,omitempty"`
}

func (x *ReqStoreOtherInfoMsg) Reset() {
	*x = ReqStoreOtherInfoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqStoreOtherInfoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqStoreOtherInfoMsg) ProtoMessage() {}

func (x *ReqStoreOtherInfoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqStoreOtherInfoMsg.ProtoReflect.Descriptor instead.
func (*ReqStoreOtherInfoMsg) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{8}
}

func (x *ReqStoreOtherInfoMsg) GetOtherInfoMsg() *OtherInfoMsg {
	if x != nil {
		return x.OtherInfoMsg
	}
	return nil
}

type ReplyStoreOtherInfoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReplyStoreOtherInfoMsg) Reset() {
	*x = ReplyStoreOtherInfoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyStoreOtherInfoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyStoreOtherInfoMsg) ProtoMessage() {}

func (x *ReplyStoreOtherInfoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyStoreOtherInfoMsg.ProtoReflect.Descriptor instead.
func (*ReplyStoreOtherInfoMsg) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{9}
}

type ReqBatchStoreOtherInfoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtherInfoMsgs []*OtherInfoMsg `protobuf:"bytes,1,rep,name=OtherInfoMsgs,proto3" json:"OtherInfoMsgs,omitempty"` // otherInfoMsg 消息数组
}

func (x *ReqBatchStoreOtherInfoMsg) Reset() {
	*x = ReqBatchStoreOtherInfoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBatchStoreOtherInfoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBatchStoreOtherInfoMsg) ProtoMessage() {}

func (x *ReqBatchStoreOtherInfoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBatchStoreOtherInfoMsg.ProtoReflect.Descriptor instead.
func (*ReqBatchStoreOtherInfoMsg) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{10}
}

func (x *ReqBatchStoreOtherInfoMsg) GetOtherInfoMsgs() []*OtherInfoMsg {
	if x != nil {
		return x.OtherInfoMsgs
	}
	return nil
}

type ReplyBatchStoreOtherInfoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReplyBatchStoreOtherInfoMsg) Reset() {
	*x = ReplyBatchStoreOtherInfoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyBatchStoreOtherInfoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyBatchStoreOtherInfoMsg) ProtoMessage() {}

func (x *ReplyBatchStoreOtherInfoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyBatchStoreOtherInfoMsg.ProtoReflect.Descriptor instead.
func (*ReplyBatchStoreOtherInfoMsg) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{11}
}

type ReqGetOtherInfoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"` // 用户ID
	Date   int64 `protobuf:"varint,2,opt,name=Date,proto3" json:"Date,omitempty"`     // 时间戳 纳秒
}

func (x *ReqGetOtherInfoMsg) Reset() {
	*x = ReqGetOtherInfoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetOtherInfoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetOtherInfoMsg) ProtoMessage() {}

func (x *ReqGetOtherInfoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetOtherInfoMsg.ProtoReflect.Descriptor instead.
func (*ReqGetOtherInfoMsg) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{12}
}

func (x *ReqGetOtherInfoMsg) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ReqGetOtherInfoMsg) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

type ReplyGetOtherInfoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtherInfoMsgs []*OtherInfoMsg `protobuf:"bytes,1,rep,name=OtherInfoMsgs,proto3" json:"OtherInfoMsgs,omitempty"`
}

func (x *ReplyGetOtherInfoMsg) Reset() {
	*x = ReplyGetOtherInfoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyGetOtherInfoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyGetOtherInfoMsg) ProtoMessage() {}

func (x *ReplyGetOtherInfoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyGetOtherInfoMsg.ProtoReflect.Descriptor instead.
func (*ReplyGetOtherInfoMsg) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{13}
}

func (x *ReplyGetOtherInfoMsg) GetOtherInfoMsgs() []*OtherInfoMsg {
	if x != nil {
		return x.OtherInfoMsgs
	}
	return nil
}

type ReqStoreUserPtsHandle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PtsHandle *PtsHandle `protobuf:"bytes,1,opt,name=PtsHandle,proto3" json:"PtsHandle,omitempty"` // ptsHandle
}

func (x *ReqStoreUserPtsHandle) Reset() {
	*x = ReqStoreUserPtsHandle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqStoreUserPtsHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqStoreUserPtsHandle) ProtoMessage() {}

func (x *ReqStoreUserPtsHandle) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqStoreUserPtsHandle.ProtoReflect.Descriptor instead.
func (*ReqStoreUserPtsHandle) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{14}
}

func (x *ReqStoreUserPtsHandle) GetPtsHandle() *PtsHandle {
	if x != nil {
		return x.PtsHandle
	}
	return nil
}

type ReplyStoreUserPtsHandle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReplyStoreUserPtsHandle) Reset() {
	*x = ReplyStoreUserPtsHandle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyStoreUserPtsHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyStoreUserPtsHandle) ProtoMessage() {}

func (x *ReplyStoreUserPtsHandle) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyStoreUserPtsHandle.ProtoReflect.Descriptor instead.
func (*ReplyStoreUserPtsHandle) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{15}
}

type ReqGetUserPtsHandle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"` // [must] 用户ID [must]
	Pts    int32 `protobuf:"varint,2,opt,name=Pts,proto3" json:"Pts,omitempty"`       // 查询 > pts的limit条数据
	Limit  int32 `protobuf:"varint,3,opt,name=Limit,proto3" json:"Limit,omitempty"`   // [must] 查询条数
}

func (x *ReqGetUserPtsHandle) Reset() {
	*x = ReqGetUserPtsHandle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetUserPtsHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetUserPtsHandle) ProtoMessage() {}

func (x *ReqGetUserPtsHandle) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetUserPtsHandle.ProtoReflect.Descriptor instead.
func (*ReqGetUserPtsHandle) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{16}
}

func (x *ReqGetUserPtsHandle) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ReqGetUserPtsHandle) GetPts() int32 {
	if x != nil {
		return x.Pts
	}
	return 0
}

func (x *ReqGetUserPtsHandle) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ReplyGetUserPtsHandle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgs    [][]byte `protobuf:"bytes,1,rep,name=Msgs,proto3" json:"Msgs,omitempty"`        // 消息二进制集合
	LastPts int32    `protobuf:"varint,2,opt,name=LastPts,proto3" json:"LastPts,omitempty"` // 返回二进制中最大的PTS
}

func (x *ReplyGetUserPtsHandle) Reset() {
	*x = ReplyGetUserPtsHandle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyGetUserPtsHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyGetUserPtsHandle) ProtoMessage() {}

func (x *ReplyGetUserPtsHandle) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyGetUserPtsHandle.ProtoReflect.Descriptor instead.
func (*ReplyGetUserPtsHandle) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{17}
}

func (x *ReplyGetUserPtsHandle) GetMsgs() [][]byte {
	if x != nil {
		return x.Msgs
	}
	return nil
}

func (x *ReplyGetUserPtsHandle) GetLastPts() int32 {
	if x != nil {
		return x.LastPts
	}
	return 0
}

type ReqDeleteUserPtsHandle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32   `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`    // [must] 用户ID
	Ptss   []int32 `protobuf:"varint,2,rep,packed,name=Ptss,proto3" json:"Ptss,omitempty"` // [must] 待删除的pts切片
}

func (x *ReqDeleteUserPtsHandle) Reset() {
	*x = ReqDeleteUserPtsHandle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDeleteUserPtsHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDeleteUserPtsHandle) ProtoMessage() {}

func (x *ReqDeleteUserPtsHandle) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDeleteUserPtsHandle.ProtoReflect.Descriptor instead.
func (*ReqDeleteUserPtsHandle) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{18}
}

func (x *ReqDeleteUserPtsHandle) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ReqDeleteUserPtsHandle) GetPtss() []int32 {
	if x != nil {
		return x.Ptss
	}
	return nil
}

type ReplyDeleteUserPtsHandle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReplyDeleteUserPtsHandle) Reset() {
	*x = ReplyDeleteUserPtsHandle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyDeleteUserPtsHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyDeleteUserPtsHandle) ProtoMessage() {}

func (x *ReplyDeleteUserPtsHandle) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyDeleteUserPtsHandle.ProtoReflect.Descriptor instead.
func (*ReplyDeleteUserPtsHandle) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{19}
}

type ReqClearUserPtsHandle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"` // [must] 用户ID
	MaxPts int32 `protobuf:"varint,2,opt,name=MaxPts,proto3" json:"MaxPts,omitempty"` // 最大的Pts 删除 <= pts 的数据， 如果为0 则全删除
}

func (x *ReqClearUserPtsHandle) Reset() {
	*x = ReqClearUserPtsHandle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqClearUserPtsHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqClearUserPtsHandle) ProtoMessage() {}

func (x *ReqClearUserPtsHandle) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqClearUserPtsHandle.ProtoReflect.Descriptor instead.
func (*ReqClearUserPtsHandle) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{20}
}

func (x *ReqClearUserPtsHandle) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ReqClearUserPtsHandle) GetMaxPts() int32 {
	if x != nil {
		return x.MaxPts
	}
	return 0
}

type ReplyClearUserPtsHandle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReplyClearUserPtsHandle) Reset() {
	*x = ReplyClearUserPtsHandle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyClearUserPtsHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyClearUserPtsHandle) ProtoMessage() {}

func (x *ReplyClearUserPtsHandle) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyClearUserPtsHandle.ProtoReflect.Descriptor instead.
func (*ReplyClearUserPtsHandle) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{21}
}

type ReqClearUserDialogPtsHandle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"` // [must] 用户ID
	WithId int32 `protobuf:"varint,2,opt,name=WithId,proto3" json:"WithId,omitempty"` // [must] 消息接收者ID
	MaxPts int32 `protobuf:"varint,3,opt,name=MaxPts,proto3" json:"MaxPts,omitempty"` // 最大的Pts 删除 <= pts 的数据， 如果为0 则全删除
}

func (x *ReqClearUserDialogPtsHandle) Reset() {
	*x = ReqClearUserDialogPtsHandle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqClearUserDialogPtsHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqClearUserDialogPtsHandle) ProtoMessage() {}

func (x *ReqClearUserDialogPtsHandle) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqClearUserDialogPtsHandle.ProtoReflect.Descriptor instead.
func (*ReqClearUserDialogPtsHandle) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{22}
}

func (x *ReqClearUserDialogPtsHandle) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ReqClearUserDialogPtsHandle) GetWithId() int32 {
	if x != nil {
		return x.WithId
	}
	return 0
}

func (x *ReqClearUserDialogPtsHandle) GetMaxPts() int32 {
	if x != nil {
		return x.MaxPts
	}
	return 0
}

type ReplysClearUserDialogPtsHandle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReplysClearUserDialogPtsHandle) Reset() {
	*x = ReplysClearUserDialogPtsHandle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplysClearUserDialogPtsHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplysClearUserDialogPtsHandle) ProtoMessage() {}

func (x *ReplysClearUserDialogPtsHandle) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplysClearUserDialogPtsHandle.ProtoReflect.Descriptor instead.
func (*ReplysClearUserDialogPtsHandle) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{23}
}

type OtherInfoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"` // 用户ID
	Date   int64  `protobuf:"varint,2,opt,name=Date,proto3" json:"Date,omitempty"`     // 时间戳 time.Now.Unix() 长度10位
	Msg    []byte `protobuf:"bytes,3,opt,name=Msg,proto3" json:"Msg,omitempty"`        // 消息二进制
}

func (x *OtherInfoMsg) Reset() {
	*x = OtherInfoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtherInfoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtherInfoMsg) ProtoMessage() {}

func (x *OtherInfoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtherInfoMsg.ProtoReflect.Descriptor instead.
func (*OtherInfoMsg) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{24}
}

func (x *OtherInfoMsg) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *OtherInfoMsg) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *OtherInfoMsg) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

type PtsHandle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"` // 用户ID
	WithID int32  `protobuf:"varint,6,opt,name=WithID,proto3" json:"WithID,omitempty"`
	MsgID  int32  `protobuf:"varint,7,opt,name=MsgID,proto3" json:"MsgID,omitempty"`
	Pts    int32  `protobuf:"varint,2,opt,name=Pts,proto3" json:"Pts,omitempty"`   // Pts
	Type   int32  `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"` // 二进制类型 0 common 1 action（比如删除消息、更新消息等）
	Msg    []byte `protobuf:"bytes,4,opt,name=Msg,proto3" json:"Msg,omitempty"`    // pts对应消息二进制
	Date   int64  `protobuf:"varint,5,opt,name=Date,proto3" json:"Date,omitempty"` // 創建時間 默认当前时间 在存储消息的时候初始化
}

func (x *PtsHandle) Reset() {
	*x = PtsHandle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PtsHandle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PtsHandle) ProtoMessage() {}

func (x *PtsHandle) ProtoReflect() protoreflect.Message {
	mi := &file_updates_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PtsHandle.ProtoReflect.Descriptor instead.
func (*PtsHandle) Descriptor() ([]byte, []int) {
	return file_updates_proto_rawDescGZIP(), []int{25}
}

func (x *PtsHandle) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PtsHandle) GetWithID() int32 {
	if x != nil {
		return x.WithID
	}
	return 0
}

func (x *PtsHandle) GetMsgID() int32 {
	if x != nil {
		return x.MsgID
	}
	return 0
}

func (x *PtsHandle) GetPts() int32 {
	if x != nil {
		return x.Pts
	}
	return 0
}

func (x *PtsHandle) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PtsHandle) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *PtsHandle) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

var File_updates_proto protoreflect.FileDescriptor

var file_updates_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x4d, 0x0a, 0x1b, 0x52, 0x65, 0x71, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x42,
	0x79, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x06, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x73, 0x22, 0x53, 0x0a, 0x1d, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x42, 0x79, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x50, 0x74, 0x73, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x52, 0x0a, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x22, 0x1a, 0x0a, 0x18,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x4a, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e,
	0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x09, 0x50, 0x74, 0x73, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x22, 0x50, 0x0a, 0x1e, 0x52, 0x65, 0x71, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x42, 0x79,
	0x4d, 0x73, 0x67, 0x49, 0x44, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06,
	0x4d, 0x73, 0x67, 0x49, 0x44, 0x73, 0x22, 0x22, 0x0a, 0x20, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x42, 0x79, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x73, 0x22, 0x5a, 0x0a, 0x0a, 0x52, 0x65,
	0x71, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x41, 0x72, 0x67, 0x73, 0x22, 0x28, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x51, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x12, 0x39, 0x0a, 0x0c, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x0c, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x4d, 0x73, 0x67, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x22, 0x58, 0x0a,
	0x19, 0x52, 0x65, 0x71, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x74,
	0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x12, 0x3b, 0x0a, 0x0d, 0x4f, 0x74,
	0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x0d, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x22, 0x40, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74,
	0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x22, 0x53, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x47, 0x65, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67,
	0x12, 0x3b, 0x0a, 0x0d, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x0d,
	0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x73, 0x22, 0x49, 0x0a,
	0x15, 0x52, 0x65, 0x71, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74, 0x73,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x2e, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x09, 0x50,
	0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x22, 0x55, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x50, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x45, 0x0a, 0x15, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x73, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x04, 0x4d, 0x73, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x61, 0x73, 0x74, 0x50,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x74,
	0x73, 0x22, 0x44, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x74, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x04, 0x50, 0x74, 0x73, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x22, 0x47, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61, 0x78, 0x50, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4d, 0x61, 0x78, 0x50, 0x74, 0x73, 0x22, 0x19, 0x0a, 0x17,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74,
	0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x65, 0x0a, 0x1b, 0x52, 0x65, 0x71, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x50, 0x74, 0x73,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61, 0x78, 0x50, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4d, 0x61, 0x78, 0x50, 0x74, 0x73, 0x22, 0x20,
	0x0a, 0x1e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x22, 0x4c, 0x0a, 0x0c, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x22, 0xbc,
	0x01, 0x0a, 0x09, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4d, 0x73, 0x67,
	0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x50, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x22, 0x1d,
	0x0a, 0x03, 0x69, 0x6e, 0x74, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x32, 0xea, 0x08,
	0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x1a, 0x20, 0x2e, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x12, 0x1c, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x1a,
	0x1e, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22,
	0x00, 0x12, 0x5b, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x1a, 0x21, 0x2e, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x58,
	0x0a, 0x12, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x71, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x1a, 0x20, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74, 0x73,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x18, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x50, 0x74, 0x73, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x24, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x71, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x1a, 0x27, 0x2e, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x42, 0x79, 0x4d, 0x73,
	0x67, 0x49, 0x44, 0x73, 0x12, 0x27, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x71, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x42, 0x79, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x73, 0x1a, 0x29, 0x2e,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x42, 0x79, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x73, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x12, 0x1f, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x1a, 0x21, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x42, 0x79, 0x4d, 0x73, 0x67,
	0x49, 0x44, 0x73, 0x12, 0x24, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x52, 0x65,
	0x71, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x42, 0x79, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x73, 0x1a, 0x26, 0x2e, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x74, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x42, 0x79, 0x4d, 0x73, 0x67, 0x49, 0x44,
	0x73, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x74, 0x68, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x1a, 0x1f, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x16, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x4d, 0x73, 0x67, 0x12, 0x22, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x71, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x1a, 0x24, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x22, 0x00,
	0x12, 0x4f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x4d, 0x73, 0x67, 0x12, 0x1b, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x52, 0x65,
	0x71, 0x47, 0x65, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67,
	0x1a, 0x1d, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x47, 0x65, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x22,
	0x00, 0x12, 0x37, 0x0a, 0x07, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x13, 0x2e, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x1a, 0x15, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x22, 0x00, 0x42, 0x19, 0x5a, 0x17, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_updates_proto_rawDescOnce sync.Once
	file_updates_proto_rawDescData = file_updates_proto_rawDesc
)

func file_updates_proto_rawDescGZIP() []byte {
	file_updates_proto_rawDescOnce.Do(func() {
		file_updates_proto_rawDescData = protoimpl.X.CompressGZIP(file_updates_proto_rawDescData)
	})
	return file_updates_proto_rawDescData
}

var file_updates_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_updates_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_updates_proto_goTypes = []interface{}{
	(PtsHandleInt)(0),                        // 0: updates.PtsHandle.int
	(*ReqGetUserPtsHandleByMsgIDs)(nil),      // 1: updates.ReqGetUserPtsHandleByMsgIDs
	(*ReplyGetUserPtsHandleByMsgIDs)(nil),    // 2: updates.ReplyGetUserPtsHandleByMsgIDs
	(*ReplyUpdateUserPtsHandle)(nil),         // 3: updates.ReplyUpdateUserPtsHandle
	(*ReqUpdateUserPtsHandle)(nil),           // 4: updates.ReqUpdateUserPtsHandle
	(*ReqDeleteUserPtsHandleByMsgIDs)(nil),   // 5: updates.ReqDeleteUserPtsHandleByMsgIDs
	(*ReplyDeleteUserPtsHandleByMsgIDs)(nil), // 6: updates.ReplyDeleteUserPtsHandleByMsgIDs
	(*ReqMonitor)(nil),                       // 7: updates.ReqMonitor
	(*ReplyMonitor)(nil),                     // 8: updates.ReplyMonitor
	(*ReqStoreOtherInfoMsg)(nil),             // 9: updates.ReqStoreOtherInfoMsg
	(*ReplyStoreOtherInfoMsg)(nil),           // 10: updates.ReplyStoreOtherInfoMsg
	(*ReqBatchStoreOtherInfoMsg)(nil),        // 11: updates.ReqBatchStoreOtherInfoMsg
	(*ReplyBatchStoreOtherInfoMsg)(nil),      // 12: updates.ReplyBatchStoreOtherInfoMsg
	(*ReqGetOtherInfoMsg)(nil),               // 13: updates.ReqGetOtherInfoMsg
	(*ReplyGetOtherInfoMsg)(nil),             // 14: updates.ReplyGetOtherInfoMsg
	(*ReqStoreUserPtsHandle)(nil),            // 15: updates.ReqStoreUserPtsHandle
	(*ReplyStoreUserPtsHandle)(nil),          // 16: updates.ReplyStoreUserPtsHandle
	(*ReqGetUserPtsHandle)(nil),              // 17: updates.ReqGetUserPtsHandle
	(*ReplyGetUserPtsHandle)(nil),            // 18: updates.ReplyGetUserPtsHandle
	(*ReqDeleteUserPtsHandle)(nil),           // 19: updates.ReqDeleteUserPtsHandle
	(*ReplyDeleteUserPtsHandle)(nil),         // 20: updates.ReplyDeleteUserPtsHandle
	(*ReqClearUserPtsHandle)(nil),            // 21: updates.ReqClearUserPtsHandle
	(*ReplyClearUserPtsHandle)(nil),          // 22: updates.ReplyClearUserPtsHandle
	(*ReqClearUserDialogPtsHandle)(nil),      // 23: updates.ReqClearUserDialogPtsHandle
	(*ReplysClearUserDialogPtsHandle)(nil),   // 24: updates.ReplysClearUserDialogPtsHandle
	(*OtherInfoMsg)(nil),                     // 25: updates.OtherInfoMsg
	(*PtsHandle)(nil),                        // 26: updates.PtsHandle
}
var file_updates_proto_depIdxs = []int32{
	26, // 0: updates.ReplyGetUserPtsHandleByMsgIDs.PtsHandles:type_name -> updates.PtsHandle
	26, // 1: updates.ReqUpdateUserPtsHandle.PtsHandle:type_name -> updates.PtsHandle
	25, // 2: updates.ReqStoreOtherInfoMsg.OtherInfoMsg:type_name -> updates.OtherInfoMsg
	25, // 3: updates.ReqBatchStoreOtherInfoMsg.OtherInfoMsgs:type_name -> updates.OtherInfoMsg
	25, // 4: updates.ReplyGetOtherInfoMsg.OtherInfoMsgs:type_name -> updates.OtherInfoMsg
	26, // 5: updates.ReqStoreUserPtsHandle.PtsHandle:type_name -> updates.PtsHandle
	15, // 6: updates.UserUpdatesServer.StoreUserPtsHandle:input_type -> updates.ReqStoreUserPtsHandle
	17, // 7: updates.UserUpdatesServer.GetUserPtsHandle:input_type -> updates.ReqGetUserPtsHandle
	19, // 8: updates.UserUpdatesServer.DeleteUserPtsHandle:input_type -> updates.ReqDeleteUserPtsHandle
	21, // 9: updates.UserUpdatesServer.ClearUserPtsHandle:input_type -> updates.ReqClearUserPtsHandle
	23, // 10: updates.UserUpdatesServer.ClearUserDialogPtsHandle:input_type -> updates.ReqClearUserDialogPtsHandle
	5,  // 11: updates.UserUpdatesServer.DeleteUserPtsHandleByMsgIDs:input_type -> updates.ReqDeleteUserPtsHandleByMsgIDs
	4,  // 12: updates.UserUpdatesServer.UpdateUserPtsHandle:input_type -> updates.ReqUpdateUserPtsHandle
	1,  // 13: updates.UserUpdatesServer.GetUserPtsHandleByMsgIDs:input_type -> updates.ReqGetUserPtsHandleByMsgIDs
	9,  // 14: updates.UserUpdatesServer.StoreOtherInfoMsg:input_type -> updates.ReqStoreOtherInfoMsg
	11, // 15: updates.UserUpdatesServer.BatchStoreOtherInfoMsg:input_type -> updates.ReqBatchStoreOtherInfoMsg
	13, // 16: updates.UserUpdatesServer.GetOtherInfoMsg:input_type -> updates.ReqGetOtherInfoMsg
	7,  // 17: updates.UserUpdatesServer.Monitor:input_type -> updates.ReqMonitor
	16, // 18: updates.UserUpdatesServer.StoreUserPtsHandle:output_type -> updates.ReplyStoreUserPtsHandle
	18, // 19: updates.UserUpdatesServer.GetUserPtsHandle:output_type -> updates.ReplyGetUserPtsHandle
	20, // 20: updates.UserUpdatesServer.DeleteUserPtsHandle:output_type -> updates.ReplyDeleteUserPtsHandle
	22, // 21: updates.UserUpdatesServer.ClearUserPtsHandle:output_type -> updates.ReplyClearUserPtsHandle
	24, // 22: updates.UserUpdatesServer.ClearUserDialogPtsHandle:output_type -> updates.ReplysClearUserDialogPtsHandle
	6,  // 23: updates.UserUpdatesServer.DeleteUserPtsHandleByMsgIDs:output_type -> updates.ReplyDeleteUserPtsHandleByMsgIDs
	3,  // 24: updates.UserUpdatesServer.UpdateUserPtsHandle:output_type -> updates.ReplyUpdateUserPtsHandle
	2,  // 25: updates.UserUpdatesServer.GetUserPtsHandleByMsgIDs:output_type -> updates.ReplyGetUserPtsHandleByMsgIDs
	10, // 26: updates.UserUpdatesServer.StoreOtherInfoMsg:output_type -> updates.ReplyStoreOtherInfoMsg
	12, // 27: updates.UserUpdatesServer.BatchStoreOtherInfoMsg:output_type -> updates.ReplyBatchStoreOtherInfoMsg
	14, // 28: updates.UserUpdatesServer.GetOtherInfoMsg:output_type -> updates.ReplyGetOtherInfoMsg
	8,  // 29: updates.UserUpdatesServer.Monitor:output_type -> updates.ReplyMonitor
	18, // [18:30] is the sub-list for method output_type
	6,  // [6:18] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_updates_proto_init() }
func file_updates_proto_init() {
	if File_updates_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_updates_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetUserPtsHandleByMsgIDs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyGetUserPtsHandleByMsgIDs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyUpdateUserPtsHandle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateUserPtsHandle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDeleteUserPtsHandleByMsgIDs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyDeleteUserPtsHandleByMsgIDs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqMonitor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyMonitor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqStoreOtherInfoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyStoreOtherInfoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBatchStoreOtherInfoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyBatchStoreOtherInfoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetOtherInfoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyGetOtherInfoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqStoreUserPtsHandle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyStoreUserPtsHandle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetUserPtsHandle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyGetUserPtsHandle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDeleteUserPtsHandle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyDeleteUserPtsHandle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqClearUserPtsHandle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyClearUserPtsHandle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqClearUserDialogPtsHandle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplysClearUserDialogPtsHandle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtherInfoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PtsHandle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_updates_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_updates_proto_goTypes,
		DependencyIndexes: file_updates_proto_depIdxs,
		EnumInfos:         file_updates_proto_enumTypes,
		MessageInfos:      file_updates_proto_msgTypes,
	}.Build()
	File_updates_proto = out.File
	file_updates_proto_rawDesc = nil
	file_updates_proto_goTypes = nil
	file_updates_proto_depIdxs = nil
}
