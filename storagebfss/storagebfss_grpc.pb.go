// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: storagebfss.proto

package storagebfss

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// FileStorageBFSSClient is the client API for FileStorageBFSS service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FileStorageBFSSClient interface {
	// 获取文件下载信息
	BFSSGetFilePt(ctx context.Context, in *BFSSGetFilePtReq, opts ...grpc.CallOption) (*BFSSGetFilePtResp, error)
	// BFSS上传小文件
	BFSSSaveFilePartPt(ctx context.Context, in *BFSSSaveFilePartPtReq, opts ...grpc.CallOption) (*BFSSSaveFilePartPtResp, error)
	// BFSS上传大文件
	BFSSSaveBigFilePartPt(ctx context.Context, in *BFSSSaveBigFilePartPtReq, opts ...grpc.CallOption) (*BFSSSaveBigFilePartPtResp, error)
	// 上传BFSS文件完成通知
	BFSSSaveFileComplete(ctx context.Context, in *BFSSSaveFileCompleteReq, opts ...grpc.CallOption) (*BFSSSaveFileCompleteResp, error)
	// 上传BFSS文件完成通知
	BFSSResetObjectId(ctx context.Context, in *BFSSResetObjectIdReq, opts ...grpc.CallOption) (*BFSSResetObjectIdResp, error)
}

type fileStorageBFSSClient struct {
	cc grpc.ClientConnInterface
}

func NewFileStorageBFSSClient(cc grpc.ClientConnInterface) FileStorageBFSSClient {
	return &fileStorageBFSSClient{cc}
}

func (c *fileStorageBFSSClient) BFSSGetFilePt(ctx context.Context, in *BFSSGetFilePtReq, opts ...grpc.CallOption) (*BFSSGetFilePtResp, error) {
	out := new(BFSSGetFilePtResp)
	err := c.cc.Invoke(ctx, "/storagebfss.FileStorageBFSS/BFSSGetFilePt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileStorageBFSSClient) BFSSSaveFilePartPt(ctx context.Context, in *BFSSSaveFilePartPtReq, opts ...grpc.CallOption) (*BFSSSaveFilePartPtResp, error) {
	out := new(BFSSSaveFilePartPtResp)
	err := c.cc.Invoke(ctx, "/storagebfss.FileStorageBFSS/BFSSSaveFilePartPt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileStorageBFSSClient) BFSSSaveBigFilePartPt(ctx context.Context, in *BFSSSaveBigFilePartPtReq, opts ...grpc.CallOption) (*BFSSSaveBigFilePartPtResp, error) {
	out := new(BFSSSaveBigFilePartPtResp)
	err := c.cc.Invoke(ctx, "/storagebfss.FileStorageBFSS/BFSSSaveBigFilePartPt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileStorageBFSSClient) BFSSSaveFileComplete(ctx context.Context, in *BFSSSaveFileCompleteReq, opts ...grpc.CallOption) (*BFSSSaveFileCompleteResp, error) {
	out := new(BFSSSaveFileCompleteResp)
	err := c.cc.Invoke(ctx, "/storagebfss.FileStorageBFSS/BFSSSaveFileComplete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileStorageBFSSClient) BFSSResetObjectId(ctx context.Context, in *BFSSResetObjectIdReq, opts ...grpc.CallOption) (*BFSSResetObjectIdResp, error) {
	out := new(BFSSResetObjectIdResp)
	err := c.cc.Invoke(ctx, "/storagebfss.FileStorageBFSS/BFSSResetObjectId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileStorageBFSSServer is the server API for FileStorageBFSS service.
// All implementations must embed UnimplementedFileStorageBFSSServer
// for forward compatibility
type FileStorageBFSSServer interface {
	// 获取文件下载信息
	BFSSGetFilePt(context.Context, *BFSSGetFilePtReq) (*BFSSGetFilePtResp, error)
	// BFSS上传小文件
	BFSSSaveFilePartPt(context.Context, *BFSSSaveFilePartPtReq) (*BFSSSaveFilePartPtResp, error)
	// BFSS上传大文件
	BFSSSaveBigFilePartPt(context.Context, *BFSSSaveBigFilePartPtReq) (*BFSSSaveBigFilePartPtResp, error)
	// 上传BFSS文件完成通知
	BFSSSaveFileComplete(context.Context, *BFSSSaveFileCompleteReq) (*BFSSSaveFileCompleteResp, error)
	// 上传BFSS文件完成通知
	BFSSResetObjectId(context.Context, *BFSSResetObjectIdReq) (*BFSSResetObjectIdResp, error)
	mustEmbedUnimplementedFileStorageBFSSServer()
}

// UnimplementedFileStorageBFSSServer must be embedded to have forward compatible implementations.
type UnimplementedFileStorageBFSSServer struct {
}

func (UnimplementedFileStorageBFSSServer) BFSSGetFilePt(context.Context, *BFSSGetFilePtReq) (*BFSSGetFilePtResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BFSSGetFilePt not implemented")
}
func (UnimplementedFileStorageBFSSServer) BFSSSaveFilePartPt(context.Context, *BFSSSaveFilePartPtReq) (*BFSSSaveFilePartPtResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BFSSSaveFilePartPt not implemented")
}
func (UnimplementedFileStorageBFSSServer) BFSSSaveBigFilePartPt(context.Context, *BFSSSaveBigFilePartPtReq) (*BFSSSaveBigFilePartPtResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BFSSSaveBigFilePartPt not implemented")
}
func (UnimplementedFileStorageBFSSServer) BFSSSaveFileComplete(context.Context, *BFSSSaveFileCompleteReq) (*BFSSSaveFileCompleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BFSSSaveFileComplete not implemented")
}
func (UnimplementedFileStorageBFSSServer) BFSSResetObjectId(context.Context, *BFSSResetObjectIdReq) (*BFSSResetObjectIdResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BFSSResetObjectId not implemented")
}
func (UnimplementedFileStorageBFSSServer) mustEmbedUnimplementedFileStorageBFSSServer() {}

// UnsafeFileStorageBFSSServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FileStorageBFSSServer will
// result in compilation errors.
type UnsafeFileStorageBFSSServer interface {
	mustEmbedUnimplementedFileStorageBFSSServer()
}

func RegisterFileStorageBFSSServer(s grpc.ServiceRegistrar, srv FileStorageBFSSServer) {
	s.RegisterService(&FileStorageBFSS_ServiceDesc, srv)
}

func _FileStorageBFSS_BFSSGetFilePt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BFSSGetFilePtReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileStorageBFSSServer).BFSSGetFilePt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storagebfss.FileStorageBFSS/BFSSGetFilePt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileStorageBFSSServer).BFSSGetFilePt(ctx, req.(*BFSSGetFilePtReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileStorageBFSS_BFSSSaveFilePartPt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BFSSSaveFilePartPtReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileStorageBFSSServer).BFSSSaveFilePartPt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storagebfss.FileStorageBFSS/BFSSSaveFilePartPt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileStorageBFSSServer).BFSSSaveFilePartPt(ctx, req.(*BFSSSaveFilePartPtReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileStorageBFSS_BFSSSaveBigFilePartPt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BFSSSaveBigFilePartPtReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileStorageBFSSServer).BFSSSaveBigFilePartPt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storagebfss.FileStorageBFSS/BFSSSaveBigFilePartPt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileStorageBFSSServer).BFSSSaveBigFilePartPt(ctx, req.(*BFSSSaveBigFilePartPtReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileStorageBFSS_BFSSSaveFileComplete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BFSSSaveFileCompleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileStorageBFSSServer).BFSSSaveFileComplete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storagebfss.FileStorageBFSS/BFSSSaveFileComplete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileStorageBFSSServer).BFSSSaveFileComplete(ctx, req.(*BFSSSaveFileCompleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileStorageBFSS_BFSSResetObjectId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BFSSResetObjectIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileStorageBFSSServer).BFSSResetObjectId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storagebfss.FileStorageBFSS/BFSSResetObjectId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileStorageBFSSServer).BFSSResetObjectId(ctx, req.(*BFSSResetObjectIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

// FileStorageBFSS_ServiceDesc is the grpc.ServiceDesc for FileStorageBFSS service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FileStorageBFSS_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "storagebfss.FileStorageBFSS",
	HandlerType: (*FileStorageBFSSServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BFSSGetFilePt",
			Handler:    _FileStorageBFSS_BFSSGetFilePt_Handler,
		},
		{
			MethodName: "BFSSSaveFilePartPt",
			Handler:    _FileStorageBFSS_BFSSSaveFilePartPt_Handler,
		},
		{
			MethodName: "BFSSSaveBigFilePartPt",
			Handler:    _FileStorageBFSS_BFSSSaveBigFilePartPt_Handler,
		},
		{
			MethodName: "BFSSSaveFileComplete",
			Handler:    _FileStorageBFSS_BFSSSaveFileComplete_Handler,
		},
		{
			MethodName: "BFSSResetObjectId",
			Handler:    _FileStorageBFSS_BFSSResetObjectId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "storagebfss.proto",
}
