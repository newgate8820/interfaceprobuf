//
//存储文件相关接口定义
//作者：Ligl
//日期：2017-06-20
//版本：1.0
//修改日期：
//修改日志：
//Date                  Desc
//-----------------------------------------------------
//2017-08-16            DC操作存储对象有些客户端没有携带访问哈希，约定没有访问哈希及为零时不做鉴权处理
//protoc --gogofast_out=plugins=grpc:. gitlab.chatserver.im/interfaceprobuf/storageservice/.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: storage_proto.proto

package storageservice

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ----------------------------------------------------
// 服务上传下载限制请求
type MsgServiceLimitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reserved uint32 `protobuf:"varint,1,opt,name=reserved,proto3" json:"reserved,omitempty"` // 保留用
}

func (x *MsgServiceLimitReq) Reset() {
	*x = MsgServiceLimitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgServiceLimitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgServiceLimitReq) ProtoMessage() {}

func (x *MsgServiceLimitReq) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgServiceLimitReq.ProtoReflect.Descriptor instead.
func (*MsgServiceLimitReq) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{0}
}

func (x *MsgServiceLimitReq) GetReserved() uint32 {
	if x != nil {
		return x.Reserved
	}
	return 0
}

// 服务上传下载限制响应(单位：Byte)
type MsgServiceLimitResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usfsl  uint32 `protobuf:"varint,1,opt,name=usfsl,proto3" json:"usfsl,omitempty"`   // 上传小文件大小限制，usfsl=>upload small file size limit
	Ubfssl uint32 `protobuf:"varint,2,opt,name=ubfssl,proto3" json:"ubfssl,omitempty"` // 上传大文件分片大小限制，ubfsl=>upload big file slice size limit
	Dssl   uint32 `protobuf:"varint,3,opt,name=dssl,proto3" json:"dssl,omitempty"`     // 下载分片大小限制，usfsl=>download slice size limit
}

func (x *MsgServiceLimitResp) Reset() {
	*x = MsgServiceLimitResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgServiceLimitResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgServiceLimitResp) ProtoMessage() {}

func (x *MsgServiceLimitResp) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgServiceLimitResp.ProtoReflect.Descriptor instead.
func (*MsgServiceLimitResp) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{1}
}

func (x *MsgServiceLimitResp) GetUsfsl() uint32 {
	if x != nil {
		return x.Usfsl
	}
	return 0
}

func (x *MsgServiceLimitResp) GetUbfssl() uint32 {
	if x != nil {
		return x.Ubfssl
	}
	return 0
}

func (x *MsgServiceLimitResp) GetDssl() uint32 {
	if x != nil {
		return x.Dssl
	}
	return 0
}

// 查询文件是否存在请求（仅用于非分片上传文件时）
type MsgQueryFileIsExistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileHash string `protobuf:"bytes,1,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"` // 文件全量Hash
}

func (x *MsgQueryFileIsExistReq) Reset() {
	*x = MsgQueryFileIsExistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgQueryFileIsExistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgQueryFileIsExistReq) ProtoMessage() {}

func (x *MsgQueryFileIsExistReq) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgQueryFileIsExistReq.ProtoReflect.Descriptor instead.
func (*MsgQueryFileIsExistReq) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{2}
}

func (x *MsgQueryFileIsExistReq) GetFileHash() string {
	if x != nil {
		return x.FileHash
	}
	return ""
}

// 查询文件是否存在响应
type MsgQueryFileIsExistResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Para       *FileHashPara `protobuf:"bytes,1,opt,name=para,proto3" json:"para,omitempty"`                                // Ref, 保留可选用
	Fid        uint64        `protobuf:"varint,2,opt,name=fid,proto3" json:"fid,omitempty"`                                 // 存储服务分配存储文件的唯一标识，注意：如果逻辑层需要直接引用（无需重复上传）此对象，需要调用AddRefCount接口
	AccessHash uint64        `protobuf:"varint,3,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"` // 存储之后的访问hash
	IsExist    bool          `protobuf:"varint,4,opt,name=is_exist,json=isExist,proto3" json:"is_exist,omitempty"`          // 是否存在，false：不存在；true:存在
}

func (x *MsgQueryFileIsExistResp) Reset() {
	*x = MsgQueryFileIsExistResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgQueryFileIsExistResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgQueryFileIsExistResp) ProtoMessage() {}

func (x *MsgQueryFileIsExistResp) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgQueryFileIsExistResp.ProtoReflect.Descriptor instead.
func (*MsgQueryFileIsExistResp) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{3}
}

func (x *MsgQueryFileIsExistResp) GetPara() *FileHashPara {
	if x != nil {
		return x.Para
	}
	return nil
}

func (x *MsgQueryFileIsExistResp) GetFid() uint64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *MsgQueryFileIsExistResp) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

func (x *MsgQueryFileIsExistResp) GetIsExist() bool {
	if x != nil {
		return x.IsExist
	}
	return false
}

// 申请fid请求（仅用于分片上传文件时）
type MsgApplyFidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName  string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`     // 上传文件的文件名
	PartTotal uint32 `protobuf:"varint,2,opt,name=part_total,json=partTotal,proto3" json:"part_total,omitempty"` // 文件片总数
	Ttl       uint32 `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`                              // 文件存储周期（秒）, 为0时表示永久存储（可通过接口修改）
}

func (x *MsgApplyFidReq) Reset() {
	*x = MsgApplyFidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgApplyFidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgApplyFidReq) ProtoMessage() {}

func (x *MsgApplyFidReq) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgApplyFidReq.ProtoReflect.Descriptor instead.
func (*MsgApplyFidReq) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{4}
}

func (x *MsgApplyFidReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *MsgApplyFidReq) GetPartTotal() uint32 {
	if x != nil {
		return x.PartTotal
	}
	return 0
}

func (x *MsgApplyFidReq) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

// 申请fid响应参数
type ApplyFidRespPara struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"` // 上传文件的文件名
}

func (x *ApplyFidRespPara) Reset() {
	*x = ApplyFidRespPara{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyFidRespPara) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyFidRespPara) ProtoMessage() {}

func (x *ApplyFidRespPara) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyFidRespPara.ProtoReflect.Descriptor instead.
func (*ApplyFidRespPara) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{5}
}

func (x *ApplyFidRespPara) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

// 申请fid响应
type MsgApplyFidResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Para       *ApplyFidRespPara `protobuf:"bytes,1,opt,name=para,proto3" json:"para,omitempty"`                                // Ref, 保留选用
	Fid        uint64            `protobuf:"varint,2,opt,name=fid,proto3" json:"fid,omitempty"`                                 // 存储服务分配存储文件的唯一标识
	AccessHash uint64            `protobuf:"varint,3,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"` // 存储之后的访问hash
}

func (x *MsgApplyFidResp) Reset() {
	*x = MsgApplyFidResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgApplyFidResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgApplyFidResp) ProtoMessage() {}

func (x *MsgApplyFidResp) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgApplyFidResp.ProtoReflect.Descriptor instead.
func (*MsgApplyFidResp) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{6}
}

func (x *MsgApplyFidResp) GetPara() *ApplyFidRespPara {
	if x != nil {
		return x.Para
	}
	return nil
}

func (x *MsgApplyFidResp) GetFid() uint64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *MsgApplyFidResp) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

// 上传请求参数1（仅用于分片上传文件时）
type UploadReqPara1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid      uint64 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`                           // 之前申请的Fid
	PartId   uint32 `protobuf:"varint,2,opt,name=part_id,json=partId,proto3" json:"part_id,omitempty"`       // 文件片ID，备注：从0开始分配
	PartSize uint32 `protobuf:"varint,3,opt,name=part_size,json=partSize,proto3" json:"part_size,omitempty"` // 文件片大小
}

func (x *UploadReqPara1) Reset() {
	*x = UploadReqPara1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadReqPara1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadReqPara1) ProtoMessage() {}

func (x *UploadReqPara1) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadReqPara1.ProtoReflect.Descriptor instead.
func (*UploadReqPara1) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{7}
}

func (x *UploadReqPara1) GetFid() uint64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *UploadReqPara1) GetPartId() uint32 {
	if x != nil {
		return x.PartId
	}
	return 0
}

func (x *UploadReqPara1) GetPartSize() uint32 {
	if x != nil {
		return x.PartSize
	}
	return 0
}

// 上传请求参数2（仅用于非分片上传文件时）
type UploadReqPara2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`  // 上传文件的文件名
	FileSize uint32 `protobuf:"varint,2,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"` // 文件大小
	FileHash string `protobuf:"bytes,3,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`  // 文件Hash SHA-256
	Ttl      uint32 `protobuf:"varint,4,opt,name=ttl,proto3" json:"ttl,omitempty"`                           // 文件存储周期（秒）, 为0时表示永久存储（可通过接口修改）
}

func (x *UploadReqPara2) Reset() {
	*x = UploadReqPara2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadReqPara2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadReqPara2) ProtoMessage() {}

func (x *UploadReqPara2) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadReqPara2.ProtoReflect.Descriptor instead.
func (*UploadReqPara2) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{8}
}

func (x *UploadReqPara2) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadReqPara2) GetFileSize() uint32 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *UploadReqPara2) GetFileHash() string {
	if x != nil {
		return x.FileHash
	}
	return ""
}

func (x *UploadReqPara2) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

// 上传文件请求
type MsgUploadFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Para1 *UploadReqPara1 `protobuf:"bytes,1,opt,name=para1,proto3" json:"para1,omitempty"` // Ref
	Para2 *UploadReqPara2 `protobuf:"bytes,2,opt,name=para2,proto3" json:"para2,omitempty"` // Ref
	Data  []byte          `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`   // 数据
}

func (x *MsgUploadFileReq) Reset() {
	*x = MsgUploadFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUploadFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUploadFileReq) ProtoMessage() {}

func (x *MsgUploadFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUploadFileReq.ProtoReflect.Descriptor instead.
func (*MsgUploadFileReq) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{9}
}

func (x *MsgUploadFileReq) GetPara1() *UploadReqPara1 {
	if x != nil {
		return x.Para1
	}
	return nil
}

func (x *MsgUploadFileReq) GetPara2() *UploadReqPara2 {
	if x != nil {
		return x.Para2
	}
	return nil
}

func (x *MsgUploadFileReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 文件上传响应参数1（仅用于分片上传文件时）
type FileUploadRespPara struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid    uint64 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`                     // 存储服务分配存储文件的唯一标识
	PartId uint32 `protobuf:"varint,2,opt,name=part_id,json=partId,proto3" json:"part_id,omitempty"` // 文件片ID
}

func (x *FileUploadRespPara) Reset() {
	*x = FileUploadRespPara{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUploadRespPara) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadRespPara) ProtoMessage() {}

func (x *FileUploadRespPara) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadRespPara.ProtoReflect.Descriptor instead.
func (*FileUploadRespPara) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{10}
}

func (x *FileUploadRespPara) GetFid() uint64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *FileUploadRespPara) GetPartId() uint32 {
	if x != nil {
		return x.PartId
	}
	return 0
}

// 上传文件响应
type MsgUploadFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result     ERpcResultCode      `protobuf:"varint,1,opt,name=result,proto3,enum=storageservice.ERpcResultCode" json:"result,omitempty"` // 结果码
	Para1      *FileUploadRespPara `protobuf:"bytes,2,opt,name=para1,proto3" json:"para1,omitempty"`                                       // Ref
	Para2      *FidPara            `protobuf:"bytes,3,opt,name=para2,proto3" json:"para2,omitempty"`                                       // Ref，仅用于非分片文件上传
	AccessHash uint64              `protobuf:"varint,4,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"`          // 仅用于非分片文件上传存储之后的访问hash
}

func (x *MsgUploadFileResp) Reset() {
	*x = MsgUploadFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUploadFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUploadFileResp) ProtoMessage() {}

func (x *MsgUploadFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUploadFileResp.ProtoReflect.Descriptor instead.
func (*MsgUploadFileResp) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{11}
}

func (x *MsgUploadFileResp) GetResult() ERpcResultCode {
	if x != nil {
		return x.Result
	}
	return ERpcResultCode_RRC_OK
}

func (x *MsgUploadFileResp) GetPara1() *FileUploadRespPara {
	if x != nil {
		return x.Para1
	}
	return nil
}

func (x *MsgUploadFileResp) GetPara2() *FidPara {
	if x != nil {
		return x.Para2
	}
	return nil
}

func (x *MsgUploadFileResp) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

// 下载文件请求
type MsgDownloadFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid           uint64 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`                                 // 存储服务分配存储文件的唯一标识
	AccessHash    uint64 `protobuf:"varint,2,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"` // 访问hash
	Offset        uint32 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`                           // 起始偏移，从0开始
	Length        uint32 `protobuf:"varint,4,opt,name=length,proto3" json:"length,omitempty"`                           // 长度
	Reserve       uint64 `protobuf:"varint,5,opt,name=reserve,proto3" json:"reserve,omitempty"`
	ReserveString string `protobuf:"bytes,6,opt,name=reserve_string,json=reserveString,proto3" json:"reserve_string,omitempty"`
}

func (x *MsgDownloadFileReq) Reset() {
	*x = MsgDownloadFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDownloadFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDownloadFileReq) ProtoMessage() {}

func (x *MsgDownloadFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDownloadFileReq.ProtoReflect.Descriptor instead.
func (*MsgDownloadFileReq) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{12}
}

func (x *MsgDownloadFileReq) GetFid() uint64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *MsgDownloadFileReq) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

func (x *MsgDownloadFileReq) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *MsgDownloadFileReq) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *MsgDownloadFileReq) GetReserve() uint64 {
	if x != nil {
		return x.Reserve
	}
	return 0
}

func (x *MsgDownloadFileReq) GetReserveString() string {
	if x != nil {
		return x.ReserveString
	}
	return ""
}

// 下载文件响应参数1
type DownloadFileRespPara1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid      uint64 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`                          // 存储服务分配存储文件的唯一标识
	Offset   uint32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`                    // 起始偏移，从0开始
	FileName string `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"` // 上传文件时的文件名
}

func (x *DownloadFileRespPara1) Reset() {
	*x = DownloadFileRespPara1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileRespPara1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileRespPara1) ProtoMessage() {}

func (x *DownloadFileRespPara1) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileRespPara1.ProtoReflect.Descriptor instead.
func (*DownloadFileRespPara1) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{13}
}

func (x *DownloadFileRespPara1) GetFid() uint64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *DownloadFileRespPara1) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *DownloadFileRespPara1) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

// 下载文件响应参数2
type DownloadFileRespPara2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length uint32 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"` // 长度
	Data   []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`      // 数据
}

func (x *DownloadFileRespPara2) Reset() {
	*x = DownloadFileRespPara2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileRespPara2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileRespPara2) ProtoMessage() {}

func (x *DownloadFileRespPara2) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileRespPara2.ProtoReflect.Descriptor instead.
func (*DownloadFileRespPara2) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{14}
}

func (x *DownloadFileRespPara2) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *DownloadFileRespPara2) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 下载文件响应
type MsgDownloadFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result ERpcResultCode         `protobuf:"varint,1,opt,name=result,proto3,enum=storageservice.ERpcResultCode" json:"result,omitempty"` // 结果码
	Para1  *DownloadFileRespPara1 `protobuf:"bytes,2,opt,name=para1,proto3" json:"para1,omitempty"`                                       // Ref, 保留选用，当result = RRC_OK 且选用时有效
	Para2  *DownloadFileRespPara2 `protobuf:"bytes,3,opt,name=para2,proto3" json:"para2,omitempty"`                                       // Ref，当result = RRC_OK有效
}

func (x *MsgDownloadFileResp) Reset() {
	*x = MsgDownloadFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDownloadFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDownloadFileResp) ProtoMessage() {}

func (x *MsgDownloadFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDownloadFileResp.ProtoReflect.Descriptor instead.
func (*MsgDownloadFileResp) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{15}
}

func (x *MsgDownloadFileResp) GetResult() ERpcResultCode {
	if x != nil {
		return x.Result
	}
	return ERpcResultCode_RRC_OK
}

func (x *MsgDownloadFileResp) GetPara1() *DownloadFileRespPara1 {
	if x != nil {
		return x.Para1
	}
	return nil
}

func (x *MsgDownloadFileResp) GetPara2() *DownloadFileRespPara2 {
	if x != nil {
		return x.Para2
	}
	return nil
}

// 删除文件请求
type MsgDeleteFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid        uint64 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`                                 // 存储服务分配存储文件的唯一标识
	AccessHash uint64 `protobuf:"varint,2,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"` // 访问hash
	RefNum     uint32 `protobuf:"varint,3,opt,name=ref_num,json=refNum,proto3" json:"ref_num,omitempty"`             // 引用数
}

func (x *MsgDeleteFileReq) Reset() {
	*x = MsgDeleteFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteFileReq) ProtoMessage() {}

func (x *MsgDeleteFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteFileReq.ProtoReflect.Descriptor instead.
func (*MsgDeleteFileReq) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{16}
}

func (x *MsgDeleteFileReq) GetFid() uint64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *MsgDeleteFileReq) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

func (x *MsgDeleteFileReq) GetRefNum() uint32 {
	if x != nil {
		return x.RefNum
	}
	return 0
}

// 删除文件响应
type MsgDeleteFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Para   *FidPara       `protobuf:"bytes,1,opt,name=para,proto3" json:"para,omitempty"`                                         // Ref, 保留选用
	Result ERpcResultCode `protobuf:"varint,2,opt,name=result,proto3,enum=storageservice.ERpcResultCode" json:"result,omitempty"` // 结果码
}

func (x *MsgDeleteFileResp) Reset() {
	*x = MsgDeleteFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteFileResp) ProtoMessage() {}

func (x *MsgDeleteFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteFileResp.ProtoReflect.Descriptor instead.
func (*MsgDeleteFileResp) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{17}
}

func (x *MsgDeleteFileResp) GetPara() *FidPara {
	if x != nil {
		return x.Para
	}
	return nil
}

func (x *MsgDeleteFileResp) GetResult() ERpcResultCode {
	if x != nil {
		return x.Result
	}
	return ERpcResultCode_RRC_OK
}

// 取消文件分片上传请求（仅用于正准备或正在分片上传的文件场景）
type MsgCancelUploadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid        uint64 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`                                 // 存储服务分配存储文件的唯一标识
	AccessHash uint64 `protobuf:"varint,2,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"` // 访问hash
}

func (x *MsgCancelUploadReq) Reset() {
	*x = MsgCancelUploadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCancelUploadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCancelUploadReq) ProtoMessage() {}

func (x *MsgCancelUploadReq) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCancelUploadReq.ProtoReflect.Descriptor instead.
func (*MsgCancelUploadReq) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{18}
}

func (x *MsgCancelUploadReq) GetFid() uint64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *MsgCancelUploadReq) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

// 取消文件分片上传响应
type MsgCancelUploadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Para   *FidPara       `protobuf:"bytes,1,opt,name=para,proto3" json:"para,omitempty"`                                         // Ref, 保留选用
	Result ERpcResultCode `protobuf:"varint,2,opt,name=result,proto3,enum=storageservice.ERpcResultCode" json:"result,omitempty"` // 结果码
}

func (x *MsgCancelUploadResp) Reset() {
	*x = MsgCancelUploadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCancelUploadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCancelUploadResp) ProtoMessage() {}

func (x *MsgCancelUploadResp) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCancelUploadResp.ProtoReflect.Descriptor instead.
func (*MsgCancelUploadResp) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{19}
}

func (x *MsgCancelUploadResp) GetPara() *FidPara {
	if x != nil {
		return x.Para
	}
	return nil
}

func (x *MsgCancelUploadResp) GetResult() ERpcResultCode {
	if x != nil {
		return x.Result
	}
	return ERpcResultCode_RRC_OK
}

// 增加文件引用计数请求
type MsgAddRefCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid        uint64 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`                                 // 存储服务分配存储文件的唯一标识
	AccessHash uint64 `protobuf:"varint,2,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"` // 访问hash
	RefNum     uint32 `protobuf:"varint,3,opt,name=ref_num,json=refNum,proto3" json:"ref_num,omitempty"`             // 引用数
}

func (x *MsgAddRefCountReq) Reset() {
	*x = MsgAddRefCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddRefCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddRefCountReq) ProtoMessage() {}

func (x *MsgAddRefCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddRefCountReq.ProtoReflect.Descriptor instead.
func (*MsgAddRefCountReq) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{20}
}

func (x *MsgAddRefCountReq) GetFid() uint64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *MsgAddRefCountReq) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

func (x *MsgAddRefCountReq) GetRefNum() uint32 {
	if x != nil {
		return x.RefNum
	}
	return 0
}

// 增加文件引用计数响应
type MsgAddRefCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Para   *FidPara       `protobuf:"bytes,1,opt,name=para,proto3" json:"para,omitempty"`                                         // Ref, 保留选用
	Result ERpcResultCode `protobuf:"varint,2,opt,name=result,proto3,enum=storageservice.ERpcResultCode" json:"result,omitempty"` // 结果码
}

func (x *MsgAddRefCountResp) Reset() {
	*x = MsgAddRefCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddRefCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddRefCountResp) ProtoMessage() {}

func (x *MsgAddRefCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddRefCountResp.ProtoReflect.Descriptor instead.
func (*MsgAddRefCountResp) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{21}
}

func (x *MsgAddRefCountResp) GetPara() *FidPara {
	if x != nil {
		return x.Para
	}
	return nil
}

func (x *MsgAddRefCountResp) GetResult() ERpcResultCode {
	if x != nil {
		return x.Result
	}
	return ERpcResultCode_RRC_OK
}

// 修改fid的TTL请求
type MsgModifyTTLReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid        uint64 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`                                 // 存储服务分配存储文件的唯一标识
	AccessHash uint64 `protobuf:"varint,2,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"` // 访问hash
	Ttl        uint32 `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`                                 // 文件存储周期（秒）, 为0时表示永久存储（可通过接口修改）
}

func (x *MsgModifyTTLReq) Reset() {
	*x = MsgModifyTTLReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgModifyTTLReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgModifyTTLReq) ProtoMessage() {}

func (x *MsgModifyTTLReq) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgModifyTTLReq.ProtoReflect.Descriptor instead.
func (*MsgModifyTTLReq) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{22}
}

func (x *MsgModifyTTLReq) GetFid() uint64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *MsgModifyTTLReq) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

func (x *MsgModifyTTLReq) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

// 修改fid的TTL响应
type MsgModifyTTLResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Para   *FidPara       `protobuf:"bytes,1,opt,name=para,proto3" json:"para,omitempty"`                                         // Ref, 保留选用
	Result ERpcResultCode `protobuf:"varint,2,opt,name=result,proto3,enum=storageservice.ERpcResultCode" json:"result,omitempty"` // 结果码
}

func (x *MsgModifyTTLResp) Reset() {
	*x = MsgModifyTTLResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgModifyTTLResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgModifyTTLResp) ProtoMessage() {}

func (x *MsgModifyTTLResp) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgModifyTTLResp.ProtoReflect.Descriptor instead.
func (*MsgModifyTTLResp) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{23}
}

func (x *MsgModifyTTLResp) GetPara() *FidPara {
	if x != nil {
		return x.Para
	}
	return nil
}

func (x *MsgModifyTTLResp) GetResult() ERpcResultCode {
	if x != nil {
		return x.Result
	}
	return ERpcResultCode_RRC_OK
}

// 查询对象信息请求
type MsgQueryObjInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid uint64 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"` // 存储服务分配存储文件的唯一标识
}

func (x *MsgQueryObjInfoReq) Reset() {
	*x = MsgQueryObjInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgQueryObjInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgQueryObjInfoReq) ProtoMessage() {}

func (x *MsgQueryObjInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgQueryObjInfoReq.ProtoReflect.Descriptor instead.
func (*MsgQueryObjInfoReq) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{24}
}

func (x *MsgQueryObjInfoReq) GetFid() uint64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

// 查询对象信息响应参数
type QueryObjInfoRespPara struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                // 文件名
	Size       uint64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`                               // 文件大小（Byte）
	AccessHash uint64 `protobuf:"varint,3,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"` // 访问hash，仅针对机器人服务返回处理
}

func (x *QueryObjInfoRespPara) Reset() {
	*x = QueryObjInfoRespPara{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryObjInfoRespPara) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryObjInfoRespPara) ProtoMessage() {}

func (x *QueryObjInfoRespPara) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryObjInfoRespPara.ProtoReflect.Descriptor instead.
func (*QueryObjInfoRespPara) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{25}
}

func (x *QueryObjInfoRespPara) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryObjInfoRespPara) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *QueryObjInfoRespPara) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

// 查询对象信息响应
type MsgQueryObjInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Para   *QueryObjInfoRespPara `protobuf:"bytes,1,opt,name=para,proto3" json:"para,omitempty"`                                         // Ref
	Result ERpcResultCode        `protobuf:"varint,2,opt,name=result,proto3,enum=storageservice.ERpcResultCode" json:"result,omitempty"` // 结果码
}

func (x *MsgQueryObjInfoResp) Reset() {
	*x = MsgQueryObjInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgQueryObjInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgQueryObjInfoResp) ProtoMessage() {}

func (x *MsgQueryObjInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgQueryObjInfoResp.ProtoReflect.Descriptor instead.
func (*MsgQueryObjInfoResp) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{26}
}

func (x *MsgQueryObjInfoResp) GetPara() *QueryObjInfoRespPara {
	if x != nil {
		return x.Para
	}
	return nil
}

func (x *MsgQueryObjInfoResp) GetResult() ERpcResultCode {
	if x != nil {
		return x.Result
	}
	return ERpcResultCode_RRC_OK
}

// 网关上传文件请求
type MsgFilePartsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyid     uint64 `protobuf:"varint,1,opt,name=keyid,proto3" json:"keyid,omitempty"`                          // Ref 消息协议
	Fileid    int64  `protobuf:"varint,2,opt,name=fileid,proto3" json:"fileid,omitempty"`                        // Ref 消息协议
	PartId    uint32 `protobuf:"varint,3,opt,name=part_id,json=partId,proto3" json:"part_id,omitempty"`          // 文件片ID，备注：从0开始分配
	FileType  uint32 `protobuf:"varint,4,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`    // Ref 消息协议 1 small 2: big
	PartTotal uint32 `protobuf:"varint,5,opt,name=part_total,json=partTotal,proto3" json:"part_total,omitempty"` // file_type为2时有效，大文件片总数，小文件没有
	Data      []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`                             // 数据
}

func (x *MsgFilePartsReq) Reset() {
	*x = MsgFilePartsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgFilePartsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgFilePartsReq) ProtoMessage() {}

func (x *MsgFilePartsReq) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgFilePartsReq.ProtoReflect.Descriptor instead.
func (*MsgFilePartsReq) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{27}
}

func (x *MsgFilePartsReq) GetKeyid() uint64 {
	if x != nil {
		return x.Keyid
	}
	return 0
}

func (x *MsgFilePartsReq) GetFileid() int64 {
	if x != nil {
		return x.Fileid
	}
	return 0
}

func (x *MsgFilePartsReq) GetPartId() uint32 {
	if x != nil {
		return x.PartId
	}
	return 0
}

func (x *MsgFilePartsReq) GetFileType() uint32 {
	if x != nil {
		return x.FileType
	}
	return 0
}

func (x *MsgFilePartsReq) GetPartTotal() uint32 {
	if x != nil {
		return x.PartTotal
	}
	return 0
}

func (x *MsgFilePartsReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 网关上传文件响应
type MsgFilePartsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result ERpcResultCode `protobuf:"varint,1,opt,name=result,proto3,enum=storageservice.ERpcResultCode" json:"result,omitempty"` // 结果码
}

func (x *MsgFilePartsResp) Reset() {
	*x = MsgFilePartsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgFilePartsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgFilePartsResp) ProtoMessage() {}

func (x *MsgFilePartsResp) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgFilePartsResp.ProtoReflect.Descriptor instead.
func (*MsgFilePartsResp) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{28}
}

func (x *MsgFilePartsResp) GetResult() ERpcResultCode {
	if x != nil {
		return x.Result
	}
	return ERpcResultCode_RRC_OK
}

// 网关取Fid请求
type MsgGetFidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyid     uint64 `protobuf:"varint,1,opt,name=keyid,proto3" json:"keyid,omitempty"`                          // Ref 消息协议
	Fileid    int64  `protobuf:"varint,2,opt,name=fileid,proto3" json:"fileid,omitempty"`                        // Ref 消息协议
	FileType  uint32 `protobuf:"varint,3,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`    // Ref 消息协议 1 small 2: big
	Md5       string `protobuf:"bytes,4,opt,name=md5,proto3" json:"md5,omitempty"`                               // file_type为1时的文件hash，如果与服务实际收到不符丢掉；另外加密聊天客户端没有传md5,为空放弃校检
	PartTotal uint32 `protobuf:"varint,5,opt,name=part_total,json=partTotal,proto3" json:"part_total,omitempty"` // file_type为2时的文件分片总数，如果与服务实际收到不符丢掉
}

func (x *MsgGetFidReq) Reset() {
	*x = MsgGetFidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetFidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetFidReq) ProtoMessage() {}

func (x *MsgGetFidReq) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetFidReq.ProtoReflect.Descriptor instead.
func (*MsgGetFidReq) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{29}
}

func (x *MsgGetFidReq) GetKeyid() uint64 {
	if x != nil {
		return x.Keyid
	}
	return 0
}

func (x *MsgGetFidReq) GetFileid() int64 {
	if x != nil {
		return x.Fileid
	}
	return 0
}

func (x *MsgGetFidReq) GetFileType() uint32 {
	if x != nil {
		return x.FileType
	}
	return 0
}

func (x *MsgGetFidReq) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *MsgGetFidReq) GetPartTotal() uint32 {
	if x != nil {
		return x.PartTotal
	}
	return 0
}

// 网关取Fid响应
type MsgGetFidResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid        uint64         `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`                                          // 存储服务分配存储文件的唯一标识
	AccessHash uint64         `protobuf:"varint,2,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"`          // 访问hash
	FileSize   uint64         `protobuf:"varint,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`                // 文件大小
	Result     ERpcResultCode `protobuf:"varint,4,opt,name=result,proto3,enum=storageservice.ERpcResultCode" json:"result,omitempty"` // 结果码
}

func (x *MsgGetFidResp) Reset() {
	*x = MsgGetFidResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetFidResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetFidResp) ProtoMessage() {}

func (x *MsgGetFidResp) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetFidResp.ProtoReflect.Descriptor instead.
func (*MsgGetFidResp) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{30}
}

func (x *MsgGetFidResp) GetFid() uint64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *MsgGetFidResp) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

func (x *MsgGetFidResp) GetFileSize() uint64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *MsgGetFidResp) GetResult() ERpcResultCode {
	if x != nil {
		return x.Result
	}
	return ERpcResultCode_RRC_OK
}

// 网关上传文件描述信息请求
type MsgFileDescReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid        uint64 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`                                 // 存储服务分配存储文件的唯一标识
	AccessHash uint64 `protobuf:"varint,2,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"` // 访问hash
	Data       []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`                                // 数据
	FromId     int32  `protobuf:"varint,4,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`             // 发送者id
	WithId     int32  `protobuf:"varint,5,opt,name=with_id,json=withId,proto3" json:"with_id,omitempty"`             // 接受者id
	ChatType   string `protobuf:"bytes,6,opt,name=chat_type,json=chatType,proto3" json:"chat_type,omitempty"`        // 聊天类型
	MediaType  int32  `protobuf:"varint,7,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`    // 媒体类型
	MessageId  int32  `protobuf:"varint,8,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`    // 消息id
}

func (x *MsgFileDescReq) Reset() {
	*x = MsgFileDescReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgFileDescReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgFileDescReq) ProtoMessage() {}

func (x *MsgFileDescReq) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgFileDescReq.ProtoReflect.Descriptor instead.
func (*MsgFileDescReq) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{31}
}

func (x *MsgFileDescReq) GetFid() uint64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *MsgFileDescReq) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

func (x *MsgFileDescReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MsgFileDescReq) GetFromId() int32 {
	if x != nil {
		return x.FromId
	}
	return 0
}

func (x *MsgFileDescReq) GetWithId() int32 {
	if x != nil {
		return x.WithId
	}
	return 0
}

func (x *MsgFileDescReq) GetChatType() string {
	if x != nil {
		return x.ChatType
	}
	return ""
}

func (x *MsgFileDescReq) GetMediaType() int32 {
	if x != nil {
		return x.MediaType
	}
	return 0
}

func (x *MsgFileDescReq) GetMessageId() int32 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

// 网关上传文件描述信息响应
type MsgFileDescResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result ERpcResultCode `protobuf:"varint,1,opt,name=result,proto3,enum=storageservice.ERpcResultCode" json:"result,omitempty"` // 结果码
}

func (x *MsgFileDescResp) Reset() {
	*x = MsgFileDescResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgFileDescResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgFileDescResp) ProtoMessage() {}

func (x *MsgFileDescResp) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgFileDescResp.ProtoReflect.Descriptor instead.
func (*MsgFileDescResp) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{32}
}

func (x *MsgFileDescResp) GetResult() ERpcResultCode {
	if x != nil {
		return x.Result
	}
	return ERpcResultCode_RRC_OK
}

// 网关获取文件描述信息请求
type MsgGetFileDescReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid        uint64 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`                                 // 存储服务分配存储文件的唯一标识
	AccessHash uint64 `protobuf:"varint,2,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"` // 访问hash
}

func (x *MsgGetFileDescReq) Reset() {
	*x = MsgGetFileDescReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetFileDescReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetFileDescReq) ProtoMessage() {}

func (x *MsgGetFileDescReq) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetFileDescReq.ProtoReflect.Descriptor instead.
func (*MsgGetFileDescReq) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{33}
}

func (x *MsgGetFileDescReq) GetFid() uint64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *MsgGetFileDescReq) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

// 网关获取文件描述信息响应
type MsgGetFileDescResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result ERpcResultCode `protobuf:"varint,1,opt,name=result,proto3,enum=storageservice.ERpcResultCode" json:"result,omitempty"` // 结果码
	Data   []byte         `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`                                         // 数据
}

func (x *MsgGetFileDescResp) Reset() {
	*x = MsgGetFileDescResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetFileDescResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetFileDescResp) ProtoMessage() {}

func (x *MsgGetFileDescResp) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetFileDescResp.ProtoReflect.Descriptor instead.
func (*MsgGetFileDescResp) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{34}
}

func (x *MsgGetFileDescResp) GetResult() ERpcResultCode {
	if x != nil {
		return x.Result
	}
	return ERpcResultCode_RRC_OK
}

func (x *MsgGetFileDescResp) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 存储裁剪图与原图映射请求
type MsgCutPictureMapReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid        uint64 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`                                 // 原图fid
	AccessHash uint64 `protobuf:"varint,2,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"` // 访问hash
	Data       []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`                                // 数据
}

func (x *MsgCutPictureMapReq) Reset() {
	*x = MsgCutPictureMapReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCutPictureMapReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCutPictureMapReq) ProtoMessage() {}

func (x *MsgCutPictureMapReq) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCutPictureMapReq.ProtoReflect.Descriptor instead.
func (*MsgCutPictureMapReq) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{35}
}

func (x *MsgCutPictureMapReq) GetFid() uint64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *MsgCutPictureMapReq) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

func (x *MsgCutPictureMapReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 存储裁剪图与原图映射响应
type MsgCutPictureMapResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result ERpcResultCode `protobuf:"varint,1,opt,name=result,proto3,enum=storageservice.ERpcResultCode" json:"result,omitempty"` // 结果码
}

func (x *MsgCutPictureMapResp) Reset() {
	*x = MsgCutPictureMapResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCutPictureMapResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCutPictureMapResp) ProtoMessage() {}

func (x *MsgCutPictureMapResp) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCutPictureMapResp.ProtoReflect.Descriptor instead.
func (*MsgCutPictureMapResp) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{36}
}

func (x *MsgCutPictureMapResp) GetResult() ERpcResultCode {
	if x != nil {
		return x.Result
	}
	return ERpcResultCode_RRC_OK
}

// 获取裁剪图与原图映射请求
type MsgGetCutPictureMapReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid        uint64 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`                                 // 原图fid
	AccessHash uint64 `protobuf:"varint,2,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"` // 访问hash
}

func (x *MsgGetCutPictureMapReq) Reset() {
	*x = MsgGetCutPictureMapReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetCutPictureMapReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetCutPictureMapReq) ProtoMessage() {}

func (x *MsgGetCutPictureMapReq) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetCutPictureMapReq.ProtoReflect.Descriptor instead.
func (*MsgGetCutPictureMapReq) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{37}
}

func (x *MsgGetCutPictureMapReq) GetFid() uint64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *MsgGetCutPictureMapReq) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

// 获取裁剪图与原图映射响应
type MsgGetCutPictureMapResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result ERpcResultCode `protobuf:"varint,1,opt,name=result,proto3,enum=storageservice.ERpcResultCode" json:"result,omitempty"` // 结果码
	Data   []byte         `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`                                         // 数据
}

func (x *MsgGetCutPictureMapResp) Reset() {
	*x = MsgGetCutPictureMapResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetCutPictureMapResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetCutPictureMapResp) ProtoMessage() {}

func (x *MsgGetCutPictureMapResp) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetCutPictureMapResp.ProtoReflect.Descriptor instead.
func (*MsgGetCutPictureMapResp) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{38}
}

func (x *MsgGetCutPictureMapResp) GetResult() ERpcResultCode {
	if x != nil {
		return x.Result
	}
	return ERpcResultCode_RRC_OK
}

func (x *MsgGetCutPictureMapResp) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 删除裁剪图与原图映射请求
type MsgDelCutPictureMapReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid        uint64 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`                                 // 原图fid
	AccessHash uint64 `protobuf:"varint,2,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"` // 访问hash
}

func (x *MsgDelCutPictureMapReq) Reset() {
	*x = MsgDelCutPictureMapReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDelCutPictureMapReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDelCutPictureMapReq) ProtoMessage() {}

func (x *MsgDelCutPictureMapReq) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDelCutPictureMapReq.ProtoReflect.Descriptor instead.
func (*MsgDelCutPictureMapReq) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{39}
}

func (x *MsgDelCutPictureMapReq) GetFid() uint64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *MsgDelCutPictureMapReq) GetAccessHash() uint64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

// 删除裁剪图与原图映射响应
type MsgDelCutPictureMapResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result ERpcResultCode `protobuf:"varint,1,opt,name=result,proto3,enum=storageservice.ERpcResultCode" json:"result,omitempty"` // 结果码
}

func (x *MsgDelCutPictureMapResp) Reset() {
	*x = MsgDelCutPictureMapResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDelCutPictureMapResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDelCutPictureMapResp) ProtoMessage() {}

func (x *MsgDelCutPictureMapResp) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDelCutPictureMapResp.ProtoReflect.Descriptor instead.
func (*MsgDelCutPictureMapResp) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{40}
}

func (x *MsgDelCutPictureMapResp) GetResult() ERpcResultCode {
	if x != nil {
		return x.Result
	}
	return ERpcResultCode_RRC_OK
}

// GetWebPhoto
type MsgGetWebPhotoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhotoType string `protobuf:"bytes,1,opt,name=PhotoType,proto3" json:"PhotoType,omitempty"`       //实际未用到
	KeyId     uint64 `protobuf:"varint,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"` //fileId 为0？
	DcId      int32  `protobuf:"varint,3,opt,name=dc_id,json=dcId,proto3" json:"dc_id,omitempty"`
	Data      []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"` //数据
}

func (x *MsgGetWebPhotoReq) Reset() {
	*x = MsgGetWebPhotoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetWebPhotoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetWebPhotoReq) ProtoMessage() {}

func (x *MsgGetWebPhotoReq) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetWebPhotoReq.ProtoReflect.Descriptor instead.
func (*MsgGetWebPhotoReq) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{41}
}

func (x *MsgGetWebPhotoReq) GetPhotoType() string {
	if x != nil {
		return x.PhotoType
	}
	return ""
}

func (x *MsgGetWebPhotoReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *MsgGetWebPhotoReq) GetDcId() int32 {
	if x != nil {
		return x.DcId
	}
	return 0
}

func (x *MsgGetWebPhotoReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type MsgGetWebPhotoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtherPhotoData []byte         `protobuf:"bytes,1,opt,name=OtherPhotoData,proto3" json:"OtherPhotoData,omitempty"`                     //压缩的二进制
	Result         ERpcResultCode `protobuf:"varint,2,opt,name=result,proto3,enum=storageservice.ERpcResultCode" json:"result,omitempty"` //返回代码
}

func (x *MsgGetWebPhotoResp) Reset() {
	*x = MsgGetWebPhotoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetWebPhotoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetWebPhotoResp) ProtoMessage() {}

func (x *MsgGetWebPhotoResp) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetWebPhotoResp.ProtoReflect.Descriptor instead.
func (*MsgGetWebPhotoResp) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{42}
}

func (x *MsgGetWebPhotoResp) GetOtherPhotoData() []byte {
	if x != nil {
		return x.OtherPhotoData
	}
	return nil
}

func (x *MsgGetWebPhotoResp) GetResult() ERpcResultCode {
	if x != nil {
		return x.Result
	}
	return ERpcResultCode_RRC_OK
}

// ----------------------------------------------------
// GetSendPhotoSize
type MsgGetSendPhotoSizeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyid     uint64 `protobuf:"varint,1,opt,name=keyid,proto3" json:"keyid,omitempty"`                          // Ref 消息协议
	Fileid    int64  `protobuf:"varint,2,opt,name=fileid,proto3" json:"fileid,omitempty"`                        // Ref 消息协议
	FileType  uint32 `protobuf:"varint,3,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`    // Ref 消息协议 1 small 2: big
	Md5       string `protobuf:"bytes,4,opt,name=md5,proto3" json:"md5,omitempty"`                               // file_type为1时的文件hash，如果与服务实际收到不符丢掉；另外加密聊天客户端没有传md5,为空放弃校检
	PartTotal uint32 `protobuf:"varint,5,opt,name=part_total,json=partTotal,proto3" json:"part_total,omitempty"` // file_type为2时的文件分片总数，如果与服务实际收到不符丢
	DcId      int32  `protobuf:"varint,6,opt,name=dc_id,json=dcId,proto3" json:"dc_id,omitempty"`
}

func (x *MsgGetSendPhotoSizeReq) Reset() {
	*x = MsgGetSendPhotoSizeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetSendPhotoSizeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetSendPhotoSizeReq) ProtoMessage() {}

func (x *MsgGetSendPhotoSizeReq) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetSendPhotoSizeReq.ProtoReflect.Descriptor instead.
func (*MsgGetSendPhotoSizeReq) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{43}
}

func (x *MsgGetSendPhotoSizeReq) GetKeyid() uint64 {
	if x != nil {
		return x.Keyid
	}
	return 0
}

func (x *MsgGetSendPhotoSizeReq) GetFileid() int64 {
	if x != nil {
		return x.Fileid
	}
	return 0
}

func (x *MsgGetSendPhotoSizeReq) GetFileType() uint32 {
	if x != nil {
		return x.FileType
	}
	return 0
}

func (x *MsgGetSendPhotoSizeReq) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *MsgGetSendPhotoSizeReq) GetPartTotal() uint32 {
	if x != nil {
		return x.PartTotal
	}
	return 0
}

func (x *MsgGetSendPhotoSizeReq) GetDcId() int32 {
	if x != nil {
		return x.DcId
	}
	return 0
}

type MsgGetSendPhotoSizeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelfPhotoData  []byte         `protobuf:"bytes,1,opt,name=SelfPhotoData,proto3" json:"SelfPhotoData,omitempty"`
	OtherPhotoData []byte         `protobuf:"bytes,2,opt,name=OtherPhotoData,proto3" json:"OtherPhotoData,omitempty"`
	Result         ERpcResultCode `protobuf:"varint,3,opt,name=result,proto3,enum=storageservice.ERpcResultCode" json:"result,omitempty"`
}

func (x *MsgGetSendPhotoSizeResp) Reset() {
	*x = MsgGetSendPhotoSizeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetSendPhotoSizeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetSendPhotoSizeResp) ProtoMessage() {}

func (x *MsgGetSendPhotoSizeResp) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetSendPhotoSizeResp.ProtoReflect.Descriptor instead.
func (*MsgGetSendPhotoSizeResp) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{44}
}

func (x *MsgGetSendPhotoSizeResp) GetSelfPhotoData() []byte {
	if x != nil {
		return x.SelfPhotoData
	}
	return nil
}

func (x *MsgGetSendPhotoSizeResp) GetOtherPhotoData() []byte {
	if x != nil {
		return x.OtherPhotoData
	}
	return nil
}

func (x *MsgGetSendPhotoSizeResp) GetResult() ERpcResultCode {
	if x != nil {
		return x.Result
	}
	return ERpcResultCode_RRC_OK
}

// ----------------------------------------------------
// GetPhotoCachedSize
type MsgGetPhotoCachedSizeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId int64 `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	DcId  int32 `protobuf:"varint,2,opt,name=dc_id,json=dcId,proto3" json:"dc_id,omitempty"`
	NewId int64 `protobuf:"varint,3,opt,name=new_id,json=newId,proto3" json:"new_id,omitempty"`
	Size  int32 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *MsgGetPhotoCachedSizeReq) Reset() {
	*x = MsgGetPhotoCachedSizeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetPhotoCachedSizeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetPhotoCachedSizeReq) ProtoMessage() {}

func (x *MsgGetPhotoCachedSizeReq) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetPhotoCachedSizeReq.ProtoReflect.Descriptor instead.
func (*MsgGetPhotoCachedSizeReq) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{45}
}

func (x *MsgGetPhotoCachedSizeReq) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *MsgGetPhotoCachedSizeReq) GetDcId() int32 {
	if x != nil {
		return x.DcId
	}
	return 0
}

func (x *MsgGetPhotoCachedSizeReq) GetNewId() int64 {
	if x != nil {
		return x.NewId
	}
	return 0
}

func (x *MsgGetPhotoCachedSizeReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type MsgGetPhotoCachedSizeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CachePhotoData []byte         `protobuf:"bytes,1,opt,name=CachePhotoData,proto3" json:"CachePhotoData,omitempty"`
	Result         ERpcResultCode `protobuf:"varint,2,opt,name=result,proto3,enum=storageservice.ERpcResultCode" json:"result,omitempty"`
}

func (x *MsgGetPhotoCachedSizeResp) Reset() {
	*x = MsgGetPhotoCachedSizeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetPhotoCachedSizeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetPhotoCachedSizeResp) ProtoMessage() {}

func (x *MsgGetPhotoCachedSizeResp) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetPhotoCachedSizeResp.ProtoReflect.Descriptor instead.
func (*MsgGetPhotoCachedSizeResp) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{46}
}

func (x *MsgGetPhotoCachedSizeResp) GetCachePhotoData() []byte {
	if x != nil {
		return x.CachePhotoData
	}
	return nil
}

func (x *MsgGetPhotoCachedSizeResp) GetResult() ERpcResultCode {
	if x != nil {
		return x.Result
	}
	return ERpcResultCode_RRC_OK
}

// ----------------------------------------------------
// GetPhoto
type MsgGetPhotoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyid     uint64 `protobuf:"varint,1,opt,name=keyid,proto3" json:"keyid,omitempty"`                          // Ref 消息协议
	Fileid    int64  `protobuf:"varint,2,opt,name=fileid,proto3" json:"fileid,omitempty"`                        // Ref 消息协议
	FileType  uint32 `protobuf:"varint,3,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`    // Ref 消息协议 1 small 2: big
	Md5       string `protobuf:"bytes,4,opt,name=md5,proto3" json:"md5,omitempty"`                               // file_type为1时的文件hash，如果与服务实际收到不符丢掉；另外加密聊天客户端没有传md5,为空放弃校检
	PartTotal uint32 `protobuf:"varint,5,opt,name=part_total,json=partTotal,proto3" json:"part_total,omitempty"` // file_type为2时的文件分片总数，如果与服务实际收到不符丢
	DcId      int32  `protobuf:"varint,6,opt,name=dc_id,json=dcId,proto3" json:"dc_id,omitempty"`
}

func (x *MsgGetPhotoReq) Reset() {
	*x = MsgGetPhotoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetPhotoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetPhotoReq) ProtoMessage() {}

func (x *MsgGetPhotoReq) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetPhotoReq.ProtoReflect.Descriptor instead.
func (*MsgGetPhotoReq) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{47}
}

func (x *MsgGetPhotoReq) GetKeyid() uint64 {
	if x != nil {
		return x.Keyid
	}
	return 0
}

func (x *MsgGetPhotoReq) GetFileid() int64 {
	if x != nil {
		return x.Fileid
	}
	return 0
}

func (x *MsgGetPhotoReq) GetFileType() uint32 {
	if x != nil {
		return x.FileType
	}
	return 0
}

func (x *MsgGetPhotoReq) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *MsgGetPhotoReq) GetPartTotal() uint32 {
	if x != nil {
		return x.PartTotal
	}
	return 0
}

func (x *MsgGetPhotoReq) GetDcId() int32 {
	if x != nil {
		return x.DcId
	}
	return 0
}

type MsgGetPhotoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtherPhotoData []byte         `protobuf:"bytes,1,opt,name=OtherPhotoData,proto3" json:"OtherPhotoData,omitempty"`
	Result         ERpcResultCode `protobuf:"varint,2,opt,name=result,proto3,enum=storageservice.ERpcResultCode" json:"result,omitempty"`
}

func (x *MsgGetPhotoResp) Reset() {
	*x = MsgGetPhotoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetPhotoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetPhotoResp) ProtoMessage() {}

func (x *MsgGetPhotoResp) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetPhotoResp.ProtoReflect.Descriptor instead.
func (*MsgGetPhotoResp) Descriptor() ([]byte, []int) {
	return file_storage_proto_proto_rawDescGZIP(), []int{48}
}

func (x *MsgGetPhotoResp) GetOtherPhotoData() []byte {
	if x != nil {
		return x.OtherPhotoData
	}
	return nil
}

func (x *MsgGetPhotoResp) GetResult() ERpcResultCode {
	if x != nil {
		return x.Result
	}
	return ERpcResultCode_RRC_OK
}

var File_storage_proto_proto protoreflect.FileDescriptor

var file_storage_proto_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x75,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x22, 0x57, 0x0a, 0x13, 0x4d, 0x73, 0x67,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x66, 0x73, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x75, 0x73, 0x66, 0x73, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x62, 0x66, 0x73, 0x73, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x62, 0x66, 0x73, 0x73, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x73, 0x73, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x73,
	0x73, 0x6c, 0x22, 0x35, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x22, 0x99, 0x01, 0x0a, 0x17, 0x4d, 0x73,
	0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x73, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x50, 0x61, 0x72,
	0x61, 0x52, 0x04, 0x70, 0x61, 0x72, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x22, 0x5e, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x46, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x2f, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x46, 0x69,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x50, 0x61, 0x72, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x7a, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x46, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x04, 0x70, 0x61, 0x72,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x46, 0x69,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x50, 0x61, 0x72, 0x61, 0x52, 0x04, 0x70, 0x61, 0x72, 0x61, 0x12,
	0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61,
	0x73, 0x68, 0x22, 0x58, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x50,
	0x61, 0x72, 0x61, 0x31, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x72, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x79, 0x0a, 0x0e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x50, 0x61, 0x72, 0x61, 0x32, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x92, 0x01, 0x0a, 0x10, 0x4d, 0x73, 0x67, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x50, 0x61, 0x72, 0x61, 0x31, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x31, 0x12, 0x34, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x50, 0x61, 0x72, 0x61,
	0x32, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3f, 0x0a, 0x12,
	0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x50, 0x61,
	0x72, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x66, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x74, 0x49, 0x64, 0x22, 0xd5, 0x01,
	0x0a, 0x11, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x50, 0x61, 0x72, 0x61, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x31, 0x12, 0x2d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x32, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x64, 0x50, 0x61, 0x72, 0x61, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x32, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x48, 0x61, 0x73, 0x68, 0x22, 0xb8, 0x01, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x22, 0x5e, 0x0a, 0x15, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x50, 0x61, 0x72, 0x61, 0x31, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x43, 0x0a, 0x15, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x50, 0x61, 0x72, 0x61, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc7, 0x01, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45,
	0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x31, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x50, 0x61, 0x72, 0x61, 0x31, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x31, 0x12, 0x3b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x50, 0x61, 0x72, 0x61, 0x32, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x32, 0x22,
	0x5e, 0x0a, 0x10, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x66, 0x4e, 0x75, 0x6d, 0x22,
	0x78, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x64, 0x50, 0x61, 0x72, 0x61, 0x52, 0x04, 0x70, 0x61, 0x72,
	0x61, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x45, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x47, 0x0a, 0x12, 0x4d, 0x73, 0x67,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61,
	0x73, 0x68, 0x22, 0x7a, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x70, 0x61, 0x72,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x64, 0x50, 0x61, 0x72, 0x61,
	0x52, 0x04, 0x70, 0x61, 0x72, 0x61, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5f,
	0x0a, 0x11, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x52, 0x65, 0x66, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x66, 0x4e, 0x75, 0x6d, 0x22,
	0x79, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x52, 0x65, 0x66, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x64, 0x50, 0x61, 0x72, 0x61, 0x52, 0x04, 0x70, 0x61,
	0x72, 0x61, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x45, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x56, 0x0a, 0x0f, 0x4d, 0x73,
	0x67, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x54, 0x4c, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74,
	0x74, 0x6c, 0x22, 0x77, 0x0a, 0x10, 0x4d, 0x73, 0x67, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54,
	0x54, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x64, 0x50, 0x61, 0x72, 0x61, 0x52, 0x04, 0x70,
	0x61, 0x72, 0x61, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x26, 0x0a, 0x12, 0x4d,
	0x73, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x62, 0x6a, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x66, 0x69, 0x64, 0x22, 0x5f, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x62, 0x6a, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x50, 0x61, 0x72, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x48, 0x61, 0x73, 0x68, 0x22, 0x87, 0x01, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4f, 0x62, 0x6a, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x04,
	0x70, 0x61, 0x72, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4f, 0x62, 0x6a, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x50, 0x61, 0x72, 0x61,
	0x52, 0x04, 0x70, 0x61, 0x72, 0x61, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa8,
	0x01, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4a, 0x0a, 0x10, 0x4d, 0x73, 0x67,
	0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45,
	0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74,
	0x46, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x65, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x64, 0x35, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x97, 0x01, 0x0a, 0x0d, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x46, 0x69, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe4, 0x01, 0x0a,
	0x0e, 0x4d, 0x73, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x77, 0x69, 0x74, 0x68, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x46,
	0x0a, 0x11, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x22, 0x60, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x52,
	0x70, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5c, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x43,
	0x75, 0x74, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4e, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x43, 0x75, 0x74,
	0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x45, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4b, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x74, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48,
	0x61, 0x73, 0x68, 0x22, 0x65, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x43, 0x75, 0x74,
	0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x45, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4b, 0x0a, 0x16, 0x4d, 0x73,
	0x67, 0x44, 0x65, 0x6c, 0x43, 0x75, 0x74, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61,
	0x70, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x22, 0x51, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x44, 0x65,
	0x6c, 0x43, 0x75, 0x74, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x45, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x71, 0x0a, 0x11, 0x4d, 0x73,
	0x67, 0x47, 0x65, 0x74, 0x57, 0x65, 0x62, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a,
	0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b,
	0x65, 0x79, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x63, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x74, 0x0a,
	0x12, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x57, 0x65, 0x62, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x4f, 0x74, 0x68,
	0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x52, 0x70,
	0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x6e, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x6b, 0x65, 0x79, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b,
	0x65, 0x79, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x13, 0x0a, 0x05, 0x64, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x63, 0x49, 0x64, 0x22,
	0x9f, 0x01, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x53,
	0x65, 0x6c, 0x66, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0d, 0x53, 0x65, 0x6c, 0x66, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x4f, 0x74, 0x68, 0x65, 0x72,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x52, 0x70, 0x63, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x71, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a,
	0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6b,
	0x65, 0x79, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x63, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x65, 0x77,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x65, 0x77, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x22, 0x7b, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x52, 0x70, 0x63, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0xa1, 0x01, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64,
	0x35, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x13, 0x0a, 0x05, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x64, 0x63, 0x49, 0x64, 0x22, 0x71, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x45, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xc9, 0x06, 0x0a, 0x12, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x59, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x22, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0a, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x59, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x22, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x73, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x11, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12,
	0x22, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x73, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4f, 0x62, 0x6a, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4f, 0x62, 0x6a, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x23,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4d, 0x73, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x62, 0x6a, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x11, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x46,
	0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67,
	0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x58, 0x0a, 0x17, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x69, 0x64, 0x12, 0x1c, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74,
	0x46, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x15, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x12, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x21, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x22,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x42, 0x20, 0x5a, 0x1e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x70, 0x72, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_storage_proto_proto_rawDescOnce sync.Once
	file_storage_proto_proto_rawDescData = file_storage_proto_proto_rawDesc
)

func file_storage_proto_proto_rawDescGZIP() []byte {
	file_storage_proto_proto_rawDescOnce.Do(func() {
		file_storage_proto_proto_rawDescData = protoimpl.X.CompressGZIP(file_storage_proto_proto_rawDescData)
	})
	return file_storage_proto_proto_rawDescData
}

var file_storage_proto_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_storage_proto_proto_goTypes = []interface{}{
	(*MsgServiceLimitReq)(nil),        // 0: storageservice.MsgServiceLimitReq
	(*MsgServiceLimitResp)(nil),       // 1: storageservice.MsgServiceLimitResp
	(*MsgQueryFileIsExistReq)(nil),    // 2: storageservice.MsgQueryFileIsExistReq
	(*MsgQueryFileIsExistResp)(nil),   // 3: storageservice.MsgQueryFileIsExistResp
	(*MsgApplyFidReq)(nil),            // 4: storageservice.MsgApplyFidReq
	(*ApplyFidRespPara)(nil),          // 5: storageservice.ApplyFidRespPara
	(*MsgApplyFidResp)(nil),           // 6: storageservice.MsgApplyFidResp
	(*UploadReqPara1)(nil),            // 7: storageservice.UploadReqPara1
	(*UploadReqPara2)(nil),            // 8: storageservice.UploadReqPara2
	(*MsgUploadFileReq)(nil),          // 9: storageservice.MsgUploadFileReq
	(*FileUploadRespPara)(nil),        // 10: storageservice.FileUploadRespPara
	(*MsgUploadFileResp)(nil),         // 11: storageservice.MsgUploadFileResp
	(*MsgDownloadFileReq)(nil),        // 12: storageservice.MsgDownloadFileReq
	(*DownloadFileRespPara1)(nil),     // 13: storageservice.DownloadFileRespPara1
	(*DownloadFileRespPara2)(nil),     // 14: storageservice.DownloadFileRespPara2
	(*MsgDownloadFileResp)(nil),       // 15: storageservice.MsgDownloadFileResp
	(*MsgDeleteFileReq)(nil),          // 16: storageservice.MsgDeleteFileReq
	(*MsgDeleteFileResp)(nil),         // 17: storageservice.MsgDeleteFileResp
	(*MsgCancelUploadReq)(nil),        // 18: storageservice.MsgCancelUploadReq
	(*MsgCancelUploadResp)(nil),       // 19: storageservice.MsgCancelUploadResp
	(*MsgAddRefCountReq)(nil),         // 20: storageservice.MsgAddRefCountReq
	(*MsgAddRefCountResp)(nil),        // 21: storageservice.MsgAddRefCountResp
	(*MsgModifyTTLReq)(nil),           // 22: storageservice.MsgModifyTTLReq
	(*MsgModifyTTLResp)(nil),          // 23: storageservice.MsgModifyTTLResp
	(*MsgQueryObjInfoReq)(nil),        // 24: storageservice.MsgQueryObjInfoReq
	(*QueryObjInfoRespPara)(nil),      // 25: storageservice.QueryObjInfoRespPara
	(*MsgQueryObjInfoResp)(nil),       // 26: storageservice.MsgQueryObjInfoResp
	(*MsgFilePartsReq)(nil),           // 27: storageservice.MsgFilePartsReq
	(*MsgFilePartsResp)(nil),          // 28: storageservice.MsgFilePartsResp
	(*MsgGetFidReq)(nil),              // 29: storageservice.MsgGetFidReq
	(*MsgGetFidResp)(nil),             // 30: storageservice.MsgGetFidResp
	(*MsgFileDescReq)(nil),            // 31: storageservice.MsgFileDescReq
	(*MsgFileDescResp)(nil),           // 32: storageservice.MsgFileDescResp
	(*MsgGetFileDescReq)(nil),         // 33: storageservice.MsgGetFileDescReq
	(*MsgGetFileDescResp)(nil),        // 34: storageservice.MsgGetFileDescResp
	(*MsgCutPictureMapReq)(nil),       // 35: storageservice.MsgCutPictureMapReq
	(*MsgCutPictureMapResp)(nil),      // 36: storageservice.MsgCutPictureMapResp
	(*MsgGetCutPictureMapReq)(nil),    // 37: storageservice.MsgGetCutPictureMapReq
	(*MsgGetCutPictureMapResp)(nil),   // 38: storageservice.MsgGetCutPictureMapResp
	(*MsgDelCutPictureMapReq)(nil),    // 39: storageservice.MsgDelCutPictureMapReq
	(*MsgDelCutPictureMapResp)(nil),   // 40: storageservice.MsgDelCutPictureMapResp
	(*MsgGetWebPhotoReq)(nil),         // 41: storageservice.MsgGetWebPhotoReq
	(*MsgGetWebPhotoResp)(nil),        // 42: storageservice.MsgGetWebPhotoResp
	(*MsgGetSendPhotoSizeReq)(nil),    // 43: storageservice.MsgGetSendPhotoSizeReq
	(*MsgGetSendPhotoSizeResp)(nil),   // 44: storageservice.MsgGetSendPhotoSizeResp
	(*MsgGetPhotoCachedSizeReq)(nil),  // 45: storageservice.MsgGetPhotoCachedSizeReq
	(*MsgGetPhotoCachedSizeResp)(nil), // 46: storageservice.MsgGetPhotoCachedSizeResp
	(*MsgGetPhotoReq)(nil),            // 47: storageservice.MsgGetPhotoReq
	(*MsgGetPhotoResp)(nil),           // 48: storageservice.MsgGetPhotoResp
	(*FileHashPara)(nil),              // 49: storageservice.FileHashPara
	(ERpcResultCode)(0),               // 50: storageservice.ERpcResultCode
	(*FidPara)(nil),                   // 51: storageservice.FidPara
}
var file_storage_proto_proto_depIdxs = []int32{
	49, // 0: storageservice.MsgQueryFileIsExistResp.para:type_name -> storageservice.FileHashPara
	5,  // 1: storageservice.MsgApplyFidResp.para:type_name -> storageservice.ApplyFidRespPara
	7,  // 2: storageservice.MsgUploadFileReq.para1:type_name -> storageservice.UploadReqPara1
	8,  // 3: storageservice.MsgUploadFileReq.para2:type_name -> storageservice.UploadReqPara2
	50, // 4: storageservice.MsgUploadFileResp.result:type_name -> storageservice.ERpcResultCode
	10, // 5: storageservice.MsgUploadFileResp.para1:type_name -> storageservice.FileUploadRespPara
	51, // 6: storageservice.MsgUploadFileResp.para2:type_name -> storageservice.FidPara
	50, // 7: storageservice.MsgDownloadFileResp.result:type_name -> storageservice.ERpcResultCode
	13, // 8: storageservice.MsgDownloadFileResp.para1:type_name -> storageservice.DownloadFileRespPara1
	14, // 9: storageservice.MsgDownloadFileResp.para2:type_name -> storageservice.DownloadFileRespPara2
	51, // 10: storageservice.MsgDeleteFileResp.para:type_name -> storageservice.FidPara
	50, // 11: storageservice.MsgDeleteFileResp.result:type_name -> storageservice.ERpcResultCode
	51, // 12: storageservice.MsgCancelUploadResp.para:type_name -> storageservice.FidPara
	50, // 13: storageservice.MsgCancelUploadResp.result:type_name -> storageservice.ERpcResultCode
	51, // 14: storageservice.MsgAddRefCountResp.para:type_name -> storageservice.FidPara
	50, // 15: storageservice.MsgAddRefCountResp.result:type_name -> storageservice.ERpcResultCode
	51, // 16: storageservice.MsgModifyTTLResp.para:type_name -> storageservice.FidPara
	50, // 17: storageservice.MsgModifyTTLResp.result:type_name -> storageservice.ERpcResultCode
	25, // 18: storageservice.MsgQueryObjInfoResp.para:type_name -> storageservice.QueryObjInfoRespPara
	50, // 19: storageservice.MsgQueryObjInfoResp.result:type_name -> storageservice.ERpcResultCode
	50, // 20: storageservice.MsgFilePartsResp.result:type_name -> storageservice.ERpcResultCode
	50, // 21: storageservice.MsgGetFidResp.result:type_name -> storageservice.ERpcResultCode
	50, // 22: storageservice.MsgFileDescResp.result:type_name -> storageservice.ERpcResultCode
	50, // 23: storageservice.MsgGetFileDescResp.result:type_name -> storageservice.ERpcResultCode
	50, // 24: storageservice.MsgCutPictureMapResp.result:type_name -> storageservice.ERpcResultCode
	50, // 25: storageservice.MsgGetCutPictureMapResp.result:type_name -> storageservice.ERpcResultCode
	50, // 26: storageservice.MsgDelCutPictureMapResp.result:type_name -> storageservice.ERpcResultCode
	50, // 27: storageservice.MsgGetWebPhotoResp.result:type_name -> storageservice.ERpcResultCode
	50, // 28: storageservice.MsgGetSendPhotoSizeResp.result:type_name -> storageservice.ERpcResultCode
	50, // 29: storageservice.MsgGetPhotoCachedSizeResp.result:type_name -> storageservice.ERpcResultCode
	50, // 30: storageservice.MsgGetPhotoResp.result:type_name -> storageservice.ERpcResultCode
	0,  // 31: storageservice.FileStorageService.ServiceLimit:input_type -> storageservice.MsgServiceLimitReq
	9,  // 32: storageservice.FileStorageService.UploadFile:input_type -> storageservice.MsgUploadFileReq
	12, // 33: storageservice.FileStorageService.DownloadFile:input_type -> storageservice.MsgDownloadFileReq
	12, // 34: storageservice.FileStorageService.DownloadFileCache:input_type -> storageservice.MsgDownloadFileReq
	24, // 35: storageservice.FileStorageService.QueryObjInfo:input_type -> storageservice.MsgQueryObjInfoReq
	27, // 36: storageservice.FileStorageService.GatewayUploadFile:input_type -> storageservice.MsgFilePartsReq
	29, // 37: storageservice.FileStorageService.GatewayGetUploadFileFid:input_type -> storageservice.MsgGetFidReq
	31, // 38: storageservice.FileStorageService.GatewayUploadFileDesc:input_type -> storageservice.MsgFileDescReq
	33, // 39: storageservice.FileStorageService.GatewayGetFileDesc:input_type -> storageservice.MsgGetFileDescReq
	1,  // 40: storageservice.FileStorageService.ServiceLimit:output_type -> storageservice.MsgServiceLimitResp
	11, // 41: storageservice.FileStorageService.UploadFile:output_type -> storageservice.MsgUploadFileResp
	15, // 42: storageservice.FileStorageService.DownloadFile:output_type -> storageservice.MsgDownloadFileResp
	15, // 43: storageservice.FileStorageService.DownloadFileCache:output_type -> storageservice.MsgDownloadFileResp
	26, // 44: storageservice.FileStorageService.QueryObjInfo:output_type -> storageservice.MsgQueryObjInfoResp
	28, // 45: storageservice.FileStorageService.GatewayUploadFile:output_type -> storageservice.MsgFilePartsResp
	30, // 46: storageservice.FileStorageService.GatewayGetUploadFileFid:output_type -> storageservice.MsgGetFidResp
	32, // 47: storageservice.FileStorageService.GatewayUploadFileDesc:output_type -> storageservice.MsgFileDescResp
	34, // 48: storageservice.FileStorageService.GatewayGetFileDesc:output_type -> storageservice.MsgGetFileDescResp
	40, // [40:49] is the sub-list for method output_type
	31, // [31:40] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_storage_proto_proto_init() }
func file_storage_proto_proto_init() {
	if File_storage_proto_proto != nil {
		return
	}
	file_storageservice_storage_pub_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_storage_proto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgServiceLimitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgServiceLimitResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgQueryFileIsExistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgQueryFileIsExistResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgApplyFidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyFidRespPara); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgApplyFidResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadReqPara1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadReqPara2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUploadFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUploadRespPara); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUploadFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDownloadFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileRespPara1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileRespPara2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDownloadFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCancelUploadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCancelUploadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddRefCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddRefCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgModifyTTLReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgModifyTTLResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgQueryObjInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryObjInfoRespPara); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgQueryObjInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgFilePartsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgFilePartsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetFidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetFidResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgFileDescReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgFileDescResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetFileDescReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetFileDescResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCutPictureMapReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCutPictureMapResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetCutPictureMapReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetCutPictureMapResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDelCutPictureMapReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDelCutPictureMapResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetWebPhotoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetWebPhotoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetSendPhotoSizeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetSendPhotoSizeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetPhotoCachedSizeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetPhotoCachedSizeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetPhotoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetPhotoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_storage_proto_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_storage_proto_proto_goTypes,
		DependencyIndexes: file_storage_proto_proto_depIdxs,
		MessageInfos:      file_storage_proto_proto_msgTypes,
	}.Build()
	File_storage_proto_proto = out.File
	file_storage_proto_proto_rawDesc = nil
	file_storage_proto_proto_goTypes = nil
	file_storage_proto_proto_depIdxs = nil
}
