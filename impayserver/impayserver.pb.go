// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: impayserver.proto

// protoc --gogofast_out=plugins=grpc:. *.proto
//protoc --gogofast_out=plugins=grpc:. ./gitlab.chatserver.im/interfaceprobuf/pbimuinfoserver/imuinfoserver.proto

package impayserver

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	pbcomm "interfaceprobuf/pbcomm"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// //protoc --gogofast_out=plugins=grpc:. gitlab.chatserver.im/interfaceprobuf/impayserver/impayclient/ImInterface.proto
// protoc --gogofast_out=plugins=grpc:. gitlab.chatserver.im/interfaceprobuf/impayserver/impayserver.proto
// 获取帐号信息的请求
type GetAccountInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int32  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                //用户ID
	KeyId       int64  `protobuf:"varint,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`                   //端ID
	IpAddr      string `protobuf:"bytes,3,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`                 //客户端的IP
	ReqMessagId int64  `protobuf:"varint,4,opt,name=req_messagId,json=reqMessagId,proto3" json:"req_messagId,omitempty"` //請求的messagId
	ReqBytes    []byte `protobuf:"bytes,5,opt,name=ReqBytes,proto3" json:"ReqBytes,omitempty"`                           //请求的端表示
	Phone       string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`                                 //电话
}

func (x *GetAccountInfoReq) Reset() {
	*x = GetAccountInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountInfoReq) ProtoMessage() {}

func (x *GetAccountInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountInfoReq.ProtoReflect.Descriptor instead.
func (*GetAccountInfoReq) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{0}
}

func (x *GetAccountInfoReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetAccountInfoReq) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *GetAccountInfoReq) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *GetAccountInfoReq) GetReqMessagId() int64 {
	if x != nil {
		return x.ReqMessagId
	}
	return 0
}

func (x *GetAccountInfoReq) GetReqBytes() []byte {
	if x != nil {
		return x.ReqBytes
	}
	return nil
}

func (x *GetAccountInfoReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

// 获取帐号信息的返回
type GetAccountInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespBytes []byte `protobuf:"bytes,1,opt,name=RespBytes,proto3" json:"RespBytes,omitempty"` //返回结构
}

func (x *GetAccountInfoResp) Reset() {
	*x = GetAccountInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountInfoResp) ProtoMessage() {}

func (x *GetAccountInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountInfoResp.ProtoReflect.Descriptor instead.
func (*GetAccountInfoResp) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{1}
}

func (x *GetAccountInfoResp) GetRespBytes() []byte {
	if x != nil {
		return x.RespBytes
	}
	return nil
}

type GetUserAcctInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //用户ID
	KeyId  uint64 `protobuf:"varint,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`    //端ID
	UserIp string `protobuf:"bytes,3,opt,name=user_ip,json=userIp,proto3" json:"user_ip,omitempty"`  //客户端的IP
	Phone  string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`                  //电话
}

func (x *GetUserAcctInfoReq) Reset() {
	*x = GetUserAcctInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAcctInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAcctInfoReq) ProtoMessage() {}

func (x *GetUserAcctInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAcctInfoReq.ProtoReflect.Descriptor instead.
func (*GetUserAcctInfoReq) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserAcctInfoReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserAcctInfoReq) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *GetUserAcctInfoReq) GetUserIp() string {
	if x != nil {
		return x.UserIp
	}
	return ""
}

func (x *GetUserAcctInfoReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

// 获取帐号信息的返回
type GetUserAcctInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResCode int32  `protobuf:"varint,1,opt,name=ResCode,proto3" json:"ResCode,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	ResData string `protobuf:"bytes,3,opt,name=ResData,proto3" json:"ResData,omitempty"` //返回结构
}

func (x *GetUserAcctInfoRsp) Reset() {
	*x = GetUserAcctInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAcctInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAcctInfoRsp) ProtoMessage() {}

func (x *GetUserAcctInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAcctInfoRsp.ProtoReflect.Descriptor instead.
func (*GetUserAcctInfoRsp) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserAcctInfoRsp) GetResCode() int32 {
	if x != nil {
		return x.ResCode
	}
	return 0
}

func (x *GetUserAcctInfoRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetUserAcctInfoRsp) GetResData() string {
	if x != nil {
		return x.ResData
	}
	return ""
}

// 创建帐号协议请球
type CreateAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int32  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                //用户ID
	KeyId       int64  `protobuf:"varint,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`                   //端ID
	IpAddr      string `protobuf:"bytes,3,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`                 //客户端的IP
	ReqMessagId int64  `protobuf:"varint,4,opt,name=req_messagId,json=reqMessagId,proto3" json:"req_messagId,omitempty"` //請求的messagId
	Phone       string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	ReqBytes    []byte `protobuf:"bytes,6,opt,name=ReqBytes,proto3" json:"ReqBytes,omitempty"` //请求的端表示
}

func (x *CreateAccountReq) Reset() {
	*x = CreateAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountReq) ProtoMessage() {}

func (x *CreateAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountReq.ProtoReflect.Descriptor instead.
func (*CreateAccountReq) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{4}
}

func (x *CreateAccountReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateAccountReq) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *CreateAccountReq) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *CreateAccountReq) GetReqMessagId() int64 {
	if x != nil {
		return x.ReqMessagId
	}
	return 0
}

func (x *CreateAccountReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateAccountReq) GetReqBytes() []byte {
	if x != nil {
		return x.ReqBytes
	}
	return nil
}

type NotificationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int32  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`    //用户ID
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`                         //消息
	MsgType int32  `protobuf:"varint,3,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"` //消息类型 1,红包到期，2其他支付消息
}

func (x *NotificationReq) Reset() {
	*x = NotificationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationReq) ProtoMessage() {}

func (x *NotificationReq) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationReq.ProtoReflect.Descriptor instead.
func (*NotificationReq) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{5}
}

func (x *NotificationReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *NotificationReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *NotificationReq) GetMsgType() int32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

type NotificationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` //
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    //消息
}

func (x *NotificationResp) Reset() {
	*x = NotificationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationResp) ProtoMessage() {}

func (x *NotificationResp) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationResp.ProtoReflect.Descriptor instead.
func (*NotificationResp) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{6}
}

func (x *NotificationResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NotificationResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 创建帐号帐号信息的返回
type CreateAccountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespBytes []byte `protobuf:"bytes,1,opt,name=RespBytes,proto3" json:"RespBytes,omitempty"` //返回结构
}

func (x *CreateAccountResp) Reset() {
	*x = CreateAccountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountResp) ProtoMessage() {}

func (x *CreateAccountResp) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountResp.ProtoReflect.Descriptor instead.
func (*CreateAccountResp) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{7}
}

func (x *CreateAccountResp) GetRespBytes() []byte {
	if x != nil {
		return x.RespBytes
	}
	return nil
}

// 查询订单列表协议接口请球
type GetOrderListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int32  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                //用户ID
	KeyId       int64  `protobuf:"varint,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`                   //端ID
	IpAddr      string `protobuf:"bytes,3,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`                 //客户端的IP
	ReqMessagId int64  `protobuf:"varint,4,opt,name=req_messagId,json=reqMessagId,proto3" json:"req_messagId,omitempty"` //請求的messagId
	ReqBytes    []byte `protobuf:"bytes,5,opt,name=ReqBytes,proto3" json:"ReqBytes,omitempty"`                           //请求的端表示
}

func (x *GetOrderListReq) Reset() {
	*x = GetOrderListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderListReq) ProtoMessage() {}

func (x *GetOrderListReq) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderListReq.ProtoReflect.Descriptor instead.
func (*GetOrderListReq) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{8}
}

func (x *GetOrderListReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetOrderListReq) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *GetOrderListReq) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *GetOrderListReq) GetReqMessagId() int64 {
	if x != nil {
		return x.ReqMessagId
	}
	return 0
}

func (x *GetOrderListReq) GetReqBytes() []byte {
	if x != nil {
		return x.ReqBytes
	}
	return nil
}

// 查询订单列表协议接口的返回
type GetOrderListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespBytes []byte `protobuf:"bytes,1,opt,name=RespBytes,proto3" json:"RespBytes,omitempty"` //返回结构
}

func (x *GetOrderListResp) Reset() {
	*x = GetOrderListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderListResp) ProtoMessage() {}

func (x *GetOrderListResp) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderListResp.ProtoReflect.Descriptor instead.
func (*GetOrderListResp) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{9}
}

func (x *GetOrderListResp) GetRespBytes() []byte {
	if x != nil {
		return x.RespBytes
	}
	return nil
}

// 其它帐号支付协议走的协议接口请球
type OtherTransReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int32  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                //用户ID
	KeyId       int64  `protobuf:"varint,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`                   //端ID
	IpAddr      string `protobuf:"bytes,3,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`                 //客户端的IP
	ReqMessagId int64  `protobuf:"varint,4,opt,name=req_messagId,json=reqMessagId,proto3" json:"req_messagId,omitempty"` //請求的messagId
	ReqBytes    []byte `protobuf:"bytes,5,opt,name=ReqBytes,proto3" json:"ReqBytes,omitempty"`                           //请求的端表示
	Phone       string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`                                 //电话
}

func (x *OtherTransReq) Reset() {
	*x = OtherTransReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtherTransReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtherTransReq) ProtoMessage() {}

func (x *OtherTransReq) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtherTransReq.ProtoReflect.Descriptor instead.
func (*OtherTransReq) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{10}
}

func (x *OtherTransReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *OtherTransReq) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *OtherTransReq) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *OtherTransReq) GetReqMessagId() int64 {
	if x != nil {
		return x.ReqMessagId
	}
	return 0
}

func (x *OtherTransReq) GetReqBytes() []byte {
	if x != nil {
		return x.ReqBytes
	}
	return nil
}

func (x *OtherTransReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

// 其它帐号支付协议走的协议接口的返回
type OtherTransResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespBytes []byte `protobuf:"bytes,1,opt,name=RespBytes,proto3" json:"RespBytes,omitempty"` //返回结构
}

func (x *OtherTransResp) Reset() {
	*x = OtherTransResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtherTransResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtherTransResp) ProtoMessage() {}

func (x *OtherTransResp) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtherTransResp.ProtoReflect.Descriptor instead.
func (*OtherTransResp) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{11}
}

func (x *OtherTransResp) GetRespBytes() []byte {
	if x != nil {
		return x.RespBytes
	}
	return nil
}

// 设置红包/转账请求
type SetRDPReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Debug        *pbcomm.Debug `protobuf:"bytes,1,opt,name=Debug,proto3" json:"Debug,omitempty"`
	ReqMessageId int64         `protobuf:"varint,2,opt,name=req_messageId,json=reqMessageId,proto3" json:"req_messageId,omitempty"` //請求的messagId
	ReqBytes     []byte        `protobuf:"bytes,3,opt,name=ReqBytes,proto3" json:"ReqBytes,omitempty"`                              //请求的端表示
}

func (x *SetRDPReq) Reset() {
	*x = SetRDPReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRDPReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRDPReq) ProtoMessage() {}

func (x *SetRDPReq) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRDPReq.ProtoReflect.Descriptor instead.
func (*SetRDPReq) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{12}
}

func (x *SetRDPReq) GetDebug() *pbcomm.Debug {
	if x != nil {
		return x.Debug
	}
	return nil
}

func (x *SetRDPReq) GetReqMessageId() int64 {
	if x != nil {
		return x.ReqMessageId
	}
	return 0
}

func (x *SetRDPReq) GetReqBytes() []byte {
	if x != nil {
		return x.ReqBytes
	}
	return nil
}

// 设置红包/转账返回
type SetRDPResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespBytes []byte `protobuf:"bytes,1,opt,name=RespBytes,proto3" json:"RespBytes,omitempty"` //返回结构
}

func (x *SetRDPResp) Reset() {
	*x = SetRDPResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRDPResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRDPResp) ProtoMessage() {}

func (x *SetRDPResp) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRDPResp.ProtoReflect.Descriptor instead.
func (*SetRDPResp) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{13}
}

func (x *SetRDPResp) GetRespBytes() []byte {
	if x != nil {
		return x.RespBytes
	}
	return nil
}

// 发送红包请求
type SendRDPReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Debug        *pbcomm.Debug `protobuf:"bytes,1,opt,name=Debug,proto3" json:"Debug,omitempty"`
	ReqMessageId int64         `protobuf:"varint,2,opt,name=req_messageId,json=reqMessageId,proto3" json:"req_messageId,omitempty"` //請求的messagId
	ReqBytes     []byte        `protobuf:"bytes,3,opt,name=ReqBytes,proto3" json:"ReqBytes,omitempty"`                              //请求的端表示
	RedMessageId int32         `protobuf:"varint,4,opt,name=red_messageId,json=redMessageId,proto3" json:"red_messageId,omitempty"` //請求的messagId
	RedChanelId  int32         `protobuf:"varint,5,opt,name=red_chanelId,json=redChanelId,proto3" json:"red_chanelId,omitempty"`    //請求的messagId
}

func (x *SendRDPReq) Reset() {
	*x = SendRDPReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRDPReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRDPReq) ProtoMessage() {}

func (x *SendRDPReq) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRDPReq.ProtoReflect.Descriptor instead.
func (*SendRDPReq) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{14}
}

func (x *SendRDPReq) GetDebug() *pbcomm.Debug {
	if x != nil {
		return x.Debug
	}
	return nil
}

func (x *SendRDPReq) GetReqMessageId() int64 {
	if x != nil {
		return x.ReqMessageId
	}
	return 0
}

func (x *SendRDPReq) GetReqBytes() []byte {
	if x != nil {
		return x.ReqBytes
	}
	return nil
}

func (x *SendRDPReq) GetRedMessageId() int32 {
	if x != nil {
		return x.RedMessageId
	}
	return 0
}

func (x *SendRDPReq) GetRedChanelId() int32 {
	if x != nil {
		return x.RedChanelId
	}
	return 0
}

// 发送红包/转账返回
type SendRDPResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespBytes []byte `protobuf:"bytes,1,opt,name=RespBytes,proto3" json:"RespBytes,omitempty"` //返回结构
}

func (x *SendRDPResp) Reset() {
	*x = SendRDPResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRDPResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRDPResp) ProtoMessage() {}

func (x *SendRDPResp) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRDPResp.ProtoReflect.Descriptor instead.
func (*SendRDPResp) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{15}
}

func (x *SendRDPResp) GetRespBytes() []byte {
	if x != nil {
		return x.RespBytes
	}
	return nil
}

// 查看红包/转账请求
type CheckRDPReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Debug        *pbcomm.Debug `protobuf:"bytes,1,opt,name=Debug,proto3" json:"Debug,omitempty"`
	ReqMessageId int64         `protobuf:"varint,2,opt,name=req_messageId,json=reqMessageId,proto3" json:"req_messageId,omitempty"` //請求的messagId
	ReqBytes     []byte        `protobuf:"bytes,3,opt,name=ReqBytes,proto3" json:"ReqBytes,omitempty"`                              //请求的端表示
}

func (x *CheckRDPReq) Reset() {
	*x = CheckRDPReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckRDPReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRDPReq) ProtoMessage() {}

func (x *CheckRDPReq) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRDPReq.ProtoReflect.Descriptor instead.
func (*CheckRDPReq) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{16}
}

func (x *CheckRDPReq) GetDebug() *pbcomm.Debug {
	if x != nil {
		return x.Debug
	}
	return nil
}

func (x *CheckRDPReq) GetReqMessageId() int64 {
	if x != nil {
		return x.ReqMessageId
	}
	return 0
}

func (x *CheckRDPReq) GetReqBytes() []byte {
	if x != nil {
		return x.ReqBytes
	}
	return nil
}

// 查看红包/转账返回
type CheckRDPResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespBytes []byte `protobuf:"bytes,1,opt,name=RespBytes,proto3" json:"RespBytes,omitempty"` //返回结构
}

func (x *CheckRDPResp) Reset() {
	*x = CheckRDPResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckRDPResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRDPResp) ProtoMessage() {}

func (x *CheckRDPResp) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRDPResp.ProtoReflect.Descriptor instead.
func (*CheckRDPResp) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{17}
}

func (x *CheckRDPResp) GetRespBytes() []byte {
	if x != nil {
		return x.RespBytes
	}
	return nil
}

// 接收红包/转账请求
type ReceiveRDPReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Debug        *pbcomm.Debug `protobuf:"bytes,1,opt,name=Debug,proto3" json:"Debug,omitempty"`
	ReqMessageId int64         `protobuf:"varint,2,opt,name=req_messageId,json=reqMessageId,proto3" json:"req_messageId,omitempty"` //請求的messagId
	ReqBytes     []byte        `protobuf:"bytes,3,opt,name=ReqBytes,proto3" json:"ReqBytes,omitempty"`                              //请求的端表示
}

func (x *ReceiveRDPReq) Reset() {
	*x = ReceiveRDPReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveRDPReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveRDPReq) ProtoMessage() {}

func (x *ReceiveRDPReq) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveRDPReq.ProtoReflect.Descriptor instead.
func (*ReceiveRDPReq) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{18}
}

func (x *ReceiveRDPReq) GetDebug() *pbcomm.Debug {
	if x != nil {
		return x.Debug
	}
	return nil
}

func (x *ReceiveRDPReq) GetReqMessageId() int64 {
	if x != nil {
		return x.ReqMessageId
	}
	return 0
}

func (x *ReceiveRDPReq) GetReqBytes() []byte {
	if x != nil {
		return x.ReqBytes
	}
	return nil
}

// 接收红包/转账返回
type ReceiveRDPResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespBytes []byte `protobuf:"bytes,1,opt,name=RespBytes,proto3" json:"RespBytes,omitempty"` //返回结构
}

func (x *ReceiveRDPResp) Reset() {
	*x = ReceiveRDPResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveRDPResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveRDPResp) ProtoMessage() {}

func (x *ReceiveRDPResp) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveRDPResp.ProtoReflect.Descriptor instead.
func (*ReceiveRDPResp) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{19}
}

func (x *ReceiveRDPResp) GetRespBytes() []byte {
	if x != nil {
		return x.RespBytes
	}
	return nil
}

// 查看红包/转账详情请求
type QueryRDPReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Debug        *pbcomm.Debug `protobuf:"bytes,1,opt,name=Debug,proto3" json:"Debug,omitempty"`
	ReqMessageId int64         `protobuf:"varint,2,opt,name=req_messageId,json=reqMessageId,proto3" json:"req_messageId,omitempty"` //請求的messagId
	ReqBytes     []byte        `protobuf:"bytes,3,opt,name=ReqBytes,proto3" json:"ReqBytes,omitempty"`                              //请求的端表示
}

func (x *QueryRDPReq) Reset() {
	*x = QueryRDPReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRDPReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRDPReq) ProtoMessage() {}

func (x *QueryRDPReq) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRDPReq.ProtoReflect.Descriptor instead.
func (*QueryRDPReq) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{20}
}

func (x *QueryRDPReq) GetDebug() *pbcomm.Debug {
	if x != nil {
		return x.Debug
	}
	return nil
}

func (x *QueryRDPReq) GetReqMessageId() int64 {
	if x != nil {
		return x.ReqMessageId
	}
	return 0
}

func (x *QueryRDPReq) GetReqBytes() []byte {
	if x != nil {
		return x.ReqBytes
	}
	return nil
}

// 查看红包/转账详情返回
type QueryRDPResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespBytes []byte `protobuf:"bytes,1,opt,name=RespBytes,proto3" json:"RespBytes,omitempty"` //返回结构
}

func (x *QueryRDPResp) Reset() {
	*x = QueryRDPResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRDPResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRDPResp) ProtoMessage() {}

func (x *QueryRDPResp) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRDPResp.ProtoReflect.Descriptor instead.
func (*QueryRDPResp) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{21}
}

func (x *QueryRDPResp) GetRespBytes() []byte {
	if x != nil {
		return x.RespBytes
	}
	return nil
}

// 查看红包/转账历史记录请求
type QueryRDPHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Debug        *pbcomm.Debug `protobuf:"bytes,1,opt,name=Debug,proto3" json:"Debug,omitempty"`
	ReqMessageId int64         `protobuf:"varint,2,opt,name=req_messageId,json=reqMessageId,proto3" json:"req_messageId,omitempty"` //請求的messagId
	ReqBytes     []byte        `protobuf:"bytes,3,opt,name=ReqBytes,proto3" json:"ReqBytes,omitempty"`                              //请求的端表示
}

func (x *QueryRDPHistoryReq) Reset() {
	*x = QueryRDPHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRDPHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRDPHistoryReq) ProtoMessage() {}

func (x *QueryRDPHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRDPHistoryReq.ProtoReflect.Descriptor instead.
func (*QueryRDPHistoryReq) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{22}
}

func (x *QueryRDPHistoryReq) GetDebug() *pbcomm.Debug {
	if x != nil {
		return x.Debug
	}
	return nil
}

func (x *QueryRDPHistoryReq) GetReqMessageId() int64 {
	if x != nil {
		return x.ReqMessageId
	}
	return 0
}

func (x *QueryRDPHistoryReq) GetReqBytes() []byte {
	if x != nil {
		return x.ReqBytes
	}
	return nil
}

// 查看红包/转账历史记录返回
type QueryRDPHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespBytes []byte `protobuf:"bytes,1,opt,name=RespBytes,proto3" json:"RespBytes,omitempty"` //返回结构
}

func (x *QueryRDPHistoryResp) Reset() {
	*x = QueryRDPHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRDPHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRDPHistoryResp) ProtoMessage() {}

func (x *QueryRDPHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRDPHistoryResp.ProtoReflect.Descriptor instead.
func (*QueryRDPHistoryResp) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{23}
}

func (x *QueryRDPHistoryResp) GetRespBytes() []byte {
	if x != nil {
		return x.RespBytes
	}
	return nil
}

// 退还红包/转账详情请求
type RefundRDPReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Debug        *pbcomm.Debug `protobuf:"bytes,1,opt,name=Debug,proto3" json:"Debug,omitempty"`
	ReqMessageId int64         `protobuf:"varint,2,opt,name=req_messageId,json=reqMessageId,proto3" json:"req_messageId,omitempty"` //請求的messagId
	ReqBytes     []byte        `protobuf:"bytes,3,opt,name=ReqBytes,proto3" json:"ReqBytes,omitempty"`                              //请求的端表示
}

func (x *RefundRDPReq) Reset() {
	*x = RefundRDPReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundRDPReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundRDPReq) ProtoMessage() {}

func (x *RefundRDPReq) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundRDPReq.ProtoReflect.Descriptor instead.
func (*RefundRDPReq) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{24}
}

func (x *RefundRDPReq) GetDebug() *pbcomm.Debug {
	if x != nil {
		return x.Debug
	}
	return nil
}

func (x *RefundRDPReq) GetReqMessageId() int64 {
	if x != nil {
		return x.ReqMessageId
	}
	return 0
}

func (x *RefundRDPReq) GetReqBytes() []byte {
	if x != nil {
		return x.ReqBytes
	}
	return nil
}

// 退还红包/转账详情返回
type RefundRDPResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespBytes []byte `protobuf:"bytes,1,opt,name=RespBytes,proto3" json:"RespBytes,omitempty"` //返回结构
}

func (x *RefundRDPResp) Reset() {
	*x = RefundRDPResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundRDPResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundRDPResp) ProtoMessage() {}

func (x *RefundRDPResp) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundRDPResp.ProtoReflect.Descriptor instead.
func (*RefundRDPResp) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{25}
}

func (x *RefundRDPResp) GetRespBytes() []byte {
	if x != nil {
		return x.RespBytes
	}
	return nil
}

type SaveIconReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Debug        *pbcomm.Debug `protobuf:"bytes,1,opt,name=Debug,proto3" json:"Debug,omitempty"`
	ReqMessageId int64         `protobuf:"varint,2,opt,name=req_messageId,json=reqMessageId,proto3" json:"req_messageId,omitempty"` //請求的messagId
	ReqBytes     []byte        `protobuf:"bytes,3,opt,name=ReqBytes,proto3" json:"ReqBytes,omitempty"`                              //请求的端表示
}

func (x *SaveIconReq) Reset() {
	*x = SaveIconReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveIconReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveIconReq) ProtoMessage() {}

func (x *SaveIconReq) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveIconReq.ProtoReflect.Descriptor instead.
func (*SaveIconReq) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{26}
}

func (x *SaveIconReq) GetDebug() *pbcomm.Debug {
	if x != nil {
		return x.Debug
	}
	return nil
}

func (x *SaveIconReq) GetReqMessageId() int64 {
	if x != nil {
		return x.ReqMessageId
	}
	return 0
}

func (x *SaveIconReq) GetReqBytes() []byte {
	if x != nil {
		return x.ReqBytes
	}
	return nil
}

// 查看红包/转账详情返回
type SaveIconResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespBytes []byte `protobuf:"bytes,1,opt,name=RespBytes,proto3" json:"RespBytes,omitempty"` //返回结构
}

func (x *SaveIconResp) Reset() {
	*x = SaveIconResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveIconResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveIconResp) ProtoMessage() {}

func (x *SaveIconResp) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveIconResp.ProtoReflect.Descriptor instead.
func (*SaveIconResp) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{27}
}

func (x *SaveIconResp) GetRespBytes() []byte {
	if x != nil {
		return x.RespBytes
	}
	return nil
}

// 创建帐号协议请球
type CreateWalletReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //用户ID
	UserIp string `protobuf:"bytes,2,opt,name=user_ip,json=userIp,proto3" json:"user_ip,omitempty"`  //客户端的IP
	Phone  string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	KeyId  int64  `protobuf:"varint,4,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"` //端ID
}

func (x *CreateWalletReq) Reset() {
	*x = CreateWalletReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWalletReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletReq) ProtoMessage() {}

func (x *CreateWalletReq) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletReq.ProtoReflect.Descriptor instead.
func (*CreateWalletReq) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{28}
}

func (x *CreateWalletReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateWalletReq) GetUserIp() string {
	if x != nil {
		return x.UserIp
	}
	return ""
}

func (x *CreateWalletReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateWalletReq) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

// 创建帐号协议请球返回
type CreateWalletRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` //
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    //消息
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  //支付返回数据
}

func (x *CreateWalletRsp) Reset() {
	*x = CreateWalletRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_impayserver_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWalletRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletRsp) ProtoMessage() {}

func (x *CreateWalletRsp) ProtoReflect() protoreflect.Message {
	mi := &file_impayserver_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletRsp.ProtoReflect.Descriptor instead.
func (*CreateWalletRsp) Descriptor() ([]byte, []int) {
	return file_impayserver_proto_rawDescGZIP(), []int{29}
}

func (x *CreateWalletRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateWalletRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateWalletRsp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_impayserver_proto protoreflect.FileDescriptor

var file_impayserver_proto_rawDesc = []byte{
	0x0a, 0x11, 0x69, 0x6d, 0x70, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x69, 0x6d, 0x70, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x1a, 0x13, 0x70, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x2f, 0x70, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x71, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x52, 0x65, 0x71, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x32, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1c, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x52, 0x65, 0x73, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x73, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b, 0x65,
	0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x22, 0x62, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x52, 0x65, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x52, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52,
	0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0xb0, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x52, 0x65, 0x71, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x52, 0x65, 0x71, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x57, 0x0a, 0x0f, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x38, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x31, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x52, 0x65, 0x73, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22,
	0x99, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6b, 0x65,
	0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x71, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x52, 0x65, 0x71, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x52, 0x65, 0x71, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1c, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x52, 0x65, 0x73, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0xad, 0x01,
	0x0a, 0x0d, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x72, 0x65, 0x71, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52,
	0x65, 0x71, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x52,
	0x65, 0x71, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x2e, 0x0a,
	0x0e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1c, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x52, 0x65, 0x73, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x71, 0x0a,
	0x09, 0x53, 0x65, 0x74, 0x52, 0x44, 0x50, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x05, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x63, 0x6f,
	0x6d, 0x6d, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x52, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x71, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x52, 0x65, 0x71, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x22, 0x2a, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x52, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c,
	0x0a, 0x09, 0x52, 0x65, 0x73, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x52, 0x65, 0x73, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0xba, 0x01, 0x0a,
	0x0a, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x44, 0x50, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x05, 0x44,
	0x65, 0x62, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x63,
	0x6f, 0x6d, 0x6d, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x52, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x71, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x52, 0x65, 0x71, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65,
	0x64, 0x43, 0x68, 0x61, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x0b, 0x53, 0x65, 0x6e,
	0x64, 0x52, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x70,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x52, 0x65, 0x73,
	0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x73, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x44, 0x50, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x52, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x71, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x52, 0x65, 0x71, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x52, 0x65, 0x71, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x2c, 0x0a, 0x0c, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x52,
	0x65, 0x73, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x52, 0x65, 0x73, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x75, 0x0a, 0x0d, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x52, 0x44, 0x50, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x05, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x63, 0x6f,
	0x6d, 0x6d, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x52, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x71, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x52, 0x65, 0x71, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x22, 0x2e, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x44, 0x50, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x52, 0x65, 0x73, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x22, 0x73, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x44, 0x50, 0x52, 0x65, 0x71, 0x12,
	0x23, 0x0a, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x52, 0x05, 0x44,
	0x65, 0x62, 0x75, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x71,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x71,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x52, 0x65, 0x71,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x2c, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x44,
	0x50, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x70, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x52, 0x65, 0x73, 0x70, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x22, 0x7a, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x44, 0x50, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x05, 0x44, 0x65, 0x62,
	0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x63, 0x6f, 0x6d,
	0x6d, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x52, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x71, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x71, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x52, 0x65, 0x71, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22,
	0x33, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x44, 0x50, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x70, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x52, 0x65, 0x73, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x22, 0x74, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x44,
	0x50, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x44, 0x65, 0x62,
	0x75, 0x67, 0x52, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x72, 0x65, 0x71, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x52, 0x65, 0x71, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x52, 0x65, 0x71, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x2d, 0x0a, 0x0d, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x52,
	0x65, 0x73, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x52, 0x65, 0x73, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x73, 0x0a, 0x0b, 0x53, 0x61, 0x76,
	0x65, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x05, 0x44, 0x65, 0x62, 0x75,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x63, 0x6f, 0x6d, 0x6d,
	0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x52, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x71, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x71, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x52, 0x65, 0x71, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x2c,
	0x0a, 0x0c, 0x53, 0x61, 0x76, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c,
	0x0a, 0x09, 0x52, 0x65, 0x73, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x52, 0x65, 0x73, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x70, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0x4b,
	0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xf8, 0x08, 0x0a, 0x0d,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a,
	0x08, 0x53, 0x61, 0x76, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x69, 0x6d, 0x70, 0x61,
	0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x49, 0x63, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x69, 0x6d, 0x70, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x69, 0x6d, 0x70, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x69, 0x6d, 0x70, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x2e, 0x69, 0x6d, 0x70, 0x61, 0x79,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x69, 0x6d, 0x70, 0x61,
	0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x2e,
	0x69, 0x6d, 0x70, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x69,
	0x6d, 0x70, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c,
	0x2e, 0x69, 0x6d, 0x70, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x69,
	0x6d, 0x70, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x47, 0x0a,
	0x0a, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x12, 0x1a, 0x2e, 0x69, 0x6d,
	0x70, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x69, 0x6d, 0x70, 0x61, 0x79, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x2e, 0x69, 0x6d, 0x70, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e,
	0x69, 0x6d, 0x70, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3b,
	0x0a, 0x06, 0x53, 0x65, 0x74, 0x52, 0x44, 0x50, 0x12, 0x16, 0x2e, 0x69, 0x6d, 0x70, 0x61, 0x79,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x44, 0x50, 0x52, 0x65, 0x71,
	0x1a, 0x17, 0x2e, 0x69, 0x6d, 0x70, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x74, 0x52, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x07, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x44, 0x50, 0x12, 0x17, 0x2e, 0x69, 0x6d, 0x70, 0x61, 0x79, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x44, 0x50, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x69, 0x6d, 0x70, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x52, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x08, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x44, 0x50, 0x12, 0x18, 0x2e, 0x69, 0x6d, 0x70, 0x61, 0x79, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x44, 0x50, 0x52, 0x65,
	0x71, 0x1a, 0x19, 0x2e, 0x69, 0x6d, 0x70, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x47,
	0x0a, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x44, 0x50, 0x12, 0x1a, 0x2e, 0x69,
	0x6d, 0x70, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x52, 0x44, 0x50, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x69, 0x6d, 0x70, 0x61, 0x79,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x44,
	0x50, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x44, 0x50, 0x12, 0x18, 0x2e, 0x69, 0x6d, 0x70, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x44, 0x50, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x69, 0x6d, 0x70, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0f, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x44, 0x50, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x2e,
	0x69, 0x6d, 0x70, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x44, 0x50, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x69, 0x6d, 0x70, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x44, 0x50, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x44, 0x50, 0x12,
	0x19, 0x2e, 0x69, 0x6d, 0x70, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x44, 0x50, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x69, 0x6d, 0x70,
	0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52,
	0x44, 0x50, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x69, 0x6d, 0x70, 0x61, 0x79,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x69, 0x6d, 0x70, 0x61, 0x79, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x42, 0x1d, 0x5a, 0x1b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x69, 0x6d, 0x70, 0x61, 0x79, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_impayserver_proto_rawDescOnce sync.Once
	file_impayserver_proto_rawDescData = file_impayserver_proto_rawDesc
)

func file_impayserver_proto_rawDescGZIP() []byte {
	file_impayserver_proto_rawDescOnce.Do(func() {
		file_impayserver_proto_rawDescData = protoimpl.X.CompressGZIP(file_impayserver_proto_rawDescData)
	})
	return file_impayserver_proto_rawDescData
}

var file_impayserver_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_impayserver_proto_goTypes = []interface{}{
	(*GetAccountInfoReq)(nil),   // 0: impayserver.GetAccountInfoReq
	(*GetAccountInfoResp)(nil),  // 1: impayserver.GetAccountInfoResp
	(*GetUserAcctInfoReq)(nil),  // 2: impayserver.GetUserAcctInfoReq
	(*GetUserAcctInfoRsp)(nil),  // 3: impayserver.GetUserAcctInfoRsp
	(*CreateAccountReq)(nil),    // 4: impayserver.CreateAccountReq
	(*NotificationReq)(nil),     // 5: impayserver.NotificationReq
	(*NotificationResp)(nil),    // 6: impayserver.NotificationResp
	(*CreateAccountResp)(nil),   // 7: impayserver.CreateAccountResp
	(*GetOrderListReq)(nil),     // 8: impayserver.GetOrderListReq
	(*GetOrderListResp)(nil),    // 9: impayserver.GetOrderListResp
	(*OtherTransReq)(nil),       // 10: impayserver.OtherTransReq
	(*OtherTransResp)(nil),      // 11: impayserver.OtherTransResp
	(*SetRDPReq)(nil),           // 12: impayserver.SetRDPReq
	(*SetRDPResp)(nil),          // 13: impayserver.SetRDPResp
	(*SendRDPReq)(nil),          // 14: impayserver.SendRDPReq
	(*SendRDPResp)(nil),         // 15: impayserver.SendRDPResp
	(*CheckRDPReq)(nil),         // 16: impayserver.CheckRDPReq
	(*CheckRDPResp)(nil),        // 17: impayserver.CheckRDPResp
	(*ReceiveRDPReq)(nil),       // 18: impayserver.ReceiveRDPReq
	(*ReceiveRDPResp)(nil),      // 19: impayserver.ReceiveRDPResp
	(*QueryRDPReq)(nil),         // 20: impayserver.QueryRDPReq
	(*QueryRDPResp)(nil),        // 21: impayserver.QueryRDPResp
	(*QueryRDPHistoryReq)(nil),  // 22: impayserver.QueryRDPHistoryReq
	(*QueryRDPHistoryResp)(nil), // 23: impayserver.QueryRDPHistoryResp
	(*RefundRDPReq)(nil),        // 24: impayserver.RefundRDPReq
	(*RefundRDPResp)(nil),       // 25: impayserver.RefundRDPResp
	(*SaveIconReq)(nil),         // 26: impayserver.SaveIconReq
	(*SaveIconResp)(nil),        // 27: impayserver.SaveIconResp
	(*CreateWalletReq)(nil),     // 28: impayserver.CreateWalletReq
	(*CreateWalletRsp)(nil),     // 29: impayserver.CreateWalletRsp
	(*pbcomm.Debug)(nil),        // 30: pbcomm.Debug
}
var file_impayserver_proto_depIdxs = []int32{
	30, // 0: impayserver.SetRDPReq.Debug:type_name -> pbcomm.Debug
	30, // 1: impayserver.SendRDPReq.Debug:type_name -> pbcomm.Debug
	30, // 2: impayserver.CheckRDPReq.Debug:type_name -> pbcomm.Debug
	30, // 3: impayserver.ReceiveRDPReq.Debug:type_name -> pbcomm.Debug
	30, // 4: impayserver.QueryRDPReq.Debug:type_name -> pbcomm.Debug
	30, // 5: impayserver.QueryRDPHistoryReq.Debug:type_name -> pbcomm.Debug
	30, // 6: impayserver.RefundRDPReq.Debug:type_name -> pbcomm.Debug
	30, // 7: impayserver.SaveIconReq.Debug:type_name -> pbcomm.Debug
	26, // 8: impayserver.ServerService.SaveIcon:input_type -> impayserver.SaveIconReq
	0,  // 9: impayserver.ServerService.GetAccountInfo:input_type -> impayserver.GetAccountInfoReq
	2,  // 10: impayserver.ServerService.GetUserAcctInfo:input_type -> impayserver.GetUserAcctInfoReq
	4,  // 11: impayserver.ServerService.CreateAccount:input_type -> impayserver.CreateAccountReq
	8,  // 12: impayserver.ServerService.GetOrderList:input_type -> impayserver.GetOrderListReq
	10, // 13: impayserver.ServerService.OtherTrans:input_type -> impayserver.OtherTransReq
	5,  // 14: impayserver.ServerService.PayServerNotification:input_type -> impayserver.NotificationReq
	12, // 15: impayserver.ServerService.SetRDP:input_type -> impayserver.SetRDPReq
	14, // 16: impayserver.ServerService.SendRDP:input_type -> impayserver.SendRDPReq
	16, // 17: impayserver.ServerService.CheckRDP:input_type -> impayserver.CheckRDPReq
	18, // 18: impayserver.ServerService.ReceiveRDP:input_type -> impayserver.ReceiveRDPReq
	20, // 19: impayserver.ServerService.QueryRDP:input_type -> impayserver.QueryRDPReq
	22, // 20: impayserver.ServerService.QueryRDPHistory:input_type -> impayserver.QueryRDPHistoryReq
	24, // 21: impayserver.ServerService.RefundRDP:input_type -> impayserver.RefundRDPReq
	28, // 22: impayserver.ServerService.CreateWallet:input_type -> impayserver.CreateWalletReq
	27, // 23: impayserver.ServerService.SaveIcon:output_type -> impayserver.SaveIconResp
	1,  // 24: impayserver.ServerService.GetAccountInfo:output_type -> impayserver.GetAccountInfoResp
	3,  // 25: impayserver.ServerService.GetUserAcctInfo:output_type -> impayserver.GetUserAcctInfoRsp
	7,  // 26: impayserver.ServerService.CreateAccount:output_type -> impayserver.CreateAccountResp
	9,  // 27: impayserver.ServerService.GetOrderList:output_type -> impayserver.GetOrderListResp
	11, // 28: impayserver.ServerService.OtherTrans:output_type -> impayserver.OtherTransResp
	6,  // 29: impayserver.ServerService.PayServerNotification:output_type -> impayserver.NotificationResp
	13, // 30: impayserver.ServerService.SetRDP:output_type -> impayserver.SetRDPResp
	15, // 31: impayserver.ServerService.SendRDP:output_type -> impayserver.SendRDPResp
	17, // 32: impayserver.ServerService.CheckRDP:output_type -> impayserver.CheckRDPResp
	19, // 33: impayserver.ServerService.ReceiveRDP:output_type -> impayserver.ReceiveRDPResp
	21, // 34: impayserver.ServerService.QueryRDP:output_type -> impayserver.QueryRDPResp
	23, // 35: impayserver.ServerService.QueryRDPHistory:output_type -> impayserver.QueryRDPHistoryResp
	25, // 36: impayserver.ServerService.RefundRDP:output_type -> impayserver.RefundRDPResp
	29, // 37: impayserver.ServerService.CreateWallet:output_type -> impayserver.CreateWalletRsp
	23, // [23:38] is the sub-list for method output_type
	8,  // [8:23] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_impayserver_proto_init() }
func file_impayserver_proto_init() {
	if File_impayserver_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_impayserver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAcctInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAcctInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtherTransReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtherTransResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRDPReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRDPResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRDPReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRDPResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckRDPReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckRDPResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveRDPReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveRDPResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRDPReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRDPResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRDPHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRDPHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundRDPReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundRDPResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveIconReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveIconResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWalletReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_impayserver_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWalletRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_impayserver_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_impayserver_proto_goTypes,
		DependencyIndexes: file_impayserver_proto_depIdxs,
		MessageInfos:      file_impayserver_proto_msgTypes,
	}.Build()
	File_impayserver_proto = out.File
	file_impayserver_proto_rawDesc = nil
	file_impayserver_proto_goTypes = nil
	file_impayserver_proto_depIdxs = nil
}
