// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: imvedioappserver.proto

package imvedioappserver

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 错误码
type ErrorCode int32

const (
	// 成功
	ErrorCode_SUCCESS ErrorCode = 0
	// 内部错误
	ErrorCode_INTERNAL_ERROR ErrorCode = 1
	// 房间不存在
	ErrorCode_ROOM_NOT_EXIST ErrorCode = 2
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0: "SUCCESS",
		1: "INTERNAL_ERROR",
		2: "ROOM_NOT_EXIST",
	}
	ErrorCode_value = map[string]int32{
		"SUCCESS":        0,
		"INTERNAL_ERROR": 1,
		"ROOM_NOT_EXIST": 2,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_imvedioappserver_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_imvedioappserver_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{0}
}

type ChgModelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// room id
	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Video  int32  `protobuf:"varint,2,opt,name=Video,proto3" json:"Video,omitempty"`
}

func (x *ChgModelReq) Reset() {
	*x = ChgModelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChgModelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChgModelReq) ProtoMessage() {}

func (x *ChgModelReq) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChgModelReq.ProtoReflect.Descriptor instead.
func (*ChgModelReq) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{0}
}

func (x *ChgModelReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ChgModelReq) GetVideo() int32 {
	if x != nil {
		return x.Video
	}
	return 0
}

type ModelRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// room id
	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Video  int32  `protobuf:"varint,2,opt,name=Video,proto3" json:"Video,omitempty"`
	Code   int32  `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Msg    string `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ModelRsp) Reset() {
	*x = ModelRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelRsp) ProtoMessage() {}

func (x *ModelRsp) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelRsp.ProtoReflect.Descriptor instead.
func (*ModelRsp) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{1}
}

func (x *ModelRsp) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ModelRsp) GetVideo() int32 {
	if x != nil {
		return x.Video
	}
	return 0
}

func (x *ModelRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ModelRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ModelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// room id
	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *ModelReq) Reset() {
	*x = ModelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelReq) ProtoMessage() {}

func (x *ModelReq) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelReq.ProtoReflect.Descriptor instead.
func (*ModelReq) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{2}
}

func (x *ModelReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type IdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// room id
	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *IdReq) Reset() {
	*x = IdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdReq) ProtoMessage() {}

func (x *IdReq) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdReq.ProtoReflect.Descriptor instead.
func (*IdReq) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{3}
}

func (x *IdReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type UserIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserIdReq) Reset() {
	*x = UserIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIdReq) ProtoMessage() {}

func (x *UserIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIdReq.ProtoReflect.Descriptor instead.
func (*UserIdReq) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{4}
}

func (x *UserIdReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UsersIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	UserId []int32 `protobuf:"varint,1,rep,packed,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoomId string  `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *UsersIdReq) Reset() {
	*x = UsersIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersIdReq) ProtoMessage() {}

func (x *UsersIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersIdReq.ProtoReflect.Descriptor instead.
func (*UsersIdReq) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{5}
}

func (x *UsersIdReq) GetUserId() []int32 {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *UsersIdReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type BoolResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	Code   ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=imvedioappserver.ErrorCode" json:"code,omitempty"`
	Result bool      `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *BoolResult) Reset() {
	*x = BoolResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolResult) ProtoMessage() {}

func (x *BoolResult) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolResult.ProtoReflect.Descriptor instead.
func (*BoolResult) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{6}
}

func (x *BoolResult) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_SUCCESS
}

func (x *BoolResult) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 创建房间请求
type CreateRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 房间创建者id
	AdminId int32 `protobuf:"varint,1,opt,name=admin_id,json=adminId,proto3" json:"admin_id,omitempty"`
	// 创建者key id
	AdminKeyId int64 `protobuf:"varint,2,opt,name=admin_key_id,json=adminKeyId,proto3" json:"admin_key_id,omitempty"`
	// 加入房间的用户
	UserIds []int32 `protobuf:"varint,3,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	Video   int32   `protobuf:"varint,4,opt,name=Video,proto3" json:"Video,omitempty"`
}

func (x *CreateRoomReq) Reset() {
	*x = CreateRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomReq) ProtoMessage() {}

func (x *CreateRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomReq.ProtoReflect.Descriptor instead.
func (*CreateRoomReq) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{7}
}

func (x *CreateRoomReq) GetAdminId() int32 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *CreateRoomReq) GetAdminKeyId() int64 {
	if x != nil {
		return x.AdminKeyId
	}
	return 0
}

func (x *CreateRoomReq) GetUserIds() []int32 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *CreateRoomReq) GetVideo() int32 {
	if x != nil {
		return x.Video
	}
	return 0
}

// 创建房间回复
type CreateRoomReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误码
	Code ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=imvedioappserver.ErrorCode" json:"code,omitempty"`
	// 房间id
	RoomId string `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	// Token， key：用户id，value：用户对应Token
	Tokens map[int32]*RtcToken `protobuf:"bytes,3,rep,name=tokens,proto3" json:"tokens,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateRoomReply) Reset() {
	*x = CreateRoomReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomReply) ProtoMessage() {}

func (x *CreateRoomReply) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomReply.ProtoReflect.Descriptor instead.
func (*CreateRoomReply) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{8}
}

func (x *CreateRoomReply) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_SUCCESS
}

func (x *CreateRoomReply) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *CreateRoomReply) GetTokens() map[int32]*RtcToken {
	if x != nil {
		return x.Tokens
	}
	return nil
}

// 音视频通信Token
type RtcToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 阿里rtc appId
	AppId string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// 阿里rtc服务地址
	Gslb []string `protobuf:"bytes,2,rep,name=gslb,proto3" json:"gslb,omitempty"`
	// 房间id
	RoomId string `protobuf:"bytes,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	// 随机值以“AK-”（使用app key验证方式）开头，,格式：AK-xxx
	Nonce string `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// Token过期时间
	Timestamp int64 `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// 用户id
	UserId int32 `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// token
	Token string `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *RtcToken) Reset() {
	*x = RtcToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RtcToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RtcToken) ProtoMessage() {}

func (x *RtcToken) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RtcToken.ProtoReflect.Descriptor instead.
func (*RtcToken) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{9}
}

func (x *RtcToken) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *RtcToken) GetGslb() []string {
	if x != nil {
		return x.Gslb
	}
	return nil
}

func (x *RtcToken) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RtcToken) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *RtcToken) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *RtcToken) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RtcToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 获取Token请求
type GetTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 房间id
	RoomId string `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *GetTokenReq) Reset() {
	*x = GetTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenReq) ProtoMessage() {}

func (x *GetTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenReq.ProtoReflect.Descriptor instead.
func (*GetTokenReq) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{10}
}

func (x *GetTokenReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetTokenReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

// 获取Token响应
type GetTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误码
	Code ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=imvedioappserver.ErrorCode" json:"code,omitempty"`
	// Token
	Token *RtcToken `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetTokenReply) Reset() {
	*x = GetTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenReply) ProtoMessage() {}

func (x *GetTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenReply.ProtoReflect.Descriptor instead.
func (*GetTokenReply) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{11}
}

func (x *GetTokenReply) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_SUCCESS
}

func (x *GetTokenReply) GetToken() *RtcToken {
	if x != nil {
		return x.Token
	}
	return nil
}

// 批量获取Token请求
type BatchGetTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id列表
	UserIds []int32 `protobuf:"varint,1,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	// 房间id
	RoomId string `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *BatchGetTokenReq) Reset() {
	*x = BatchGetTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetTokenReq) ProtoMessage() {}

func (x *BatchGetTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetTokenReq.ProtoReflect.Descriptor instead.
func (*BatchGetTokenReq) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{12}
}

func (x *BatchGetTokenReq) GetUserIds() []int32 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *BatchGetTokenReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

// 批量获取Token请求
type BatchGetTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误码
	Code ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=imvedioappserver.ErrorCode" json:"code,omitempty"`
	// Token， key：用户id，value：用户对应Token
	Tokens map[int32]*RtcToken `protobuf:"bytes,2,rep,name=tokens,proto3" json:"tokens,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BatchGetTokenReply) Reset() {
	*x = BatchGetTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetTokenReply) ProtoMessage() {}

func (x *BatchGetTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetTokenReply.ProtoReflect.Descriptor instead.
func (*BatchGetTokenReply) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{13}
}

func (x *BatchGetTokenReply) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_SUCCESS
}

func (x *BatchGetTokenReply) GetTokens() map[int32]*RtcToken {
	if x != nil {
		return x.Tokens
	}
	return nil
}

// 校验Token请求
type VerifyTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 房间id
	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	// 用户ID
	UserId int32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Token值
	Token string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	// 随机值以“AK-”（使用app key验证方式）开头，,格式：AK-xxx
	Nonce string `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// Token过期时间
	Timestamp int64 `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *VerifyTokenReq) Reset() {
	*x = VerifyTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyTokenReq) ProtoMessage() {}

func (x *VerifyTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyTokenReq.ProtoReflect.Descriptor instead.
func (*VerifyTokenReq) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{14}
}

func (x *VerifyTokenReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *VerifyTokenReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *VerifyTokenReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *VerifyTokenReq) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *VerifyTokenReq) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 校验Token响应
type VerifyTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=imvedioappserver.ErrorCode" json:"code,omitempty"`
	// 是否是有效的
	IsValid bool `protobuf:"varint,2,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
}

func (x *VerifyTokenReply) Reset() {
	*x = VerifyTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyTokenReply) ProtoMessage() {}

func (x *VerifyTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyTokenReply.ProtoReflect.Descriptor instead.
func (*VerifyTokenReply) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{15}
}

func (x *VerifyTokenReply) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_SUCCESS
}

func (x *VerifyTokenReply) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

// room_id 获取用户请求
type GetUsersByRoomIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 房间ID
	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *GetUsersByRoomIdReq) Reset() {
	*x = GetUsersByRoomIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersByRoomIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersByRoomIdReq) ProtoMessage() {}

func (x *GetUsersByRoomIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersByRoomIdReq.ProtoReflect.Descriptor instead.
func (*GetUsersByRoomIdReq) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{16}
}

func (x *GetUsersByRoomIdReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

// room_id 获取用户回复
type GetUsersByRoomIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=imvedioappserver.ErrorCode" json:"code,omitempty"`
	// 房间创建者id
	AdminId int32 `protobuf:"varint,2,opt,name=admin_id,json=adminId,proto3" json:"admin_id,omitempty"`
	// 房间里的用户列表
	UserIds []int32 `protobuf:"varint,3,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
}

func (x *GetUsersByRoomIdReply) Reset() {
	*x = GetUsersByRoomIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersByRoomIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersByRoomIdReply) ProtoMessage() {}

func (x *GetUsersByRoomIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersByRoomIdReply.ProtoReflect.Descriptor instead.
func (*GetUsersByRoomIdReply) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{17}
}

func (x *GetUsersByRoomIdReply) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_SUCCESS
}

func (x *GetUsersByRoomIdReply) GetAdminId() int32 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *GetUsersByRoomIdReply) GetUserIds() []int32 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

// 获取房间创建者信息请求
type GetRoomAdminUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 房间ID
	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *GetRoomAdminUserReq) Reset() {
	*x = GetRoomAdminUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomAdminUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomAdminUserReq) ProtoMessage() {}

func (x *GetRoomAdminUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomAdminUserReq.ProtoReflect.Descriptor instead.
func (*GetRoomAdminUserReq) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{18}
}

func (x *GetRoomAdminUserReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

// 获取房间创建者信息响应
type GetRoomAdminUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=imvedioappserver.ErrorCode" json:"code,omitempty"`
	// 房间创建者id
	UserId int32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 房间创建者 key id
	KeyId int64 `protobuf:"varint,3,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *GetRoomAdminUserReply) Reset() {
	*x = GetRoomAdminUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomAdminUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomAdminUserReply) ProtoMessage() {}

func (x *GetRoomAdminUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomAdminUserReply.ProtoReflect.Descriptor instead.
func (*GetRoomAdminUserReply) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{19}
}

func (x *GetRoomAdminUserReply) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_SUCCESS
}

func (x *GetRoomAdminUserReply) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetRoomAdminUserReply) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

// 保存参与者key id
type SaveParticipantKeyIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	// 参与者key id
	KeyIds map[int32]int64 `protobuf:"bytes,2,rep,name=key_ids,json=keyIds,proto3" json:"key_ids,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *SaveParticipantKeyIdReq) Reset() {
	*x = SaveParticipantKeyIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveParticipantKeyIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveParticipantKeyIdReq) ProtoMessage() {}

func (x *SaveParticipantKeyIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveParticipantKeyIdReq.ProtoReflect.Descriptor instead.
func (*SaveParticipantKeyIdReq) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{20}
}

func (x *SaveParticipantKeyIdReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *SaveParticipantKeyIdReq) GetKeyIds() map[int32]int64 {
	if x != nil {
		return x.KeyIds
	}
	return nil
}

// 保存参与者 key ID 响应
type SaveParticipantKeyIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=imvedioappserver.ErrorCode" json:"code,omitempty"`
	Ok   bool      `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *SaveParticipantKeyIdReply) Reset() {
	*x = SaveParticipantKeyIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveParticipantKeyIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveParticipantKeyIdReply) ProtoMessage() {}

func (x *SaveParticipantKeyIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveParticipantKeyIdReply.ProtoReflect.Descriptor instead.
func (*SaveParticipantKeyIdReply) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{21}
}

func (x *SaveParticipantKeyIdReply) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_SUCCESS
}

func (x *SaveParticipantKeyIdReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

// 获取参与者key id
type GetParticipantKeyIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *GetParticipantKeyIdReq) Reset() {
	*x = GetParticipantKeyIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetParticipantKeyIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParticipantKeyIdReq) ProtoMessage() {}

func (x *GetParticipantKeyIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParticipantKeyIdReq.ProtoReflect.Descriptor instead.
func (*GetParticipantKeyIdReq) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{22}
}

func (x *GetParticipantKeyIdReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type GetParticipantKeyIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   ErrorCode       `protobuf:"varint,1,opt,name=code,proto3,enum=imvedioappserver.ErrorCode" json:"code,omitempty"`
	KeyIds map[int32]int64 `protobuf:"bytes,2,rep,name=key_ids,json=keyIds,proto3" json:"key_ids,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetParticipantKeyIdReply) Reset() {
	*x = GetParticipantKeyIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imvedioappserver_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetParticipantKeyIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParticipantKeyIdReply) ProtoMessage() {}

func (x *GetParticipantKeyIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_imvedioappserver_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParticipantKeyIdReply.ProtoReflect.Descriptor instead.
func (*GetParticipantKeyIdReply) Descriptor() ([]byte, []int) {
	return file_imvedioappserver_proto_rawDescGZIP(), []int{23}
}

func (x *GetParticipantKeyIdReply) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_SUCCESS
}

func (x *GetParticipantKeyIdReply) GetKeyIds() map[int32]int64 {
	if x != nil {
		return x.KeyIds
	}
	return nil
}

var File_imvedioappserver_proto protoreflect.FileDescriptor

var file_imvedioappserver_proto_rawDesc = []byte{
	0x0a, 0x16, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69,
	0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x3c, 0x0a, 0x0b, 0x43, 0x68,
	0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x22, 0x5f, 0x0a, 0x08, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x23, 0x0a, 0x08, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x20,
	0x0a, 0x05, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x22, 0x24, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x0a, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x7d, 0x0a,
	0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x22, 0xf9, 0x01, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x2f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x06, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6d, 0x76,
	0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x1a, 0x55, 0x0a, 0x0b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x74, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb1, 0x01, 0x0a, 0x08, 0x52, 0x74, 0x63,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x73, 0x6c, 0x62, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x67, 0x73, 0x6c, 0x62,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3f, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x72, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x69,
	0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x30, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x52, 0x74, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x46, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x12, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x2f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x48, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x1a, 0x55, 0x0a, 0x0b, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6d,
	0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52,
	0x74, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x8c, 0x01, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x22, 0x5e, 0x0a, 0x10, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x22, 0x2e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x52,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x22, 0x7e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x52,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64,
	0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x73, 0x22, 0x2e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x22, 0x78, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64,
	0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0xbd, 0x01, 0x0a, 0x17,
	0x53, 0x61, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4b,
	0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x12, 0x4e, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x2e, 0x4b, 0x65, 0x79,
	0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x73,
	0x1a, 0x39, 0x0a, 0x0b, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5c, 0x0a, 0x19, 0x53,
	0x61, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4b, 0x65,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f,
	0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x31, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0xd7, 0x01, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4b,
	0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69,
	0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x4f, 0x0a, 0x07, 0x6b, 0x65,
	0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x69, 0x6d,
	0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4b, 0x65, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4b,
	0x65, 0x79, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x40, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x02, 0x32, 0x88, 0x09, 0x0a, 0x0b, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1f, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f,
	0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69,
	0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64,
	0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69,
	0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0d, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x2e, 0x69, 0x6d,
	0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x24, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f,
	0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64,
	0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x64,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x25, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x69, 0x6d, 0x76, 0x65,
	0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64,
	0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x27, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x14, 0x53, 0x61,
	0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4b, 0x65, 0x79,
	0x49, 0x64, 0x12, 0x29, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e,
	0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4b, 0x65,
	0x79, 0x49, 0x64, 0x12, 0x28, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e,
	0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4b,
	0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x2e,
	0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x69, 0x6d, 0x76,
	0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0e, 0x4c, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1c, 0x2e, 0x69,
	0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x69, 0x6d, 0x76,
	0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x08, 0x4b, 0x65,
	0x65, 0x70, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x17, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f,
	0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12,
	0x4c, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1d,
	0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x43, 0x68, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e,
	0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x44, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1a, 0x2e, 0x69, 0x6d, 0x76, 0x65,
	0x64, 0x69, 0x6f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61,
	0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x73,
	0x70, 0x22, 0x00, 0x42, 0x22, 0x5a, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x70, 0x72, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x69, 0x6d, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x61, 0x70,
	0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_imvedioappserver_proto_rawDescOnce sync.Once
	file_imvedioappserver_proto_rawDescData = file_imvedioappserver_proto_rawDesc
)

func file_imvedioappserver_proto_rawDescGZIP() []byte {
	file_imvedioappserver_proto_rawDescOnce.Do(func() {
		file_imvedioappserver_proto_rawDescData = protoimpl.X.CompressGZIP(file_imvedioappserver_proto_rawDescData)
	})
	return file_imvedioappserver_proto_rawDescData
}

var file_imvedioappserver_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_imvedioappserver_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_imvedioappserver_proto_goTypes = []interface{}{
	(ErrorCode)(0),                    // 0: imvedioappserver.ErrorCode
	(*ChgModelReq)(nil),               // 1: imvedioappserver.ChgModelReq
	(*ModelRsp)(nil),                  // 2: imvedioappserver.ModelRsp
	(*ModelReq)(nil),                  // 3: imvedioappserver.ModelReq
	(*IdReq)(nil),                     // 4: imvedioappserver.IdReq
	(*UserIdReq)(nil),                 // 5: imvedioappserver.UserIdReq
	(*UsersIdReq)(nil),                // 6: imvedioappserver.UsersIdReq
	(*BoolResult)(nil),                // 7: imvedioappserver.BoolResult
	(*CreateRoomReq)(nil),             // 8: imvedioappserver.CreateRoomReq
	(*CreateRoomReply)(nil),           // 9: imvedioappserver.CreateRoomReply
	(*RtcToken)(nil),                  // 10: imvedioappserver.RtcToken
	(*GetTokenReq)(nil),               // 11: imvedioappserver.GetTokenReq
	(*GetTokenReply)(nil),             // 12: imvedioappserver.GetTokenReply
	(*BatchGetTokenReq)(nil),          // 13: imvedioappserver.BatchGetTokenReq
	(*BatchGetTokenReply)(nil),        // 14: imvedioappserver.BatchGetTokenReply
	(*VerifyTokenReq)(nil),            // 15: imvedioappserver.VerifyTokenReq
	(*VerifyTokenReply)(nil),          // 16: imvedioappserver.VerifyTokenReply
	(*GetUsersByRoomIdReq)(nil),       // 17: imvedioappserver.GetUsersByRoomIdReq
	(*GetUsersByRoomIdReply)(nil),     // 18: imvedioappserver.GetUsersByRoomIdReply
	(*GetRoomAdminUserReq)(nil),       // 19: imvedioappserver.GetRoomAdminUserReq
	(*GetRoomAdminUserReply)(nil),     // 20: imvedioappserver.GetRoomAdminUserReply
	(*SaveParticipantKeyIdReq)(nil),   // 21: imvedioappserver.SaveParticipantKeyIdReq
	(*SaveParticipantKeyIdReply)(nil), // 22: imvedioappserver.SaveParticipantKeyIdReply
	(*GetParticipantKeyIdReq)(nil),    // 23: imvedioappserver.GetParticipantKeyIdReq
	(*GetParticipantKeyIdReply)(nil),  // 24: imvedioappserver.GetParticipantKeyIdReply
	nil,                               // 25: imvedioappserver.CreateRoomReply.TokensEntry
	nil,                               // 26: imvedioappserver.BatchGetTokenReply.TokensEntry
	nil,                               // 27: imvedioappserver.SaveParticipantKeyIdReq.KeyIdsEntry
	nil,                               // 28: imvedioappserver.GetParticipantKeyIdReply.KeyIdsEntry
}
var file_imvedioappserver_proto_depIdxs = []int32{
	0,  // 0: imvedioappserver.BoolResult.code:type_name -> imvedioappserver.ErrorCode
	0,  // 1: imvedioappserver.CreateRoomReply.code:type_name -> imvedioappserver.ErrorCode
	25, // 2: imvedioappserver.CreateRoomReply.tokens:type_name -> imvedioappserver.CreateRoomReply.TokensEntry
	0,  // 3: imvedioappserver.GetTokenReply.code:type_name -> imvedioappserver.ErrorCode
	10, // 4: imvedioappserver.GetTokenReply.token:type_name -> imvedioappserver.RtcToken
	0,  // 5: imvedioappserver.BatchGetTokenReply.code:type_name -> imvedioappserver.ErrorCode
	26, // 6: imvedioappserver.BatchGetTokenReply.tokens:type_name -> imvedioappserver.BatchGetTokenReply.TokensEntry
	0,  // 7: imvedioappserver.VerifyTokenReply.code:type_name -> imvedioappserver.ErrorCode
	0,  // 8: imvedioappserver.GetUsersByRoomIdReply.code:type_name -> imvedioappserver.ErrorCode
	0,  // 9: imvedioappserver.GetRoomAdminUserReply.code:type_name -> imvedioappserver.ErrorCode
	27, // 10: imvedioappserver.SaveParticipantKeyIdReq.key_ids:type_name -> imvedioappserver.SaveParticipantKeyIdReq.KeyIdsEntry
	0,  // 11: imvedioappserver.SaveParticipantKeyIdReply.code:type_name -> imvedioappserver.ErrorCode
	0,  // 12: imvedioappserver.GetParticipantKeyIdReply.code:type_name -> imvedioappserver.ErrorCode
	28, // 13: imvedioappserver.GetParticipantKeyIdReply.key_ids:type_name -> imvedioappserver.GetParticipantKeyIdReply.KeyIdsEntry
	10, // 14: imvedioappserver.CreateRoomReply.TokensEntry.value:type_name -> imvedioappserver.RtcToken
	10, // 15: imvedioappserver.BatchGetTokenReply.TokensEntry.value:type_name -> imvedioappserver.RtcToken
	8,  // 16: imvedioappserver.VideoServer.CreateRoom:input_type -> imvedioappserver.CreateRoomReq
	11, // 17: imvedioappserver.VideoServer.GetToken:input_type -> imvedioappserver.GetTokenReq
	13, // 18: imvedioappserver.VideoServer.BatchGetToken:input_type -> imvedioappserver.BatchGetTokenReq
	15, // 19: imvedioappserver.VideoServer.VerifyToken:input_type -> imvedioappserver.VerifyTokenReq
	17, // 20: imvedioappserver.VideoServer.GetUsersByRoomId:input_type -> imvedioappserver.GetUsersByRoomIdReq
	19, // 21: imvedioappserver.VideoServer.GetRoomAdminUser:input_type -> imvedioappserver.GetRoomAdminUserReq
	21, // 22: imvedioappserver.VideoServer.SaveParticipantKeyId:input_type -> imvedioappserver.SaveParticipantKeyIdReq
	23, // 23: imvedioappserver.VideoServer.GetParticipantKeyId:input_type -> imvedioappserver.GetParticipantKeyIdReq
	5,  // 24: imvedioappserver.VideoServer.GetUserMeeting:input_type -> imvedioappserver.UserIdReq
	6,  // 25: imvedioappserver.VideoServer.LetUserOffLine:input_type -> imvedioappserver.UsersIdReq
	4,  // 26: imvedioappserver.VideoServer.KeepLive:input_type -> imvedioappserver.IdReq
	1,  // 27: imvedioappserver.VideoServer.ChangeModel:input_type -> imvedioappserver.ChgModelReq
	3,  // 28: imvedioappserver.VideoServer.GetModel:input_type -> imvedioappserver.ModelReq
	9,  // 29: imvedioappserver.VideoServer.CreateRoom:output_type -> imvedioappserver.CreateRoomReply
	12, // 30: imvedioappserver.VideoServer.GetToken:output_type -> imvedioappserver.GetTokenReply
	14, // 31: imvedioappserver.VideoServer.BatchGetToken:output_type -> imvedioappserver.BatchGetTokenReply
	16, // 32: imvedioappserver.VideoServer.VerifyToken:output_type -> imvedioappserver.VerifyTokenReply
	18, // 33: imvedioappserver.VideoServer.GetUsersByRoomId:output_type -> imvedioappserver.GetUsersByRoomIdReply
	20, // 34: imvedioappserver.VideoServer.GetRoomAdminUser:output_type -> imvedioappserver.GetRoomAdminUserReply
	22, // 35: imvedioappserver.VideoServer.SaveParticipantKeyId:output_type -> imvedioappserver.SaveParticipantKeyIdReply
	24, // 36: imvedioappserver.VideoServer.GetParticipantKeyId:output_type -> imvedioappserver.GetParticipantKeyIdReply
	7,  // 37: imvedioappserver.VideoServer.GetUserMeeting:output_type -> imvedioappserver.BoolResult
	7,  // 38: imvedioappserver.VideoServer.LetUserOffLine:output_type -> imvedioappserver.BoolResult
	7,  // 39: imvedioappserver.VideoServer.KeepLive:output_type -> imvedioappserver.BoolResult
	7,  // 40: imvedioappserver.VideoServer.ChangeModel:output_type -> imvedioappserver.BoolResult
	2,  // 41: imvedioappserver.VideoServer.GetModel:output_type -> imvedioappserver.ModelRsp
	29, // [29:42] is the sub-list for method output_type
	16, // [16:29] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_imvedioappserver_proto_init() }
func file_imvedioappserver_proto_init() {
	if File_imvedioappserver_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_imvedioappserver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChgModelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoomReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RtcToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersByRoomIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersByRoomIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomAdminUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomAdminUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveParticipantKeyIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveParticipantKeyIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetParticipantKeyIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imvedioappserver_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetParticipantKeyIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_imvedioappserver_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_imvedioappserver_proto_goTypes,
		DependencyIndexes: file_imvedioappserver_proto_depIdxs,
		EnumInfos:         file_imvedioappserver_proto_enumTypes,
		MessageInfos:      file_imvedioappserver_proto_msgTypes,
	}.Build()
	File_imvedioappserver_proto = out.File
	file_imvedioappserver_proto_rawDesc = nil
	file_imvedioappserver_proto_goTypes = nil
	file_imvedioappserver_proto_depIdxs = nil
}
