// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: dialogserver.proto

package dialogserver

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PeerType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WithID   int32 `protobuf:"varint,1,opt,name=WithID,proto3" json:"WithID,omitempty"`
	WithType int32 `protobuf:"varint,2,opt,name=WithType,proto3" json:"WithType,omitempty"`
}

func (x *PeerType) Reset() {
	*x = PeerType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerType) ProtoMessage() {}

func (x *PeerType) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerType.ProtoReflect.Descriptor instead.
func (*PeerType) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{0}
}

func (x *PeerType) GetWithID() int32 {
	if x != nil {
		return x.WithID
	}
	return 0
}

func (x *PeerType) GetWithType() int32 {
	if x != nil {
		return x.WithType
	}
	return 0
}

type ReorderPinnedDialogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    int32       `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	PeerTypes []*PeerType `protobuf:"bytes,2,rep,name=PeerTypes,proto3" json:"PeerTypes,omitempty"`
}

func (x *ReorderPinnedDialogReq) Reset() {
	*x = ReorderPinnedDialogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReorderPinnedDialogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReorderPinnedDialogReq) ProtoMessage() {}

func (x *ReorderPinnedDialogReq) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReorderPinnedDialogReq.ProtoReflect.Descriptor instead.
func (*ReorderPinnedDialogReq) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{1}
}

func (x *ReorderPinnedDialogReq) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ReorderPinnedDialogReq) GetPeerTypes() []*PeerType {
	if x != nil {
		return x.PeerTypes
	}
	return nil
}

type ReorderPinnedDialogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReorderPinnedDialogReply) Reset() {
	*x = ReorderPinnedDialogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReorderPinnedDialogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReorderPinnedDialogReply) ProtoMessage() {}

func (x *ReorderPinnedDialogReply) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReorderPinnedDialogReply.ProtoReflect.Descriptor instead.
func (*ReorderPinnedDialogReply) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{2}
}

type RevokeUnreadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   int32   `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	WithID   int32   `protobuf:"varint,2,opt,name=WithID,proto3" json:"WithID,omitempty"`
	WithType int32   `protobuf:"varint,3,opt,name=WithType,proto3" json:"WithType,omitempty"`
	MsgIDs   []int32 `protobuf:"varint,4,rep,packed,name=MsgIDs,proto3" json:"MsgIDs,omitempty"`
}

func (x *RevokeUnreadReq) Reset() {
	*x = RevokeUnreadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeUnreadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeUnreadReq) ProtoMessage() {}

func (x *RevokeUnreadReq) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeUnreadReq.ProtoReflect.Descriptor instead.
func (*RevokeUnreadReq) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{3}
}

func (x *RevokeUnreadReq) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *RevokeUnreadReq) GetWithID() int32 {
	if x != nil {
		return x.WithID
	}
	return 0
}

func (x *RevokeUnreadReq) GetWithType() int32 {
	if x != nil {
		return x.WithType
	}
	return 0
}

func (x *RevokeUnreadReq) GetMsgIDs() []int32 {
	if x != nil {
		return x.MsgIDs
	}
	return nil
}

type RevokeUnreadReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevokeUnreadReply) Reset() {
	*x = RevokeUnreadReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeUnreadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeUnreadReply) ProtoMessage() {}

func (x *RevokeUnreadReply) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeUnreadReply.ProtoReflect.Descriptor instead.
func (*RevokeUnreadReply) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{4}
}

type ClearDraftReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   int32 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	WithID   int32 `protobuf:"varint,2,opt,name=WithID,proto3" json:"WithID,omitempty"`
	WithType int32 `protobuf:"varint,3,opt,name=WithType,proto3" json:"WithType,omitempty"`
}

func (x *ClearDraftReq) Reset() {
	*x = ClearDraftReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearDraftReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearDraftReq) ProtoMessage() {}

func (x *ClearDraftReq) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearDraftReq.ProtoReflect.Descriptor instead.
func (*ClearDraftReq) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{5}
}

func (x *ClearDraftReq) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ClearDraftReq) GetWithID() int32 {
	if x != nil {
		return x.WithID
	}
	return 0
}

func (x *ClearDraftReq) GetWithType() int32 {
	if x != nil {
		return x.WithType
	}
	return 0
}

type ClearDraftReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearDraftReply) Reset() {
	*x = ClearDraftReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearDraftReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearDraftReply) ProtoMessage() {}

func (x *ClearDraftReply) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearDraftReply.ProtoReflect.Descriptor instead.
func (*ClearDraftReply) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{6}
}

type GetUserDialogsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   int32 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	WithID   int32 `protobuf:"varint,2,opt,name=WithID,proto3" json:"WithID,omitempty"`
	WithType int32 `protobuf:"varint,3,opt,name=WithType,proto3" json:"WithType,omitempty"`
	Limit    int32 `protobuf:"varint,4,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetUserDialogsReq) Reset() {
	*x = GetUserDialogsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDialogsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDialogsReq) ProtoMessage() {}

func (x *GetUserDialogsReq) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDialogsReq.ProtoReflect.Descriptor instead.
func (*GetUserDialogsReq) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserDialogsReq) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *GetUserDialogsReq) GetWithID() int32 {
	if x != nil {
		return x.WithID
	}
	return 0
}

func (x *GetUserDialogsReq) GetWithType() int32 {
	if x != nil {
		return x.WithType
	}
	return 0
}

func (x *GetUserDialogsReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetUserDialogsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDialogs []*UserDialog `protobuf:"bytes,1,rep,name=UserDialogs,proto3" json:"UserDialogs,omitempty"`
	Count       int32         `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"` // 用户dialog的总个数
}

func (x *GetUserDialogsReply) Reset() {
	*x = GetUserDialogsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDialogsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDialogsReply) ProtoMessage() {}

func (x *GetUserDialogsReply) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDialogsReply.ProtoReflect.Descriptor instead.
func (*GetUserDialogsReply) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserDialogsReply) GetUserDialogs() []*UserDialog {
	if x != nil {
		return x.UserDialogs
	}
	return nil
}

func (x *GetUserDialogsReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetUserDialogsV2Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     int32 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	WithID     int32 `protobuf:"varint,2,opt,name=WithID,proto3" json:"WithID,omitempty"`
	WithType   int32 `protobuf:"varint,3,opt,name=WithType,proto3" json:"WithType,omitempty"`
	OffsetDate int32 `protobuf:"varint,4,opt,name=OffsetDate,proto3" json:"OffsetDate,omitempty"`
	Limit      int32 `protobuf:"varint,5,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *GetUserDialogsV2Req) Reset() {
	*x = GetUserDialogsV2Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDialogsV2Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDialogsV2Req) ProtoMessage() {}

func (x *GetUserDialogsV2Req) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDialogsV2Req.ProtoReflect.Descriptor instead.
func (*GetUserDialogsV2Req) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{9}
}

func (x *GetUserDialogsV2Req) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *GetUserDialogsV2Req) GetWithID() int32 {
	if x != nil {
		return x.WithID
	}
	return 0
}

func (x *GetUserDialogsV2Req) GetWithType() int32 {
	if x != nil {
		return x.WithType
	}
	return 0
}

func (x *GetUserDialogsV2Req) GetOffsetDate() int32 {
	if x != nil {
		return x.OffsetDate
	}
	return 0
}

func (x *GetUserDialogsV2Req) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetUserDialogsV2Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDialogs []*UserDialog `protobuf:"bytes,1,rep,name=UserDialogs,proto3" json:"UserDialogs,omitempty"`
	Count       int32         `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"` // 用户dialog的总个数
}

func (x *GetUserDialogsV2Reply) Reset() {
	*x = GetUserDialogsV2Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDialogsV2Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDialogsV2Reply) ProtoMessage() {}

func (x *GetUserDialogsV2Reply) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDialogsV2Reply.ProtoReflect.Descriptor instead.
func (*GetUserDialogsV2Reply) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{10}
}

func (x *GetUserDialogsV2Reply) GetUserDialogs() []*UserDialog {
	if x != nil {
		return x.UserDialogs
	}
	return nil
}

func (x *GetUserDialogsV2Reply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type UpdateDialogPinnedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   int32 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	WithID   int32 `protobuf:"varint,2,opt,name=WithID,proto3" json:"WithID,omitempty"`
	WithType int32 `protobuf:"varint,3,opt,name=WithType,proto3" json:"WithType,omitempty"`
	Pinned   bool  `protobuf:"varint,4,opt,name=Pinned,proto3" json:"Pinned,omitempty"` // true 为置顶，false 取消置顶
}

func (x *UpdateDialogPinnedReq) Reset() {
	*x = UpdateDialogPinnedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDialogPinnedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDialogPinnedReq) ProtoMessage() {}

func (x *UpdateDialogPinnedReq) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDialogPinnedReq.ProtoReflect.Descriptor instead.
func (*UpdateDialogPinnedReq) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateDialogPinnedReq) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UpdateDialogPinnedReq) GetWithID() int32 {
	if x != nil {
		return x.WithID
	}
	return 0
}

func (x *UpdateDialogPinnedReq) GetWithType() int32 {
	if x != nil {
		return x.WithType
	}
	return 0
}

func (x *UpdateDialogPinnedReq) GetPinned() bool {
	if x != nil {
		return x.Pinned
	}
	return false
}

type UpdateDialogPinnedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateDialogPinnedReply) Reset() {
	*x = UpdateDialogPinnedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDialogPinnedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDialogPinnedReply) ProtoMessage() {}

func (x *UpdateDialogPinnedReply) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDialogPinnedReply.ProtoReflect.Descriptor instead.
func (*UpdateDialogPinnedReply) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{12}
}

type DeleteUserDialogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   int32 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	WithID   int32 `protobuf:"varint,2,opt,name=WithID,proto3" json:"WithID,omitempty"`
	WithType int32 `protobuf:"varint,3,opt,name=WithType,proto3" json:"WithType,omitempty"`
}

func (x *DeleteUserDialogReq) Reset() {
	*x = DeleteUserDialogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserDialogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserDialogReq) ProtoMessage() {}

func (x *DeleteUserDialogReq) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserDialogReq.ProtoReflect.Descriptor instead.
func (*DeleteUserDialogReq) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteUserDialogReq) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *DeleteUserDialogReq) GetWithID() int32 {
	if x != nil {
		return x.WithID
	}
	return 0
}

func (x *DeleteUserDialogReq) GetWithType() int32 {
	if x != nil {
		return x.WithType
	}
	return 0
}

type DeleteUserDialogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteUserDialogReply) Reset() {
	*x = DeleteUserDialogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserDialogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserDialogReply) ProtoMessage() {}

func (x *DeleteUserDialogReply) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserDialogReply.ProtoReflect.Descriptor instead.
func (*DeleteUserDialogReply) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{14}
}

type GetUserPinedDialogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int32 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetUserPinedDialogReq) Reset() {
	*x = GetUserPinedDialogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPinedDialogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPinedDialogReq) ProtoMessage() {}

func (x *GetUserPinedDialogReq) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPinedDialogReq.ProtoReflect.Descriptor instead.
func (*GetUserPinedDialogReq) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{15}
}

func (x *GetUserPinedDialogReq) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type GetUserPinedDialogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDialogs []*UserDialog `protobuf:"bytes,1,rep,name=UserDialogs,proto3" json:"UserDialogs,omitempty"`
}

func (x *GetUserPinedDialogReply) Reset() {
	*x = GetUserPinedDialogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPinedDialogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPinedDialogReply) ProtoMessage() {}

func (x *GetUserPinedDialogReply) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPinedDialogReply.ProtoReflect.Descriptor instead.
func (*GetUserPinedDialogReply) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{16}
}

func (x *GetUserPinedDialogReply) GetUserDialogs() []*UserDialog {
	if x != nil {
		return x.UserDialogs
	}
	return nil
}

type GetUserDialogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   int32 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	WithID   int32 `protobuf:"varint,2,opt,name=WithID,proto3" json:"WithID,omitempty"`
	WithType int32 `protobuf:"varint,3,opt,name=WithType,proto3" json:"WithType,omitempty"`
}

func (x *GetUserDialogReq) Reset() {
	*x = GetUserDialogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDialogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDialogReq) ProtoMessage() {}

func (x *GetUserDialogReq) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDialogReq.ProtoReflect.Descriptor instead.
func (*GetUserDialogReq) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{17}
}

func (x *GetUserDialogReq) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *GetUserDialogReq) GetWithID() int32 {
	if x != nil {
		return x.WithID
	}
	return 0
}

func (x *GetUserDialogReq) GetWithType() int32 {
	if x != nil {
		return x.WithType
	}
	return 0
}

type GetUserDialogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDialog *UserDialog `protobuf:"bytes,1,opt,name=UserDialog,proto3" json:"UserDialog,omitempty"`
}

func (x *GetUserDialogReply) Reset() {
	*x = GetUserDialogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDialogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDialogReply) ProtoMessage() {}

func (x *GetUserDialogReply) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDialogReply.ProtoReflect.Descriptor instead.
func (*GetUserDialogReply) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{18}
}

func (x *GetUserDialogReply) GetUserDialog() *UserDialog {
	if x != nil {
		return x.UserDialog
	}
	return nil
}

type UpdateUserDialogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID             int32 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`                         // 用户ID
	WithID             int32 `protobuf:"varint,2,opt,name=WithID,proto3" json:"WithID,omitempty"`                         // 消息交互方ID
	WithType           int32 `protobuf:"varint,3,opt,name=WithType,proto3" json:"WithType,omitempty"`                     // 对话框类型
	TopMessage         int32 `protobuf:"varint,4,opt,name=TopMessage,proto3" json:"TopMessage,omitempty"`                 // 每次替换 如果是0 则不处理
	ReadInboxMaxId     int32 `protobuf:"varint,5,opt,name=ReadInboxMaxId,proto3" json:"ReadInboxMaxId,omitempty"`         // 每次自增 如果是0 则不处理
	ReadOutboxMaxId    int32 `protobuf:"varint,6,opt,name=ReadOutboxMaxId,proto3" json:"ReadOutboxMaxId,omitempty"`       // 每次自增 如果是0 则不处理
	UnreadMetionsCount int32 `protobuf:"varint,7,opt,name=UnreadMetionsCount,proto3" json:"UnreadMetionsCount,omitempty"` // 每次自增 如果是0 则不处理， 如果是-1 则置为0
	UnreadCount        int32 `protobuf:"varint,8,opt,name=UnreadCount,proto3" json:"UnreadCount,omitempty"`               // 每次自增 如果是0 则不处理， 如果是-1 则置为0
	Pts                int32 `protobuf:"varint,9,opt,name=Pts,proto3" json:"Pts,omitempty"`                               // pts每次自增 如果是0 则不处理
	UpdateDate         int32 `protobuf:"varint,10,opt,name=UpdateDate,proto3" json:"UpdateDate,omitempty"`                // 时间戳
}

func (x *UpdateUserDialogReq) Reset() {
	*x = UpdateUserDialogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserDialogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserDialogReq) ProtoMessage() {}

func (x *UpdateUserDialogReq) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserDialogReq.ProtoReflect.Descriptor instead.
func (*UpdateUserDialogReq) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateUserDialogReq) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UpdateUserDialogReq) GetWithID() int32 {
	if x != nil {
		return x.WithID
	}
	return 0
}

func (x *UpdateUserDialogReq) GetWithType() int32 {
	if x != nil {
		return x.WithType
	}
	return 0
}

func (x *UpdateUserDialogReq) GetTopMessage() int32 {
	if x != nil {
		return x.TopMessage
	}
	return 0
}

func (x *UpdateUserDialogReq) GetReadInboxMaxId() int32 {
	if x != nil {
		return x.ReadInboxMaxId
	}
	return 0
}

func (x *UpdateUserDialogReq) GetReadOutboxMaxId() int32 {
	if x != nil {
		return x.ReadOutboxMaxId
	}
	return 0
}

func (x *UpdateUserDialogReq) GetUnreadMetionsCount() int32 {
	if x != nil {
		return x.UnreadMetionsCount
	}
	return 0
}

func (x *UpdateUserDialogReq) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *UpdateUserDialogReq) GetPts() int32 {
	if x != nil {
		return x.Pts
	}
	return 0
}

func (x *UpdateUserDialogReq) GetUpdateDate() int32 {
	if x != nil {
		return x.UpdateDate
	}
	return 0
}

type UpdateUserDialogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserDialogReply) Reset() {
	*x = UpdateUserDialogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserDialogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserDialogReply) ProtoMessage() {}

func (x *UpdateUserDialogReply) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserDialogReply.ProtoReflect.Descriptor instead.
func (*UpdateUserDialogReply) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{20}
}

type GetUserAllDialogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int32 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetUserAllDialogReq) Reset() {
	*x = GetUserAllDialogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAllDialogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAllDialogReq) ProtoMessage() {}

func (x *GetUserAllDialogReq) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAllDialogReq.ProtoReflect.Descriptor instead.
func (*GetUserAllDialogReq) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{21}
}

func (x *GetUserAllDialogReq) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type GetUserAllDialogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDialogs []*UserDialog `protobuf:"bytes,1,rep,name=UserDialogs,proto3" json:"UserDialogs,omitempty"`
}

func (x *GetUserAllDialogReply) Reset() {
	*x = GetUserAllDialogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAllDialogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAllDialogReply) ProtoMessage() {}

func (x *GetUserAllDialogReply) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAllDialogReply.ProtoReflect.Descriptor instead.
func (*GetUserAllDialogReply) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{22}
}

func (x *GetUserAllDialogReply) GetUserDialogs() []*UserDialog {
	if x != nil {
		return x.UserDialogs
	}
	return nil
}

type InsertUserDialogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDialog  *UserDialog `protobuf:"bytes,1,opt,name=UserDialog,proto3" json:"UserDialog,omitempty"`
	UpdateScore bool        `protobuf:"varint,2,opt,name=UpdateScore,proto3" json:"UpdateScore,omitempty"`
}

func (x *InsertUserDialogReq) Reset() {
	*x = InsertUserDialogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertUserDialogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertUserDialogReq) ProtoMessage() {}

func (x *InsertUserDialogReq) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertUserDialogReq.ProtoReflect.Descriptor instead.
func (*InsertUserDialogReq) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{23}
}

func (x *InsertUserDialogReq) GetUserDialog() *UserDialog {
	if x != nil {
		return x.UserDialog
	}
	return nil
}

func (x *InsertUserDialogReq) GetUpdateScore() bool {
	if x != nil {
		return x.UpdateScore
	}
	return false
}

type InsertUserDialogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InsertUserDialogReply) Reset() {
	*x = InsertUserDialogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertUserDialogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertUserDialogReply) ProtoMessage() {}

func (x *InsertUserDialogReply) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertUserDialogReply.ProtoReflect.Descriptor instead.
func (*InsertUserDialogReply) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{24}
}

type UserDialog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId              int32   `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`                            // 用户ID
	WithId              int32   `protobuf:"varint,2,opt,name=WithId,proto3" json:"WithId,omitempty"`                            // 消息交互方
	Type                int32   `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"`                                // 对话框类型 1 单聊 2 普通群 3 超级群/channel
	Flags               int32   `protobuf:"varint,4,opt,name=Flags,proto3" json:"Flags,omitempty"`                              // 标识
	Pinged              bool    `protobuf:"varint,5,opt,name=Pinged,proto3" json:"Pinged,omitempty"`                            // 是否置顶
	TopMessage          int32   `protobuf:"varint,6,opt,name=TopMessage,proto3" json:"TopMessage,omitempty"`                    // 顶部消息id
	ReadInboxMaxId      int32   `protobuf:"varint,7,opt,name=ReadInboxMaxId,proto3" json:"ReadInboxMaxId,omitempty"`            // 已读最大id
	ReadOutboxMaxId     int32   `protobuf:"varint,8,opt,name=ReadOutboxMaxId,proto3" json:"ReadOutboxMaxId,omitempty"`          // 双勾最大id
	UnreadMetionsCount  int32   `protobuf:"varint,9,opt,name=UnreadMetionsCount,proto3" json:"UnreadMetionsCount,omitempty"`    // 未读@总数
	UnreadCount         int32   `protobuf:"varint,10,opt,name=UnreadCount,proto3" json:"UnreadCount,omitempty"`                 // 未读总数
	NotifySettingsFlags int32   `protobuf:"varint,11,opt,name=NotifySettingsFlags,proto3" json:"NotifySettingsFlags,omitempty"` // 设置标识
	ShowPreviews        bool    `protobuf:"varint,12,opt,name=ShowPreviews,proto3" json:"ShowPreviews,omitempty"`               // 是否显示完全 推送时
	Silent              bool    `protobuf:"varint,13,opt,name=Silent,proto3" json:"Silent,omitempty"`                           // 是否静音
	MuteUntil           int32   `protobuf:"varint,14,opt,name=MuteUntil,proto3" json:"MuteUntil,omitempty"`                     // 静音时间
	Sound               string  `protobuf:"bytes,15,opt,name=Sound,proto3" json:"Sound,omitempty"`                              // 声音
	Pts                 int32   `protobuf:"varint,16,opt,name=Pts,proto3" json:"Pts,omitempty"`                                 // 当前pts
	Draft               []byte  `protobuf:"bytes,17,opt,name=Draft,proto3" json:"Draft,omitempty"`                              // 草稿
	Readinpts           int32   `protobuf:"varint,18,opt,name=Readinpts,proto3" json:"Readinpts,omitempty"`                     // 最后已读pts
	Readoutpts          int32   `protobuf:"varint,19,opt,name=Readoutpts,proto3" json:"Readoutpts,omitempty"`                   // 最后双勾pts
	LinkUser            []int32 `protobuf:"varint,20,rep,packed,name=LinkUser,proto3" json:"LinkUser,omitempty"`                // 涉及到的用户
	InsertDate          int64   `protobuf:"varint,21,opt,name=InsertDate,proto3" json:"InsertDate,omitempty"`                   // 插入时间
	UpdateDate          int64   `protobuf:"varint,22,opt,name=UpdateDate,proto3" json:"UpdateDate,omitempty"`                   // 更新时间
	Encry               int32   `protobuf:"varint,23,opt,name=Encry,proto3" json:"Encry,omitempty"`                             // 是否加密 0: 不加密 1：加密
	Revoke              bool    `protobuf:"varint,24,opt,name=Revoke,proto3" json:"Revoke,omitempty"`                           // 如果unread为0 是否是回退为0/已读为0
}

func (x *UserDialog) Reset() {
	*x = UserDialog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dialogserver_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDialog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDialog) ProtoMessage() {}

func (x *UserDialog) ProtoReflect() protoreflect.Message {
	mi := &file_dialogserver_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDialog.ProtoReflect.Descriptor instead.
func (*UserDialog) Descriptor() ([]byte, []int) {
	return file_dialogserver_proto_rawDescGZIP(), []int{25}
}

func (x *UserDialog) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserDialog) GetWithId() int32 {
	if x != nil {
		return x.WithId
	}
	return 0
}

func (x *UserDialog) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UserDialog) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *UserDialog) GetPinged() bool {
	if x != nil {
		return x.Pinged
	}
	return false
}

func (x *UserDialog) GetTopMessage() int32 {
	if x != nil {
		return x.TopMessage
	}
	return 0
}

func (x *UserDialog) GetReadInboxMaxId() int32 {
	if x != nil {
		return x.ReadInboxMaxId
	}
	return 0
}

func (x *UserDialog) GetReadOutboxMaxId() int32 {
	if x != nil {
		return x.ReadOutboxMaxId
	}
	return 0
}

func (x *UserDialog) GetUnreadMetionsCount() int32 {
	if x != nil {
		return x.UnreadMetionsCount
	}
	return 0
}

func (x *UserDialog) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *UserDialog) GetNotifySettingsFlags() int32 {
	if x != nil {
		return x.NotifySettingsFlags
	}
	return 0
}

func (x *UserDialog) GetShowPreviews() bool {
	if x != nil {
		return x.ShowPreviews
	}
	return false
}

func (x *UserDialog) GetSilent() bool {
	if x != nil {
		return x.Silent
	}
	return false
}

func (x *UserDialog) GetMuteUntil() int32 {
	if x != nil {
		return x.MuteUntil
	}
	return 0
}

func (x *UserDialog) GetSound() string {
	if x != nil {
		return x.Sound
	}
	return ""
}

func (x *UserDialog) GetPts() int32 {
	if x != nil {
		return x.Pts
	}
	return 0
}

func (x *UserDialog) GetDraft() []byte {
	if x != nil {
		return x.Draft
	}
	return nil
}

func (x *UserDialog) GetReadinpts() int32 {
	if x != nil {
		return x.Readinpts
	}
	return 0
}

func (x *UserDialog) GetReadoutpts() int32 {
	if x != nil {
		return x.Readoutpts
	}
	return 0
}

func (x *UserDialog) GetLinkUser() []int32 {
	if x != nil {
		return x.LinkUser
	}
	return nil
}

func (x *UserDialog) GetInsertDate() int64 {
	if x != nil {
		return x.InsertDate
	}
	return 0
}

func (x *UserDialog) GetUpdateDate() int64 {
	if x != nil {
		return x.UpdateDate
	}
	return 0
}

func (x *UserDialog) GetEncry() int32 {
	if x != nil {
		return x.Encry
	}
	return 0
}

func (x *UserDialog) GetRevoke() bool {
	if x != nil {
		return x.Revoke
	}
	return false
}

var File_dialogserver_proto protoreflect.FileDescriptor

var file_dialogserver_proto_rawDesc = []byte{
	0x0a, 0x12, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x22, 0x3e, 0x0a, 0x08, 0x50, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69, 0x74, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x57, 0x69, 0x74, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x66, 0x0a, 0x16, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x69, 0x6e,
	0x6e, 0x65, 0x64, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x09, 0x50, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x50, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x75, 0x0a, 0x0f, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69, 0x74,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x57, 0x69, 0x74,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x73, 0x22, 0x13, 0x0a,
	0x11, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x5b, 0x0a, 0x0d, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x57,
	0x69, 0x74, 0x68, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x57, 0x69, 0x74,
	0x68, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x57, 0x69, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x11, 0x0a, 0x0f, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x75, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69, 0x74, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x57, 0x69, 0x74, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x67, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x3a, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x73, 0x56, 0x32, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69,
	0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x57, 0x69,
	0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x69, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x56, 0x32,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3a, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x52, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7b, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x69, 0x74, 0x68,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x57, 0x69, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x50, 0x69,
	0x6e, 0x6e, 0x65, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x61, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69, 0x74, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x57, 0x69, 0x74, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2f, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x65, 0x64, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x55, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x65, 0x64, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3a, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x73, 0x22, 0x5e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69, 0x74, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x57, 0x69, 0x74, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x4e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x22, 0xd7, 0x02, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x57,
	0x69, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x57,
	0x69, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x70, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x54, 0x6f, 0x70,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x64, 0x49,
	0x6e, 0x62, 0x6f, 0x78, 0x4d, 0x61, 0x78, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x4d, 0x61, 0x78, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x78, 0x4d, 0x61, 0x78,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x75,
	0x74, 0x62, 0x6f, 0x78, 0x4d, 0x61, 0x78, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x50,
	0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x50, 0x74, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x17, 0x0a,
	0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x6c, 0x6c, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x53, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x6c, 0x6c, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3a,
	0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x0b, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x71, 0x0a, 0x13, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x12, 0x38, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52,
	0x0a, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x17, 0x0a,
	0x15, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xd4, 0x05, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x57,
	0x69, 0x74, 0x68, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6c, 0x61,
	0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x50, 0x69, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x50, 0x69, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x70, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x54, 0x6f, 0x70,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x64, 0x49,
	0x6e, 0x62, 0x6f, 0x78, 0x4d, 0x61, 0x78, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x4d, 0x61, 0x78, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x78, 0x4d, 0x61, 0x78,
	0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x75,
	0x74, 0x62, 0x6f, 0x78, 0x4d, 0x61, 0x78, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x46, 0x6c, 0x61,
	0x67, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x75, 0x74,
	0x65, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4d, 0x75,
	0x74, 0x65, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x6f, 0x75, 0x6e, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x50, 0x74, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x50, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x44, 0x72, 0x61, 0x66, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x70,
	0x74, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e,
	0x70, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x70, 0x74,
	0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x52, 0x65, 0x61, 0x64, 0x6f, 0x75, 0x74,
	0x70, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x69, 0x6e, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x18,
	0x14, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x4c, 0x69, 0x6e, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x32, 0xde, 0x08,
	0x0a, 0x0c, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x5c,
	0x0a, 0x10, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x12, 0x21, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x10,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x12, 0x21, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x1e, 0x2e, 0x64, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x64, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x5c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x12, 0x21, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x6c,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x65, 0x64, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x12, 0x23, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x65, 0x64, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x69, 0x6e, 0x65, 0x64, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x5c, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x21, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x62, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x50,
	0x69, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x23, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x64, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x1f, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61,
	0x6c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x56, 0x32, 0x12,
	0x21, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x56, 0x32, 0x52,
	0x65, 0x71, 0x1a, 0x23, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73,
	0x56, 0x32, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0a, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x1b, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0c, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x55,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x1d, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x13, 0x52, 0x65, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x24,
	0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x6e, 0x65,
	0x64, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x1e,
	0x5a, 0x1c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dialogserver_proto_rawDescOnce sync.Once
	file_dialogserver_proto_rawDescData = file_dialogserver_proto_rawDesc
)

func file_dialogserver_proto_rawDescGZIP() []byte {
	file_dialogserver_proto_rawDescOnce.Do(func() {
		file_dialogserver_proto_rawDescData = protoimpl.X.CompressGZIP(file_dialogserver_proto_rawDescData)
	})
	return file_dialogserver_proto_rawDescData
}

var file_dialogserver_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_dialogserver_proto_goTypes = []interface{}{
	(*PeerType)(nil),                 // 0: dialogserver.PeerType
	(*ReorderPinnedDialogReq)(nil),   // 1: dialogserver.ReorderPinnedDialogReq
	(*ReorderPinnedDialogReply)(nil), // 2: dialogserver.ReorderPinnedDialogReply
	(*RevokeUnreadReq)(nil),          // 3: dialogserver.RevokeUnreadReq
	(*RevokeUnreadReply)(nil),        // 4: dialogserver.RevokeUnreadReply
	(*ClearDraftReq)(nil),            // 5: dialogserver.ClearDraftReq
	(*ClearDraftReply)(nil),          // 6: dialogserver.ClearDraftReply
	(*GetUserDialogsReq)(nil),        // 7: dialogserver.GetUserDialogsReq
	(*GetUserDialogsReply)(nil),      // 8: dialogserver.GetUserDialogsReply
	(*GetUserDialogsV2Req)(nil),      // 9: dialogserver.GetUserDialogsV2Req
	(*GetUserDialogsV2Reply)(nil),    // 10: dialogserver.GetUserDialogsV2Reply
	(*UpdateDialogPinnedReq)(nil),    // 11: dialogserver.UpdateDialogPinnedReq
	(*UpdateDialogPinnedReply)(nil),  // 12: dialogserver.UpdateDialogPinnedReply
	(*DeleteUserDialogReq)(nil),      // 13: dialogserver.DeleteUserDialogReq
	(*DeleteUserDialogReply)(nil),    // 14: dialogserver.DeleteUserDialogReply
	(*GetUserPinedDialogReq)(nil),    // 15: dialogserver.GetUserPinedDialogReq
	(*GetUserPinedDialogReply)(nil),  // 16: dialogserver.GetUserPinedDialogReply
	(*GetUserDialogReq)(nil),         // 17: dialogserver.GetUserDialogReq
	(*GetUserDialogReply)(nil),       // 18: dialogserver.GetUserDialogReply
	(*UpdateUserDialogReq)(nil),      // 19: dialogserver.UpdateUserDialogReq
	(*UpdateUserDialogReply)(nil),    // 20: dialogserver.UpdateUserDialogReply
	(*GetUserAllDialogReq)(nil),      // 21: dialogserver.GetUserAllDialogReq
	(*GetUserAllDialogReply)(nil),    // 22: dialogserver.GetUserAllDialogReply
	(*InsertUserDialogReq)(nil),      // 23: dialogserver.InsertUserDialogReq
	(*InsertUserDialogReply)(nil),    // 24: dialogserver.InsertUserDialogReply
	(*UserDialog)(nil),               // 25: dialogserver.UserDialog
}
var file_dialogserver_proto_depIdxs = []int32{
	0,  // 0: dialogserver.ReorderPinnedDialogReq.PeerTypes:type_name -> dialogserver.PeerType
	25, // 1: dialogserver.GetUserDialogsReply.UserDialogs:type_name -> dialogserver.UserDialog
	25, // 2: dialogserver.GetUserDialogsV2Reply.UserDialogs:type_name -> dialogserver.UserDialog
	25, // 3: dialogserver.GetUserPinedDialogReply.UserDialogs:type_name -> dialogserver.UserDialog
	25, // 4: dialogserver.GetUserDialogReply.UserDialog:type_name -> dialogserver.UserDialog
	25, // 5: dialogserver.GetUserAllDialogReply.UserDialogs:type_name -> dialogserver.UserDialog
	25, // 6: dialogserver.InsertUserDialogReq.UserDialog:type_name -> dialogserver.UserDialog
	23, // 7: dialogserver.DialogServer.InsertUserDialog:input_type -> dialogserver.InsertUserDialogReq
	19, // 8: dialogserver.DialogServer.UpdateUserDialog:input_type -> dialogserver.UpdateUserDialogReq
	17, // 9: dialogserver.DialogServer.GetUserDialog:input_type -> dialogserver.GetUserDialogReq
	21, // 10: dialogserver.DialogServer.GetUserAllDialog:input_type -> dialogserver.GetUserAllDialogReq
	15, // 11: dialogserver.DialogServer.GetUserPinedDialog:input_type -> dialogserver.GetUserPinedDialogReq
	13, // 12: dialogserver.DialogServer.DeleteUserDialog:input_type -> dialogserver.DeleteUserDialogReq
	11, // 13: dialogserver.DialogServer.UpdateDialogPinned:input_type -> dialogserver.UpdateDialogPinnedReq
	7,  // 14: dialogserver.DialogServer.GetUserDialogs:input_type -> dialogserver.GetUserDialogsReq
	9,  // 15: dialogserver.DialogServer.GetUserDialogsV2:input_type -> dialogserver.GetUserDialogsV2Req
	5,  // 16: dialogserver.DialogServer.ClearDraft:input_type -> dialogserver.ClearDraftReq
	3,  // 17: dialogserver.DialogServer.RevokeUnread:input_type -> dialogserver.RevokeUnreadReq
	1,  // 18: dialogserver.DialogServer.ReorderPinnedDialog:input_type -> dialogserver.ReorderPinnedDialogReq
	24, // 19: dialogserver.DialogServer.InsertUserDialog:output_type -> dialogserver.InsertUserDialogReply
	20, // 20: dialogserver.DialogServer.UpdateUserDialog:output_type -> dialogserver.UpdateUserDialogReply
	18, // 21: dialogserver.DialogServer.GetUserDialog:output_type -> dialogserver.GetUserDialogReply
	22, // 22: dialogserver.DialogServer.GetUserAllDialog:output_type -> dialogserver.GetUserAllDialogReply
	16, // 23: dialogserver.DialogServer.GetUserPinedDialog:output_type -> dialogserver.GetUserPinedDialogReply
	14, // 24: dialogserver.DialogServer.DeleteUserDialog:output_type -> dialogserver.DeleteUserDialogReply
	12, // 25: dialogserver.DialogServer.UpdateDialogPinned:output_type -> dialogserver.UpdateDialogPinnedReply
	8,  // 26: dialogserver.DialogServer.GetUserDialogs:output_type -> dialogserver.GetUserDialogsReply
	10, // 27: dialogserver.DialogServer.GetUserDialogsV2:output_type -> dialogserver.GetUserDialogsV2Reply
	6,  // 28: dialogserver.DialogServer.ClearDraft:output_type -> dialogserver.ClearDraftReply
	4,  // 29: dialogserver.DialogServer.RevokeUnread:output_type -> dialogserver.RevokeUnreadReply
	2,  // 30: dialogserver.DialogServer.ReorderPinnedDialog:output_type -> dialogserver.ReorderPinnedDialogReply
	19, // [19:31] is the sub-list for method output_type
	7,  // [7:19] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_dialogserver_proto_init() }
func file_dialogserver_proto_init() {
	if File_dialogserver_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dialogserver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReorderPinnedDialogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReorderPinnedDialogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeUnreadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeUnreadReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearDraftReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearDraftReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDialogsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDialogsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDialogsV2Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDialogsV2Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDialogPinnedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDialogPinnedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserDialogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserDialogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserPinedDialogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserPinedDialogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDialogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDialogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserDialogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserDialogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAllDialogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAllDialogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertUserDialogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertUserDialogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dialogserver_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDialog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dialogserver_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dialogserver_proto_goTypes,
		DependencyIndexes: file_dialogserver_proto_depIdxs,
		MessageInfos:      file_dialogserver_proto_msgTypes,
	}.Build()
	File_dialogserver_proto = out.File
	file_dialogserver_proto_rawDesc = nil
	file_dialogserver_proto_goTypes = nil
	file_dialogserver_proto_depIdxs = nil
}
