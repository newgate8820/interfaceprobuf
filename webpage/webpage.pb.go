// protoc --gogofast_out=plugins=grpc:. ./gitlab.chatserver.im/interfaceprobuf/webpage/webpage.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: webpage.proto

package webpage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrCode int32

const (
	ErrCode_OK                 ErrCode = 0 //解析成功
	ErrCode_UnknownException   ErrCode = 1 //未知异常
	ErrCode_RequestUnreachable ErrCode = 2 //解析的url请求不可达
	ErrCode_RequestTimeout     ErrCode = 3 //解析的url连接超时
	ErrCode_DisabledResponse   ErrCode = 4 //解析的url返回码不正确(非200)
	ErrCode_NotHtmlContent     ErrCode = 5 //解析的url不是html网页
	ErrCode_MissingPage        ErrCode = 6 //解析的url无描述信息
)

// Enum value maps for ErrCode.
var (
	ErrCode_name = map[int32]string{
		0: "OK",
		1: "UnknownException",
		2: "RequestUnreachable",
		3: "RequestTimeout",
		4: "DisabledResponse",
		5: "NotHtmlContent",
		6: "MissingPage",
	}
	ErrCode_value = map[string]int32{
		"OK":                 0,
		"UnknownException":   1,
		"RequestUnreachable": 2,
		"RequestTimeout":     3,
		"DisabledResponse":   4,
		"NotHtmlContent":     5,
		"MissingPage":        6,
	}
)

func (x ErrCode) Enum() *ErrCode {
	p := new(ErrCode)
	*p = x
	return p
}

func (x ErrCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrCode) Descriptor() protoreflect.EnumDescriptor {
	return file_webpage_proto_enumTypes[0].Descriptor()
}

func (ErrCode) Type() protoreflect.EnumType {
	return &file_webpage_proto_enumTypes[0]
}

func (x ErrCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrCode.Descriptor instead.
func (ErrCode) EnumDescriptor() ([]byte, []int) {
	return file_webpage_proto_rawDescGZIP(), []int{0}
}

type ParseUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url    string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`                      //解析的url
	UserId int32  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //用户id（可不填）
}

func (x *ParseUrlRequest) Reset() {
	*x = ParseUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webpage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseUrlRequest) ProtoMessage() {}

func (x *ParseUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webpage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseUrlRequest.ProtoReflect.Descriptor instead.
func (*ParseUrlRequest) Descriptor() ([]byte, []int) {
	return file_webpage_proto_rawDescGZIP(), []int{0}
}

func (x *ParseUrlRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ParseUrlRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ParseUrlReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode ErrCode    `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3,enum=webpage.ErrCode" json:"err_code,omitempty"` // 错误码
	Id      int64      `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                               // url唯一id
	Page    *PageInfo  `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`                                            // WebPage详情
	Photo   *PhotoInfo `protobuf:"bytes,4,opt,name=photo,proto3" json:"photo,omitempty"`                                          // Photo
}

func (x *ParseUrlReply) Reset() {
	*x = ParseUrlReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webpage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseUrlReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseUrlReply) ProtoMessage() {}

func (x *ParseUrlReply) ProtoReflect() protoreflect.Message {
	mi := &file_webpage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseUrlReply.ProtoReflect.Descriptor instead.
func (*ParseUrlReply) Descriptor() ([]byte, []int) {
	return file_webpage_proto_rawDescGZIP(), []int{1}
}

func (x *ParseUrlReply) GetErrCode() ErrCode {
	if x != nil {
		return x.ErrCode
	}
	return ErrCode_OK
}

func (x *ParseUrlReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ParseUrlReply) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ParseUrlReply) GetPhoto() *PhotoInfo {
	if x != nil {
		return x.Photo
	}
	return nil
}

type PageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url         string       `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`                                 // url网址
	DisplayUrl  string       `protobuf:"bytes,2,opt,name=display_url,json=displayUrl,proto3" json:"display_url,omitempty"` // 格式化url
	Hash        int32        `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`                              // hash
	Type        string       `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`                               // 类型
	SiteName    string       `protobuf:"bytes,5,opt,name=site_name,json=siteName,proto3" json:"site_name,omitempty"`       // 网站名
	Title       string       `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`                             // 标题
	Description string       `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`                 // 描述
	Author      string       `protobuf:"bytes,8,opt,name=author,proto3" json:"author,omitempty"`                           // 作者
	Photo       *UploadPhoto `protobuf:"bytes,9,opt,name=photo,proto3" json:"photo,omitempty"`                             // 已上传的图片信息（注：该字段暂不可用，请忽略）
	Video       *VideoInfo   `protobuf:"bytes,10,opt,name=video,proto3" json:"video,omitempty"`                            // 视频
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webpage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_webpage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_webpage_proto_rawDescGZIP(), []int{2}
}

func (x *PageInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PageInfo) GetDisplayUrl() string {
	if x != nil {
		return x.DisplayUrl
	}
	return ""
}

func (x *PageInfo) GetHash() int32 {
	if x != nil {
		return x.Hash
	}
	return 0
}

func (x *PageInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PageInfo) GetSiteName() string {
	if x != nil {
		return x.SiteName
	}
	return ""
}

func (x *PageInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PageInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PageInfo) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *PageInfo) GetPhoto() *UploadPhoto {
	if x != nil {
		return x.Photo
	}
	return nil
}

func (x *PageInfo) GetVideo() *VideoInfo {
	if x != nil {
		return x.Video
	}
	return nil
}

type VideoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayAddr string `protobuf:"bytes,1,opt,name=play_addr,json=playAddr,proto3" json:"play_addr,omitempty"`
	Width    int32  `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height   int32  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *VideoInfo) Reset() {
	*x = VideoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webpage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoInfo) ProtoMessage() {}

func (x *VideoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_webpage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoInfo.ProtoReflect.Descriptor instead.
func (*VideoInfo) Descriptor() ([]byte, []int) {
	return file_webpage_proto_rawDescGZIP(), []int{3}
}

func (x *VideoInfo) GetPlayAddr() string {
	if x != nil {
		return x.PlayAddr
	}
	return ""
}

func (x *VideoInfo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *VideoInfo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type PhotoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`      // photo二进制数据
	Width  int32  `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`   // 图片宽
	Height int32  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"` // 图片高
	Type   string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`      // 图片类型,如'png','jpg' 等
	Url    string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`        // 图片url
}

func (x *PhotoInfo) Reset() {
	*x = PhotoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webpage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoInfo) ProtoMessage() {}

func (x *PhotoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_webpage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoInfo.ProtoReflect.Descriptor instead.
func (*PhotoInfo) Descriptor() ([]byte, []int) {
	return file_webpage_proto_rawDescGZIP(), []int{4}
}

func (x *PhotoInfo) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PhotoInfo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *PhotoInfo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *PhotoInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PhotoInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// SavedWebPage redis保存的数据
type SavedWebPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    // url唯一id
	Page *PageInfo `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"` // WebPage详情
}

func (x *SavedWebPage) Reset() {
	*x = SavedWebPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webpage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavedWebPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavedWebPage) ProtoMessage() {}

func (x *SavedWebPage) ProtoReflect() protoreflect.Message {
	mi := &file_webpage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavedWebPage.ProtoReflect.Descriptor instead.
func (*SavedWebPage) Descriptor() ([]byte, []int) {
	return file_webpage_proto_rawDescGZIP(), []int{5}
}

func (x *SavedWebPage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SavedWebPage) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

// UploadPhoto 已上传的文件id信息（注：该字段暂不可用，请忽略）
type UploadPhoto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                   // photo id
	AccessHash int64  `protobuf:"varint,2,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"` // photo access_hash
	Width      int32  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`                             // photo宽
	Height     int32  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`                           // photo高
	Size       int32  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`                               // photo大小
	Data       []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UploadPhoto) Reset() {
	*x = UploadPhoto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webpage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadPhoto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPhoto) ProtoMessage() {}

func (x *UploadPhoto) ProtoReflect() protoreflect.Message {
	mi := &file_webpage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPhoto.ProtoReflect.Descriptor instead.
func (*UploadPhoto) Descriptor() ([]byte, []int) {
	return file_webpage_proto_rawDescGZIP(), []int{6}
}

func (x *UploadPhoto) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UploadPhoto) GetAccessHash() int64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

func (x *UploadPhoto) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *UploadPhoto) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *UploadPhoto) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UploadPhoto) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ParseUrlForEncodedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url    string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`                      //解析的url
	UserId int32  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //用户id（可不填）
}

func (x *ParseUrlForEncodedRequest) Reset() {
	*x = ParseUrlForEncodedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webpage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseUrlForEncodedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseUrlForEncodedRequest) ProtoMessage() {}

func (x *ParseUrlForEncodedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webpage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseUrlForEncodedRequest.ProtoReflect.Descriptor instead.
func (*ParseUrlForEncodedRequest) Descriptor() ([]byte, []int) {
	return file_webpage_proto_rawDescGZIP(), []int{7}
}

func (x *ParseUrlForEncodedRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ParseUrlForEncodedRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ParseUrlForEncodedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode ErrCode `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3,enum=webpage.ErrCode" json:"err_code,omitempty"` // 错误码
	Id      int64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                               // url唯一id
	Data    []byte  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`                                            // TL encode data
}

func (x *ParseUrlForEncodedReply) Reset() {
	*x = ParseUrlForEncodedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webpage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseUrlForEncodedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseUrlForEncodedReply) ProtoMessage() {}

func (x *ParseUrlForEncodedReply) ProtoReflect() protoreflect.Message {
	mi := &file_webpage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseUrlForEncodedReply.ProtoReflect.Descriptor instead.
func (*ParseUrlForEncodedReply) Descriptor() ([]byte, []int) {
	return file_webpage_proto_rawDescGZIP(), []int{8}
}

func (x *ParseUrlForEncodedReply) GetErrCode() ErrCode {
	if x != nil {
		return x.ErrCode
	}
	return ErrCode_OK
}

func (x *ParseUrlForEncodedReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ParseUrlForEncodedReply) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ParseUrlAndStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url     string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`                      //解析的url
	UserId  int32  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //用户id（可不填）
	Img_Url string `protobuf:"bytes,3,opt,name=img_Url,json=imgUrl,proto3" json:"img_Url,omitempty"`  //图片url
}

func (x *ParseUrlAndStoreRequest) Reset() {
	*x = ParseUrlAndStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webpage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseUrlAndStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseUrlAndStoreRequest) ProtoMessage() {}

func (x *ParseUrlAndStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webpage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseUrlAndStoreRequest.ProtoReflect.Descriptor instead.
func (*ParseUrlAndStoreRequest) Descriptor() ([]byte, []int) {
	return file_webpage_proto_rawDescGZIP(), []int{9}
}

func (x *ParseUrlAndStoreRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ParseUrlAndStoreRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ParseUrlAndStoreRequest) GetImg_Url() string {
	if x != nil {
		return x.Img_Url
	}
	return ""
}

type ParseUrlAndStoreReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode ErrCode    `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3,enum=webpage.ErrCode" json:"err_code,omitempty"` // 错误码
	Id      int64      `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                               // url唯一id
	Page    *PageInfo  `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`                                            // WebPage详情
	Photo   *PhotoInfo `protobuf:"bytes,4,opt,name=photo,proto3" json:"photo,omitempty"`                                          // Photo
	PhotoTL []byte     `protobuf:"bytes,5,opt,name=photoTL,proto3" json:"photoTL,omitempty"`                                      // Photo
}

func (x *ParseUrlAndStoreReply) Reset() {
	*x = ParseUrlAndStoreReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webpage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseUrlAndStoreReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseUrlAndStoreReply) ProtoMessage() {}

func (x *ParseUrlAndStoreReply) ProtoReflect() protoreflect.Message {
	mi := &file_webpage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseUrlAndStoreReply.ProtoReflect.Descriptor instead.
func (*ParseUrlAndStoreReply) Descriptor() ([]byte, []int) {
	return file_webpage_proto_rawDescGZIP(), []int{10}
}

func (x *ParseUrlAndStoreReply) GetErrCode() ErrCode {
	if x != nil {
		return x.ErrCode
	}
	return ErrCode_OK
}

func (x *ParseUrlAndStoreReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ParseUrlAndStoreReply) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ParseUrlAndStoreReply) GetPhoto() *PhotoInfo {
	if x != nil {
		return x.Photo
	}
	return nil
}

func (x *ParseUrlAndStoreReply) GetPhotoTL() []byte {
	if x != nil {
		return x.PhotoTL
	}
	return nil
}

var File_webpage_proto protoreflect.FileDescriptor

var file_webpage_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x77, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x77, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x22, 0x3c, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x73,
	0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x73, 0x65,
	0x55, 0x72, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x77, 0x65, 0x62,
	0x70, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x65, 0x72,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x65,
	0x62, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x22, 0xa8, 0x02, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x69, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x65, 0x62,
	0x70, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x22, 0x56, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x41, 0x64, 0x64, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x73, 0x0a, 0x09, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x45,
	0x0a, 0x0c, 0x53, 0x61, 0x76, 0x65, 0x64, 0x57, 0x65, 0x62, 0x50, 0x61, 0x67, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77,
	0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x46, 0x0a, 0x19,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x46, 0x6f, 0x72, 0x45, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x17, 0x50, 0x61, 0x72, 0x73, 0x65, 0x55, 0x72, 0x6c,
	0x46, 0x6f, 0x72, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2b, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x77, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x5d, 0x0a, 0x17, 0x50, 0x61, 0x72, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x41, 0x6e, 0x64, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x5f, 0x55, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x22,
	0xbf, 0x01, 0x0a, 0x15, 0x50, 0x61, 0x72, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x41, 0x6e, 0x64, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x08, 0x65, 0x72, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x77, 0x65,
	0x62, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x65,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77,
	0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x54, 0x4c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x54,
	0x4c, 0x2a, 0x8e, 0x01, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a,
	0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c,
	0x65, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x04, 0x12, 0x12, 0x0a,
	0x0e, 0x4e, 0x6f, 0x74, 0x48, 0x74, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x10,
	0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x67, 0x65,
	0x10, 0x06, 0x32, 0xff, 0x01, 0x0a, 0x07, 0x57, 0x65, 0x62, 0x50, 0x61, 0x67, 0x65, 0x12, 0x3e,
	0x0a, 0x08, 0x50, 0x61, 0x72, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x2e, 0x77, 0x65, 0x62,
	0x70, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x77, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5c,
	0x0a, 0x12, 0x50, 0x61, 0x72, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x46, 0x6f, 0x72, 0x45, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x64, 0x12, 0x22, 0x2e, 0x77, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x46, 0x6f, 0x72, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x77, 0x65, 0x62, 0x70, 0x61,
	0x67, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x46, 0x6f, 0x72, 0x45, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x10,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x12, 0x20, 0x2e, 0x77, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65,
	0x55, 0x72, 0x6c, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x77, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x55, 0x72, 0x6c, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x42, 0x19, 0x5a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x70, 0x72, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x65, 0x62, 0x70, 0x61, 0x67, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_webpage_proto_rawDescOnce sync.Once
	file_webpage_proto_rawDescData = file_webpage_proto_rawDesc
)

func file_webpage_proto_rawDescGZIP() []byte {
	file_webpage_proto_rawDescOnce.Do(func() {
		file_webpage_proto_rawDescData = protoimpl.X.CompressGZIP(file_webpage_proto_rawDescData)
	})
	return file_webpage_proto_rawDescData
}

var file_webpage_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_webpage_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_webpage_proto_goTypes = []interface{}{
	(ErrCode)(0),                      // 0: webpage.ErrCode
	(*ParseUrlRequest)(nil),           // 1: webpage.ParseUrlRequest
	(*ParseUrlReply)(nil),             // 2: webpage.ParseUrlReply
	(*PageInfo)(nil),                  // 3: webpage.PageInfo
	(*VideoInfo)(nil),                 // 4: webpage.VideoInfo
	(*PhotoInfo)(nil),                 // 5: webpage.PhotoInfo
	(*SavedWebPage)(nil),              // 6: webpage.SavedWebPage
	(*UploadPhoto)(nil),               // 7: webpage.UploadPhoto
	(*ParseUrlForEncodedRequest)(nil), // 8: webpage.ParseUrlForEncodedRequest
	(*ParseUrlForEncodedReply)(nil),   // 9: webpage.ParseUrlForEncodedReply
	(*ParseUrlAndStoreRequest)(nil),   // 10: webpage.ParseUrlAndStoreRequest
	(*ParseUrlAndStoreReply)(nil),     // 11: webpage.ParseUrlAndStoreReply
}
var file_webpage_proto_depIdxs = []int32{
	0,  // 0: webpage.ParseUrlReply.err_code:type_name -> webpage.ErrCode
	3,  // 1: webpage.ParseUrlReply.page:type_name -> webpage.PageInfo
	5,  // 2: webpage.ParseUrlReply.photo:type_name -> webpage.PhotoInfo
	7,  // 3: webpage.PageInfo.photo:type_name -> webpage.UploadPhoto
	4,  // 4: webpage.PageInfo.video:type_name -> webpage.VideoInfo
	3,  // 5: webpage.SavedWebPage.page:type_name -> webpage.PageInfo
	0,  // 6: webpage.ParseUrlForEncodedReply.err_code:type_name -> webpage.ErrCode
	0,  // 7: webpage.ParseUrlAndStoreReply.err_code:type_name -> webpage.ErrCode
	3,  // 8: webpage.ParseUrlAndStoreReply.page:type_name -> webpage.PageInfo
	5,  // 9: webpage.ParseUrlAndStoreReply.photo:type_name -> webpage.PhotoInfo
	1,  // 10: webpage.WebPage.ParseUrl:input_type -> webpage.ParseUrlRequest
	8,  // 11: webpage.WebPage.ParseUrlForEncoded:input_type -> webpage.ParseUrlForEncodedRequest
	10, // 12: webpage.WebPage.ParseUrlAndStore:input_type -> webpage.ParseUrlAndStoreRequest
	2,  // 13: webpage.WebPage.ParseUrl:output_type -> webpage.ParseUrlReply
	9,  // 14: webpage.WebPage.ParseUrlForEncoded:output_type -> webpage.ParseUrlForEncodedReply
	11, // 15: webpage.WebPage.ParseUrlAndStore:output_type -> webpage.ParseUrlAndStoreReply
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_webpage_proto_init() }
func file_webpage_proto_init() {
	if File_webpage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_webpage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webpage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseUrlReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webpage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webpage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webpage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webpage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavedWebPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webpage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadPhoto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webpage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseUrlForEncodedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webpage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseUrlForEncodedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webpage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseUrlAndStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webpage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseUrlAndStoreReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_webpage_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_webpage_proto_goTypes,
		DependencyIndexes: file_webpage_proto_depIdxs,
		EnumInfos:         file_webpage_proto_enumTypes,
		MessageInfos:      file_webpage_proto_msgTypes,
	}.Build()
	File_webpage_proto = out.File
	file_webpage_proto_rawDesc = nil
	file_webpage_proto_goTypes = nil
	file_webpage_proto_depIdxs = nil
}
