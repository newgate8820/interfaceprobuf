//当前目录执行
//protoc --go_out=. ./datacollect.proto
//protoc --java_out=. ./datacollect.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: datacollect.proto

package datacollect

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ## 数据采集kafka_topic ## (使用enum string)
type CollectTopic int32

const (
	CollectTopic_TOPIC_DEFAULT      CollectTopic = 0 // topic-默认
	CollectTopic_TOPIC_DEVICE_INFO  CollectTopic = 1 // topic-设备信息
	CollectTopic_TOPIC_PUSH_MESSAGE CollectTopic = 2 // topic-推送消息
	CollectTopic_TOPIC_SEND_MESSAGE CollectTopic = 3 // topic-发送消息
	CollectTopic_TOPIC_COUNT_DATA   CollectTopic = 4 // topic-协议调用频率
	CollectTopic_TOPIC_USER_TRACE   CollectTopic = 5 // topic-用户记录
	CollectTopic_TOPIC_USER_SESSION CollectTopic = 6 // topic-用户session
)

// Enum value maps for CollectTopic.
var (
	CollectTopic_name = map[int32]string{
		0: "TOPIC_DEFAULT",
		1: "TOPIC_DEVICE_INFO",
		2: "TOPIC_PUSH_MESSAGE",
		3: "TOPIC_SEND_MESSAGE",
		4: "TOPIC_COUNT_DATA",
		5: "TOPIC_USER_TRACE",
		6: "TOPIC_USER_SESSION",
	}
	CollectTopic_value = map[string]int32{
		"TOPIC_DEFAULT":      0,
		"TOPIC_DEVICE_INFO":  1,
		"TOPIC_PUSH_MESSAGE": 2,
		"TOPIC_SEND_MESSAGE": 3,
		"TOPIC_COUNT_DATA":   4,
		"TOPIC_USER_TRACE":   5,
		"TOPIC_USER_SESSION": 6,
	}
)

func (x CollectTopic) Enum() *CollectTopic {
	p := new(CollectTopic)
	*p = x
	return p
}

func (x CollectTopic) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CollectTopic) Descriptor() protoreflect.EnumDescriptor {
	return file_datacollect_proto_enumTypes[0].Descriptor()
}

func (CollectTopic) Type() protoreflect.EnumType {
	return &file_datacollect_proto_enumTypes[0]
}

func (x CollectTopic) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CollectTopic.Descriptor instead.
func (CollectTopic) EnumDescriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{0}
}

// ## 数据采集kafka_key ## (使用enum string)
type CollectKey int32

const (
	CollectKey_KEY_DEVICE_INFO      CollectKey = 0  // key-设备信息
	CollectKey_KEY_PUSH_MESSAGE     CollectKey = 1  // key-推送消息
	CollectKey_KEY_SEND_MESSAGE     CollectKey = 2  // key-发送消息
	CollectKey_KEY_COUNT_DATA       CollectKey = 3  // key-协议调用频率
	CollectKey_KEY_USER_TRACE       CollectKey = 4  // key-用户记录
	CollectKey_KEY_USER_SESSION     CollectKey = 5  // Key-用户session
	CollectKey_KEY_FILE_UPLOAD      CollectKey = 6  // key-文件上传
	CollectKey_KEY_FILE_DOWNLOAD    CollectKey = 7  // key-文件下载
	CollectKey_KEY_AUDIO_VOICE      CollectKey = 8  // key-语音
	CollectKey_KEY_PHONE_CALL       CollectKey = 9  // key-电话
	CollectKey_KEY_FILE_DOWNLOAD_ID CollectKey = 10 // key-文件下载id
	CollectKey_KEY_USER_EXPANSION   CollectKey = 11 // key-用户扩展信息
	CollectKey_KEY_ACTIVE_GROUP     CollectKey = 12 // key-活跃群
	CollectKey_KEY_ACTIVE_GROUP_ID  CollectKey = 13 // key-活跃群id
)

// Enum value maps for CollectKey.
var (
	CollectKey_name = map[int32]string{
		0:  "KEY_DEVICE_INFO",
		1:  "KEY_PUSH_MESSAGE",
		2:  "KEY_SEND_MESSAGE",
		3:  "KEY_COUNT_DATA",
		4:  "KEY_USER_TRACE",
		5:  "KEY_USER_SESSION",
		6:  "KEY_FILE_UPLOAD",
		7:  "KEY_FILE_DOWNLOAD",
		8:  "KEY_AUDIO_VOICE",
		9:  "KEY_PHONE_CALL",
		10: "KEY_FILE_DOWNLOAD_ID",
		11: "KEY_USER_EXPANSION",
		12: "KEY_ACTIVE_GROUP",
		13: "KEY_ACTIVE_GROUP_ID",
	}
	CollectKey_value = map[string]int32{
		"KEY_DEVICE_INFO":      0,
		"KEY_PUSH_MESSAGE":     1,
		"KEY_SEND_MESSAGE":     2,
		"KEY_COUNT_DATA":       3,
		"KEY_USER_TRACE":       4,
		"KEY_USER_SESSION":     5,
		"KEY_FILE_UPLOAD":      6,
		"KEY_FILE_DOWNLOAD":    7,
		"KEY_AUDIO_VOICE":      8,
		"KEY_PHONE_CALL":       9,
		"KEY_FILE_DOWNLOAD_ID": 10,
		"KEY_USER_EXPANSION":   11,
		"KEY_ACTIVE_GROUP":     12,
		"KEY_ACTIVE_GROUP_ID":  13,
	}
)

func (x CollectKey) Enum() *CollectKey {
	p := new(CollectKey)
	*p = x
	return p
}

func (x CollectKey) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CollectKey) Descriptor() protoreflect.EnumDescriptor {
	return file_datacollect_proto_enumTypes[1].Descriptor()
}

func (CollectKey) Type() protoreflect.EnumType {
	return &file_datacollect_proto_enumTypes[1]
}

func (x CollectKey) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CollectKey.Descriptor instead.
func (CollectKey) EnumDescriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{1}
}

// ## 数据采集kafka_消费组 ## (使用enum string)
type CollectGroup int32

const (
	CollectGroup_GROUP_MONITOR_SERVER     CollectGroup = 0 // group-监控服务
	CollectGroup_GROUP_ACTIVE_USER_SERVER CollectGroup = 1 // group-活跃用户服务
	CollectGroup_GROUP_BG                 CollectGroup = 2 // group-数据服务
)

// Enum value maps for CollectGroup.
var (
	CollectGroup_name = map[int32]string{
		0: "GROUP_MONITOR_SERVER",
		1: "GROUP_ACTIVE_USER_SERVER",
		2: "GROUP_BG",
	}
	CollectGroup_value = map[string]int32{
		"GROUP_MONITOR_SERVER":     0,
		"GROUP_ACTIVE_USER_SERVER": 1,
		"GROUP_BG":                 2,
	}
)

func (x CollectGroup) Enum() *CollectGroup {
	p := new(CollectGroup)
	*p = x
	return p
}

func (x CollectGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CollectGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_datacollect_proto_enumTypes[2].Descriptor()
}

func (CollectGroup) Type() protoreflect.EnumType {
	return &file_datacollect_proto_enumTypes[2]
}

func (x CollectGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CollectGroup.Descriptor instead.
func (CollectGroup) EnumDescriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{2}
}

type LinkInformation int32

const (
	LinkInformation_pt_monitor_kafka LinkInformation = 0
)

// Enum value maps for LinkInformation.
var (
	LinkInformation_name = map[int32]string{
		0: "pt_monitor_kafka",
	}
	LinkInformation_value = map[string]int32{
		"pt_monitor_kafka": 0,
	}
)

func (x LinkInformation) Enum() *LinkInformation {
	p := new(LinkInformation)
	*p = x
	return p
}

func (x LinkInformation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LinkInformation) Descriptor() protoreflect.EnumDescriptor {
	return file_datacollect_proto_enumTypes[3].Descriptor()
}

func (LinkInformation) Type() protoreflect.EnumType {
	return &file_datacollect_proto_enumTypes[3]
}

func (x LinkInformation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LinkInformation.Descriptor instead.
func (LinkInformation) EnumDescriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{3}
}

// ## mime类型 ##
type MimeType int32

const (
	MimeType_UNKNOWN     MimeType = 0 // 未知-其他类
	MimeType_APPLICATION MimeType = 1 // 应用程序类
	MimeType_TEXT        MimeType = 2 // 文本类
	MimeType_IMAGE       MimeType = 3 // 图片类
	MimeType_AUDIO       MimeType = 4 // 音频类
	MimeType_VIDEO       MimeType = 5 // 视频类
	MimeType_MESSAGE     MimeType = 6 // message类
	MimeType_DRAWING     MimeType = 7 // drawing类
	MimeType_JAVA        MimeType = 8 // java类
)

// Enum value maps for MimeType.
var (
	MimeType_name = map[int32]string{
		0: "UNKNOWN",
		1: "APPLICATION",
		2: "TEXT",
		3: "IMAGE",
		4: "AUDIO",
		5: "VIDEO",
		6: "MESSAGE",
		7: "DRAWING",
		8: "JAVA",
	}
	MimeType_value = map[string]int32{
		"UNKNOWN":     0,
		"APPLICATION": 1,
		"TEXT":        2,
		"IMAGE":       3,
		"AUDIO":       4,
		"VIDEO":       5,
		"MESSAGE":     6,
		"DRAWING":     7,
		"JAVA":        8,
	}
)

func (x MimeType) Enum() *MimeType {
	p := new(MimeType)
	*p = x
	return p
}

func (x MimeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MimeType) Descriptor() protoreflect.EnumDescriptor {
	return file_datacollect_proto_enumTypes[4].Descriptor()
}

func (MimeType) Type() protoreflect.EnumType {
	return &file_datacollect_proto_enumTypes[4]
}

func (x MimeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MimeType.Descriptor instead.
func (MimeType) EnumDescriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{4}
}

// ## 推送消息-数据类型 ##
type PushMessageType int32

const (
	PushMessageType_ANDROID PushMessageType = 0 // 推送消息量-android
	PushMessageType_IOS     PushMessageType = 1 // 推送消息量-ios
)

// Enum value maps for PushMessageType.
var (
	PushMessageType_name = map[int32]string{
		0: "ANDROID",
		1: "IOS",
	}
	PushMessageType_value = map[string]int32{
		"ANDROID": 0,
		"IOS":     1,
	}
)

func (x PushMessageType) Enum() *PushMessageType {
	p := new(PushMessageType)
	*p = x
	return p
}

func (x PushMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PushMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_datacollect_proto_enumTypes[5].Descriptor()
}

func (PushMessageType) Type() protoreflect.EnumType {
	return &file_datacollect_proto_enumTypes[5]
}

func (x PushMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PushMessageType.Descriptor instead.
func (PushMessageType) EnumDescriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{5}
}

// ## 发送消息-数据类型 ##
type SendMessageType int32

const (
	SendMessageType_U_SendUserMessage          SendMessageType = 0  //用户-发送消息-单聊
	SendMessageType_U_SendChatMessage          SendMessageType = 1  //用户-发送消息-普通群
	SendMessageType_U_SendChannelMessage       SendMessageType = 2  //用户-发送消息-超级群
	SendMessageType_U_SendUserMedia            SendMessageType = 3  //用户-发送媒体-单聊
	SendMessageType_U_SendChatMedia            SendMessageType = 4  //用户-发送媒体-普通群
	SendMessageType_U_SendChannelMedia         SendMessageType = 5  //用户-发送媒体-超级群
	SendMessageType_U_EditMessage              SendMessageType = 6  //用户-编辑消息-总数
	SendMessageType_U_DeleteMessage            SendMessageType = 7  //用户-删除消息-总数
	SendMessageType_U_ForwardMessage           SendMessageType = 8  //用户-转发消息-总数
	SendMessageType_B_SendUserMessage          SendMessageType = 9  //bot-发送消息-单聊
	SendMessageType_B_SendChatMessage          SendMessageType = 10 //bot-发送消息-普通群
	SendMessageType_B_SendChannelMessage       SendMessageType = 11 //bot-发送消息-超级群
	SendMessageType_B_SendUserMedia            SendMessageType = 12 //bot-发送媒体-单聊
	SendMessageType_B_SendChatMedia            SendMessageType = 13 //bot-发送媒体-普通群
	SendMessageType_B_SendChannelMedia         SendMessageType = 14 //bot-发送媒体-超级群
	SendMessageType_B_EditMessage              SendMessageType = 15 //bot-编辑消息-总数
	SendMessageType_B_DeleteMessage            SendMessageType = 16 //bot-删除消息-总数
	SendMessageType_B_ForwardMessage           SendMessageType = 17 //bot-转发消息-总数
	SendMessageType_B_InlineSendUserMessage    SendMessageType = 18 //bot-内联发送媒体-单聊
	SendMessageType_B_InlineSendChatMessage    SendMessageType = 19 //bot-内联发送媒体-普通群
	SendMessageType_B_InlineSendChannelMessage SendMessageType = 20 //bot-内联发送媒体-超级群
	SendMessageType_B_InlineSendUserMedia      SendMessageType = 21 //bot-内联发送媒体-单聊
	SendMessageType_B_InlineSendChatMedia      SendMessageType = 22 //bot-内联发送媒体-普通群
	SendMessageType_B_InlineSendChannelMedia   SendMessageType = 23 //bot-内联发送媒体-超级群
	SendMessageType_U_SendUserMessage_354      SendMessageType = 24 //用户-发送消息-单聊354
	SendMessageType_U_SendChatMessage_354      SendMessageType = 25 //用户-发送消息-普通群354
	SendMessageType_U_SendChannelMessage_354   SendMessageType = 26 //用户-发送消息-超级群354
	SendMessageType_U_SendUserMedia_354        SendMessageType = 27 //用户-发送媒体-单聊354
	SendMessageType_U_SendChatMedia_354        SendMessageType = 28 //用户-发送媒体-普通群354
	SendMessageType_U_SendChannelMedia_354     SendMessageType = 29 //用户-发送媒体-超级群354
)

// Enum value maps for SendMessageType.
var (
	SendMessageType_name = map[int32]string{
		0:  "U_SendUserMessage",
		1:  "U_SendChatMessage",
		2:  "U_SendChannelMessage",
		3:  "U_SendUserMedia",
		4:  "U_SendChatMedia",
		5:  "U_SendChannelMedia",
		6:  "U_EditMessage",
		7:  "U_DeleteMessage",
		8:  "U_ForwardMessage",
		9:  "B_SendUserMessage",
		10: "B_SendChatMessage",
		11: "B_SendChannelMessage",
		12: "B_SendUserMedia",
		13: "B_SendChatMedia",
		14: "B_SendChannelMedia",
		15: "B_EditMessage",
		16: "B_DeleteMessage",
		17: "B_ForwardMessage",
		18: "B_InlineSendUserMessage",
		19: "B_InlineSendChatMessage",
		20: "B_InlineSendChannelMessage",
		21: "B_InlineSendUserMedia",
		22: "B_InlineSendChatMedia",
		23: "B_InlineSendChannelMedia",
		24: "U_SendUserMessage_354",
		25: "U_SendChatMessage_354",
		26: "U_SendChannelMessage_354",
		27: "U_SendUserMedia_354",
		28: "U_SendChatMedia_354",
		29: "U_SendChannelMedia_354",
	}
	SendMessageType_value = map[string]int32{
		"U_SendUserMessage":          0,
		"U_SendChatMessage":          1,
		"U_SendChannelMessage":       2,
		"U_SendUserMedia":            3,
		"U_SendChatMedia":            4,
		"U_SendChannelMedia":         5,
		"U_EditMessage":              6,
		"U_DeleteMessage":            7,
		"U_ForwardMessage":           8,
		"B_SendUserMessage":          9,
		"B_SendChatMessage":          10,
		"B_SendChannelMessage":       11,
		"B_SendUserMedia":            12,
		"B_SendChatMedia":            13,
		"B_SendChannelMedia":         14,
		"B_EditMessage":              15,
		"B_DeleteMessage":            16,
		"B_ForwardMessage":           17,
		"B_InlineSendUserMessage":    18,
		"B_InlineSendChatMessage":    19,
		"B_InlineSendChannelMessage": 20,
		"B_InlineSendUserMedia":      21,
		"B_InlineSendChatMedia":      22,
		"B_InlineSendChannelMedia":   23,
		"U_SendUserMessage_354":      24,
		"U_SendChatMessage_354":      25,
		"U_SendChannelMessage_354":   26,
		"U_SendUserMedia_354":        27,
		"U_SendChatMedia_354":        28,
		"U_SendChannelMedia_354":     29,
	}
)

func (x SendMessageType) Enum() *SendMessageType {
	p := new(SendMessageType)
	*p = x
	return p
}

func (x SendMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_datacollect_proto_enumTypes[6].Descriptor()
}

func (SendMessageType) Type() protoreflect.EnumType {
	return &file_datacollect_proto_enumTypes[6]
}

func (x SendMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SendMessageType.Descriptor instead.
func (SendMessageType) EnumDescriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{6}
}

// ## 推送消息-数据对象 ##
type PushMessageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type PushMessageType `protobuf:"varint,1,opt,name=type,proto3,enum=datacollect.PushMessageType" json:"type,omitempty"` // 类型
	Succ int32           `protobuf:"varint,2,opt,name=succ,proto3" json:"succ,omitempty"`                                  // succ 成功数
	Fail int32           `protobuf:"varint,3,opt,name=fail,proto3" json:"fail,omitempty"`                                  // fail 失败数
}

func (x *PushMessageData) Reset() {
	*x = PushMessageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushMessageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMessageData) ProtoMessage() {}

func (x *PushMessageData) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMessageData.ProtoReflect.Descriptor instead.
func (*PushMessageData) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{0}
}

func (x *PushMessageData) GetType() PushMessageType {
	if x != nil {
		return x.Type
	}
	return PushMessageType_ANDROID
}

func (x *PushMessageData) GetSucc() int32 {
	if x != nil {
		return x.Succ
	}
	return 0
}

func (x *PushMessageData) GetFail() int32 {
	if x != nil {
		return x.Fail
	}
	return 0
}

// ## 推送消息-数据对象列表 ##
type PushMessageDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*PushMessageData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`            // data 数据列表
	Timestamp int32              `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // timestamp 当前时间戳-秒
}

func (x *PushMessageDataList) Reset() {
	*x = PushMessageDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushMessageDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMessageDataList) ProtoMessage() {}

func (x *PushMessageDataList) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMessageDataList.ProtoReflect.Descriptor instead.
func (*PushMessageDataList) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{1}
}

func (x *PushMessageDataList) GetData() []*PushMessageData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PushMessageDataList) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// ## 发送消息-数据对象列表 ##
type SendMessageDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*SendMessageData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`            // data 数据列表
	Timestamp int32              `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // timestamp 当前时间戳-秒
}

func (x *SendMessageDataList) Reset() {
	*x = SendMessageDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageDataList) ProtoMessage() {}

func (x *SendMessageDataList) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageDataList.ProtoReflect.Descriptor instead.
func (*SendMessageDataList) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{2}
}

func (x *SendMessageDataList) GetData() []*SendMessageData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SendMessageDataList) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// ## 发送消息-数据对象 ##
type SendMessageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       SendMessageType `protobuf:"varint,1,opt,name=type,proto3,enum=datacollect.SendMessageType" json:"type,omitempty"` // type 类型
	Succ       int32           `protobuf:"varint,2,opt,name=succ,proto3" json:"succ,omitempty"`                                  // succ 成功数
	Fail       int32           `protobuf:"varint,3,opt,name=fail,proto3" json:"fail,omitempty"`                                  // fail 失败数
	ErrorCodes []*ErrorData    `protobuf:"bytes,4,rep,name=ErrorCodes,proto3" json:"ErrorCodes,omitempty"`
}

func (x *SendMessageData) Reset() {
	*x = SendMessageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageData) ProtoMessage() {}

func (x *SendMessageData) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageData.ProtoReflect.Descriptor instead.
func (*SendMessageData) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{3}
}

func (x *SendMessageData) GetType() SendMessageType {
	if x != nil {
		return x.Type
	}
	return SendMessageType_U_SendUserMessage
}

func (x *SendMessageData) GetSucc() int32 {
	if x != nil {
		return x.Succ
	}
	return 0
}

func (x *SendMessageData) GetFail() int32 {
	if x != nil {
		return x.Fail
	}
	return 0
}

func (x *SendMessageData) GetErrorCodes() []*ErrorData {
	if x != nil {
		return x.ErrorCodes
	}
	return nil
}

// ## 统计次数-数据项列表 ##
type CountDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*CountData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`            // data 数据列表
	Timestamp int32        `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // timestamp 当前时间戳-秒
}

func (x *CountDataList) Reset() {
	*x = CountDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountDataList) ProtoMessage() {}

func (x *CountDataList) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountDataList.ProtoReflect.Descriptor instead.
func (*CountDataList) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{4}
}

func (x *CountDataList) GetData() []*CountData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CountDataList) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// ## 统计次数-数据项 ##
type CountData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`     // 协议id
	Data int64 `protobuf:"varint,2,opt,name=data,proto3" json:"data,omitempty"` // 计数值
}

func (x *CountData) Reset() {
	*x = CountData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountData) ProtoMessage() {}

func (x *CountData) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountData.ProtoReflect.Descriptor instead.
func (*CountData) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{5}
}

func (x *CountData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CountData) GetData() int64 {
	if x != nil {
		return x.Data
	}
	return 0
}

// ## 设备信息 ##
type DeviceInfoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId         int64  `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`                        // key_id
	UserId        int32  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                     // user_id
	ApiId         int32  `protobuf:"varint,3,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`                        // api_id 通过此字段判断设备类型(30915-android, ios-32237, pc-17349)
	UniqueNumber  string `protobuf:"bytes,4,opt,name=unique_number,json=uniqueNumber,proto3" json:"unique_number,omitempty"`    // unique_number 设备唯一识别码
	DeviceModel   string `protobuf:"bytes,5,opt,name=device_model,json=deviceModel,proto3" json:"device_model,omitempty"`       // device_model 设备型号
	SystemVersion string `protobuf:"bytes,6,opt,name=system_version,json=systemVersion,proto3" json:"system_version,omitempty"` // system_version 系统版本
	AppVersion    string `protobuf:"bytes,7,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`          // app_version app版本
	LangCode      string `protobuf:"bytes,8,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`                // lang_code 语言
}

func (x *DeviceInfoData) Reset() {
	*x = DeviceInfoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfoData) ProtoMessage() {}

func (x *DeviceInfoData) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfoData.ProtoReflect.Descriptor instead.
func (*DeviceInfoData) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{6}
}

func (x *DeviceInfoData) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *DeviceInfoData) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeviceInfoData) GetApiId() int32 {
	if x != nil {
		return x.ApiId
	}
	return 0
}

func (x *DeviceInfoData) GetUniqueNumber() string {
	if x != nil {
		return x.UniqueNumber
	}
	return ""
}

func (x *DeviceInfoData) GetDeviceModel() string {
	if x != nil {
		return x.DeviceModel
	}
	return ""
}

func (x *DeviceInfoData) GetSystemVersion() string {
	if x != nil {
		return x.SystemVersion
	}
	return ""
}

func (x *DeviceInfoData) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *DeviceInfoData) GetLangCode() string {
	if x != nil {
		return x.LangCode
	}
	return ""
}

// ## 设备信息列表 ##
type DeviceInfoDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*DeviceInfoData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`            // data 数据列表
	Timestamp int32             `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // timestamp 当前时间戳-秒
}

func (x *DeviceInfoDataList) Reset() {
	*x = DeviceInfoDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfoDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfoDataList) ProtoMessage() {}

func (x *DeviceInfoDataList) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfoDataList.ProtoReflect.Descriptor instead.
func (*DeviceInfoDataList) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{7}
}

func (x *DeviceInfoDataList) GetData() []*DeviceInfoData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DeviceInfoDataList) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// ## 用户记录信息 ##
type UserTraceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId      int64  `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`               // key_id
	UserId     int32  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`            // user_id
	ApiId      int32  `protobuf:"varint,3,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`               // api_id 通过此字段判断设备类型(30915-android, ios-32237, pc-17349)
	ModuleId   int64  `protobuf:"varint,4,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`      // module_id 通过此字段区分是登录、注册、发送短信等
	Phone      string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`                             // phone 手机号
	ClientIp   string `protobuf:"bytes,6,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`       // client_ip
	MetaData   string `protobuf:"bytes,7,opt,name=meta_data,json=metaData,proto3" json:"meta_data,omitempty"`       // meta_data 其他信息
	Timestamp  int32  `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                    // timestamp 当前时间戳-秒
	AppVersion string `protobuf:"bytes,9,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"` // app_version app版本
}

func (x *UserTraceData) Reset() {
	*x = UserTraceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTraceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTraceData) ProtoMessage() {}

func (x *UserTraceData) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTraceData.ProtoReflect.Descriptor instead.
func (*UserTraceData) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{8}
}

func (x *UserTraceData) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *UserTraceData) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserTraceData) GetApiId() int32 {
	if x != nil {
		return x.ApiId
	}
	return 0
}

func (x *UserTraceData) GetModuleId() int64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *UserTraceData) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserTraceData) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *UserTraceData) GetMetaData() string {
	if x != nil {
		return x.MetaData
	}
	return ""
}

func (x *UserTraceData) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *UserTraceData) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

// ## 用户记录信息列表 ##
type UserTraceDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*UserTraceData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`            // data 数据列表
	Timestamp int32            `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // timestamp 当前时间戳-秒
}

func (x *UserTraceDataList) Reset() {
	*x = UserTraceDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTraceDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTraceDataList) ProtoMessage() {}

func (x *UserTraceDataList) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTraceDataList.ProtoReflect.Descriptor instead.
func (*UserTraceDataList) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{9}
}

func (x *UserTraceDataList) GetData() []*UserTraceData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UserTraceDataList) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type UserSessionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId      int64 `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`                // key_id
	UserId     int32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             // user_id
	OnlineFlag int32 `protobuf:"varint,3,opt,name=online_flag,json=onlineFlag,proto3" json:"online_flag,omitempty"` // online_flag 上线标识
	ApiId      int32 `protobuf:"varint,4,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`                // api_id
}

func (x *UserSessionData) Reset() {
	*x = UserSessionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSessionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSessionData) ProtoMessage() {}

func (x *UserSessionData) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSessionData.ProtoReflect.Descriptor instead.
func (*UserSessionData) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{10}
}

func (x *UserSessionData) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *UserSessionData) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserSessionData) GetOnlineFlag() int32 {
	if x != nil {
		return x.OnlineFlag
	}
	return 0
}

func (x *UserSessionData) GetApiId() int32 {
	if x != nil {
		return x.ApiId
	}
	return 0
}

type UserSessionDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*UserSessionData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`            // data 数据列表
	Timestamp int32              `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // timestamp 当前时间戳-秒
}

func (x *UserSessionDataList) Reset() {
	*x = UserSessionDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSessionDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSessionDataList) ProtoMessage() {}

func (x *UserSessionDataList) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSessionDataList.ProtoReflect.Descriptor instead.
func (*UserSessionDataList) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{11}
}

func (x *UserSessionDataList) GetData() []*UserSessionData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UserSessionDataList) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 语音时长
type AudioVoiceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration  int64 `protobuf:"varint,1,opt,name=duration,proto3" json:"duration,omitempty"`        // duration 总时长
	Timestamp int32 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`      // timestamp 当前时间戳-秒
	ApiId     int32 `protobuf:"varint,3,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"` // api_id
}

func (x *AudioVoiceData) Reset() {
	*x = AudioVoiceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioVoiceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioVoiceData) ProtoMessage() {}

func (x *AudioVoiceData) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioVoiceData.ProtoReflect.Descriptor instead.
func (*AudioVoiceData) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{12}
}

func (x *AudioVoiceData) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *AudioVoiceData) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *AudioVoiceData) GetApiId() int32 {
	if x != nil {
		return x.ApiId
	}
	return 0
}

type AudioVoiceDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*AudioVoiceData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`            // data 数据列表
	Timestamp int32             `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // timestamp 当前时间戳-秒
}

func (x *AudioVoiceDataList) Reset() {
	*x = AudioVoiceDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioVoiceDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioVoiceDataList) ProtoMessage() {}

func (x *AudioVoiceDataList) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioVoiceDataList.ProtoReflect.Descriptor instead.
func (*AudioVoiceDataList) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{13}
}

func (x *AudioVoiceDataList) GetData() []*AudioVoiceData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AudioVoiceDataList) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 电话时长
type PhoneCallData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration  int64 `protobuf:"varint,1,opt,name=duration,proto3" json:"duration,omitempty"`        // duration 总时长
	Timestamp int32 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`      // timestamp 当前时间戳-秒
	ApiId     int32 `protobuf:"varint,3,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"` // api_id
}

func (x *PhoneCallData) Reset() {
	*x = PhoneCallData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneCallData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneCallData) ProtoMessage() {}

func (x *PhoneCallData) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneCallData.ProtoReflect.Descriptor instead.
func (*PhoneCallData) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{14}
}

func (x *PhoneCallData) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *PhoneCallData) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PhoneCallData) GetApiId() int32 {
	if x != nil {
		return x.ApiId
	}
	return 0
}

type PhoneCallDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*PhoneCallData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`            // data 数据列表
	Timestamp int32            `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // timestamp 当前时间戳-秒
}

func (x *PhoneCallDataList) Reset() {
	*x = PhoneCallDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneCallDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneCallDataList) ProtoMessage() {}

func (x *PhoneCallDataList) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneCallDataList.ProtoReflect.Descriptor instead.
func (*PhoneCallDataList) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{15}
}

func (x *PhoneCallDataList) GetData() []*PhoneCallData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PhoneCallDataList) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 文件上传
type FileUploadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type MimeType `protobuf:"varint,1,opt,name=type,proto3,enum=datacollect.MimeType" json:"type,omitempty"` // 类型
	Succ int32    `protobuf:"varint,2,opt,name=succ,proto3" json:"succ,omitempty"`                           // succ 成功数
	Fail int32    `protobuf:"varint,3,opt,name=fail,proto3" json:"fail,omitempty"`                           // fail 失败数
}

func (x *FileUploadData) Reset() {
	*x = FileUploadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUploadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadData) ProtoMessage() {}

func (x *FileUploadData) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadData.ProtoReflect.Descriptor instead.
func (*FileUploadData) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{16}
}

func (x *FileUploadData) GetType() MimeType {
	if x != nil {
		return x.Type
	}
	return MimeType_UNKNOWN
}

func (x *FileUploadData) GetSucc() int32 {
	if x != nil {
		return x.Succ
	}
	return 0
}

func (x *FileUploadData) GetFail() int32 {
	if x != nil {
		return x.Fail
	}
	return 0
}

// 文件上传list
type FileUploadDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*FileUploadData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`            // data 数据列表
	Timestamp int32             `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // timestamp 当前时间戳-秒
}

func (x *FileUploadDataList) Reset() {
	*x = FileUploadDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUploadDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadDataList) ProtoMessage() {}

func (x *FileUploadDataList) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadDataList.ProtoReflect.Descriptor instead.
func (*FileUploadDataList) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{17}
}

func (x *FileUploadDataList) GetData() []*FileUploadData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileUploadDataList) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 文件下载
type FileDownloadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type MimeType `protobuf:"varint,1,opt,name=type,proto3,enum=datacollect.MimeType" json:"type,omitempty"` // type 类型
	Succ int32    `protobuf:"varint,2,opt,name=succ,proto3" json:"succ,omitempty"`                           // succ 成功数
	Fail int32    `protobuf:"varint,3,opt,name=fail,proto3" json:"fail,omitempty"`                           // fail 失败数
}

func (x *FileDownloadData) Reset() {
	*x = FileDownloadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDownloadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadData) ProtoMessage() {}

func (x *FileDownloadData) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadData.ProtoReflect.Descriptor instead.
func (*FileDownloadData) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{18}
}

func (x *FileDownloadData) GetType() MimeType {
	if x != nil {
		return x.Type
	}
	return MimeType_UNKNOWN
}

func (x *FileDownloadData) GetSucc() int32 {
	if x != nil {
		return x.Succ
	}
	return 0
}

func (x *FileDownloadData) GetFail() int32 {
	if x != nil {
		return x.Fail
	}
	return 0
}

// 文件下载list
type FileDownloadDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*FileDownloadData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`            // data 数据列表
	Timestamp int32               `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // timestamp 当前时间戳-秒
}

func (x *FileDownloadDataList) Reset() {
	*x = FileDownloadDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDownloadDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadDataList) ProtoMessage() {}

func (x *FileDownloadDataList) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadDataList.ProtoReflect.Descriptor instead.
func (*FileDownloadDataList) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{19}
}

func (x *FileDownloadDataList) GetData() []*FileDownloadData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileDownloadDataList) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 文件下载 fid
type FileDownloadIdData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                   //
	AccessHash int64 `protobuf:"varint,2,opt,name=access_hash,json=accessHash,proto3" json:"access_hash,omitempty"` //
	Succ       int32 `protobuf:"varint,3,opt,name=succ,proto3" json:"succ,omitempty"`                               // succ 成功数
	Fail       int32 `protobuf:"varint,4,opt,name=fail,proto3" json:"fail,omitempty"`                               // fail 失败数
}

func (x *FileDownloadIdData) Reset() {
	*x = FileDownloadIdData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDownloadIdData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadIdData) ProtoMessage() {}

func (x *FileDownloadIdData) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadIdData.ProtoReflect.Descriptor instead.
func (*FileDownloadIdData) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{20}
}

func (x *FileDownloadIdData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileDownloadIdData) GetAccessHash() int64 {
	if x != nil {
		return x.AccessHash
	}
	return 0
}

func (x *FileDownloadIdData) GetSucc() int32 {
	if x != nil {
		return x.Succ
	}
	return 0
}

func (x *FileDownloadIdData) GetFail() int32 {
	if x != nil {
		return x.Fail
	}
	return 0
}

// 文件下载fid list
type FileDownloadIdDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*FileDownloadIdData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`            // data 数据列表
	Timestamp int32                 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // timestamp 当前时间戳-秒
}

func (x *FileDownloadIdDataList) Reset() {
	*x = FileDownloadIdDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDownloadIdDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadIdDataList) ProtoMessage() {}

func (x *FileDownloadIdDataList) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadIdDataList.ProtoReflect.Descriptor instead.
func (*FileDownloadIdDataList) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{21}
}

func (x *FileDownloadIdDataList) GetData() []*FileDownloadIdData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileDownloadIdDataList) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type UserExpansionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Data   string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UserExpansionData) Reset() {
	*x = UserExpansionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserExpansionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserExpansionData) ProtoMessage() {}

func (x *UserExpansionData) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserExpansionData.ProtoReflect.Descriptor instead.
func (*UserExpansionData) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{22}
}

func (x *UserExpansionData) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserExpansionData) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type ActiveGroupData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"` //群类型
	Data int32 `protobuf:"varint,2,opt,name=data,proto3" json:"data,omitempty"` //数据
}

func (x *ActiveGroupData) Reset() {
	*x = ActiveGroupData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveGroupData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveGroupData) ProtoMessage() {}

func (x *ActiveGroupData) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveGroupData.ProtoReflect.Descriptor instead.
func (*ActiveGroupData) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{23}
}

func (x *ActiveGroupData) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ActiveGroupData) GetData() int32 {
	if x != nil {
		return x.Data
	}
	return 0
}

// 活跃群
type ActiveGroupDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*ActiveGroupData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`            // data 数据
	Timestamp int32              `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // timestamp 当前时间戳-秒
}

func (x *ActiveGroupDataList) Reset() {
	*x = ActiveGroupDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveGroupDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveGroupDataList) ProtoMessage() {}

func (x *ActiveGroupDataList) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveGroupDataList.ProtoReflect.Descriptor instead.
func (*ActiveGroupDataList) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{24}
}

func (x *ActiveGroupDataList) GetData() []*ActiveGroupData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ActiveGroupDataList) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 活跃群id
type ActiveGroupIdData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId   int32 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`       //群id
	GroupType int32 `protobuf:"varint,2,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"` //群类型
}

func (x *ActiveGroupIdData) Reset() {
	*x = ActiveGroupIdData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveGroupIdData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveGroupIdData) ProtoMessage() {}

func (x *ActiveGroupIdData) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveGroupIdData.ProtoReflect.Descriptor instead.
func (*ActiveGroupIdData) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{25}
}

func (x *ActiveGroupIdData) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ActiveGroupIdData) GetGroupType() int32 {
	if x != nil {
		return x.GroupType
	}
	return 0
}

type ActiveGroupIdDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupIds  []int32 `protobuf:"varint,1,rep,packed,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"` // data 数据
	GroupType int32   `protobuf:"varint,2,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"`     // 群类型
	Timestamp int32   `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                      // timestamp 当前时间戳-秒
}

func (x *ActiveGroupIdDataList) Reset() {
	*x = ActiveGroupIdDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveGroupIdDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveGroupIdDataList) ProtoMessage() {}

func (x *ActiveGroupIdDataList) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveGroupIdDataList.ProtoReflect.Descriptor instead.
func (*ActiveGroupIdDataList) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{26}
}

func (x *ActiveGroupIdDataList) GetGroupIds() []int32 {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

func (x *ActiveGroupIdDataList) GetGroupType() int32 {
	if x != nil {
		return x.GroupType
	}
	return 0
}

func (x *ActiveGroupIdDataList) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type ErrorData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32 `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Count int32 `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *ErrorData) Reset() {
	*x = ErrorData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datacollect_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorData) ProtoMessage() {}

func (x *ErrorData) ProtoReflect() protoreflect.Message {
	mi := &file_datacollect_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorData.ProtoReflect.Descriptor instead.
func (*ErrorData) Descriptor() ([]byte, []int) {
	return file_datacollect_proto_rawDescGZIP(), []int{27}
}

func (x *ErrorData) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorData) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_datacollect_proto protoreflect.FileDescriptor

var file_datacollect_proto_rawDesc = []byte{
	0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x22, 0x6b, 0x0a, 0x0f, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x75, 0x63, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x75, 0x63, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x69,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x61, 0x69, 0x6c, 0x22, 0x65, 0x0a,
	0x13, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x2e, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x22, 0x65, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xa3, 0x01, 0x0a, 0x0f,
	0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x75, 0x63, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x75, 0x63, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x61, 0x69, 0x6c, 0x12, 0x36, 0x0a, 0x0a, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x22, 0x59, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x2f, 0x0a, 0x09,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x84, 0x02,
	0x0a, 0x0e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x63, 0x0a, 0x12, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x82, 0x02, 0x0a, 0x0d, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x6b,
	0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6b, 0x65, 0x79,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61,
	0x70, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x69,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x61,
	0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x22, 0x79, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x66,
	0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x13,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x61, 0x0a, 0x0e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x56, 0x6f, 0x69, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x15, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x12, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x60, 0x0a, 0x0d, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x22, 0x61, 0x0a,
	0x11, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x22, 0x63, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x4d,
	0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x75, 0x63, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x75, 0x63,
	0x63, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x66, 0x61, 0x69, 0x6c, 0x22, 0x63, 0x0a, 0x12, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x65, 0x0a, 0x10, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x4d, 0x69, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x75, 0x63,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x75, 0x63, 0x63, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x61, 0x69,
	0x6c, 0x22, 0x67, 0x0a, 0x14, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x6d, 0x0a, 0x12, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x75, 0x63, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x75, 0x63, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x61, 0x69, 0x6c, 0x22, 0x6b, 0x0a, 0x16, 0x46, 0x69, 0x6c,
	0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x40, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78,
	0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x39, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x65, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x4d, 0x0a, 0x11, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x22, 0x71, 0x0a, 0x15, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x35, 0x0a, 0x09,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x2a, 0xac, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x5f, 0x44, 0x45,
	0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x4f, 0x50, 0x49, 0x43,
	0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12, 0x16,
	0x0a, 0x12, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x5f, 0x50, 0x55, 0x53, 0x48, 0x5f, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x5f,
	0x53, 0x45, 0x4e, 0x44, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x03, 0x12, 0x14,
	0x0a, 0x10, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x44, 0x41,
	0x54, 0x41, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x54, 0x52, 0x41, 0x43, 0x45, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x4f,
	0x50, 0x49, 0x43, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x10, 0x06, 0x2a, 0xc1, 0x02, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4b, 0x65,
	0x79, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f,
	0x49, 0x4e, 0x46, 0x4f, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4b, 0x45, 0x59, 0x5f, 0x50, 0x55,
	0x53, 0x48, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10,
	0x4b, 0x45, 0x59, 0x5f, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x4b, 0x45, 0x59, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x4b, 0x45, 0x59, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x54, 0x52, 0x41, 0x43, 0x45, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x4b, 0x45,
	0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x05,
	0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x45, 0x59, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x55, 0x50, 0x4c,
	0x4f, 0x41, 0x44, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x4b, 0x45, 0x59, 0x5f, 0x46, 0x49, 0x4c,
	0x45, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f,
	0x4b, 0x45, 0x59, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x10,
	0x08, 0x12, 0x12, 0x0a, 0x0e, 0x4b, 0x45, 0x59, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x43,
	0x41, 0x4c, 0x4c, 0x10, 0x09, 0x12, 0x18, 0x0a, 0x14, 0x4b, 0x45, 0x59, 0x5f, 0x46, 0x49, 0x4c,
	0x45, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x0a, 0x12,
	0x16, 0x0a, 0x12, 0x4b, 0x45, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x58, 0x50, 0x41,
	0x4e, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x0b, 0x12, 0x14, 0x0a, 0x10, 0x4b, 0x45, 0x59, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x0c, 0x12, 0x17, 0x0a,
	0x13, 0x4b, 0x45, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55,
	0x50, 0x5f, 0x49, 0x44, 0x10, 0x0d, 0x2a, 0x54, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f,
	0x4d, 0x4f, 0x4e, 0x49, 0x54, 0x4f, 0x52, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x10, 0x00,
	0x12, 0x1c, 0x0a, 0x18, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x42, 0x47, 0x10, 0x02, 0x2a, 0x27, 0x0a, 0x0f,
	0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x10, 0x70, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x6b, 0x61,
	0x66, 0x6b, 0x61, 0x10, 0x00, 0x2a, 0x77, 0x0a, 0x08, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f,
	0x0a, 0x0b, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4d, 0x41,
	0x47, 0x45, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x10, 0x04, 0x12,
	0x09, 0x0a, 0x05, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x52, 0x41, 0x57, 0x49,
	0x4e, 0x47, 0x10, 0x07, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x41, 0x56, 0x41, 0x10, 0x08, 0x2a, 0x27,
	0x0a, 0x0f, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x4e, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x49, 0x4f, 0x53, 0x10, 0x01, 0x2a, 0xf1, 0x05, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x55,
	0x5f, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x5f, 0x53,
	0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x5f, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x10, 0x04, 0x12, 0x16, 0x0a,
	0x12, 0x55, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x5f, 0x45, 0x64, 0x69, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x5f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x07, 0x12, 0x14, 0x0a,
	0x10, 0x55, 0x5f, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x09, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x5f,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10,
	0x0a, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x0b, 0x12, 0x13, 0x0a, 0x0f, 0x42,
	0x5f, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x10, 0x0c,
	0x12, 0x13, 0x0a, 0x0f, 0x42, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x10, 0x0d, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x10, 0x0e, 0x12, 0x11, 0x0a,
	0x0d, 0x42, 0x5f, 0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x0f,
	0x12, 0x13, 0x0a, 0x0f, 0x42, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x10, 0x10, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x5f, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x11, 0x12, 0x1b, 0x0a, 0x17, 0x42,
	0x5f, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x12, 0x12, 0x1b, 0x0a, 0x17, 0x42, 0x5f, 0x49, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x10, 0x13, 0x12, 0x1e, 0x0a, 0x1a, 0x42, 0x5f, 0x49, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x10, 0x14, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x5f, 0x49, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x10, 0x15,
	0x12, 0x19, 0x0a, 0x15, 0x42, 0x5f, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x10, 0x16, 0x12, 0x1c, 0x0a, 0x18, 0x42,
	0x5f, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x10, 0x17, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x5f, 0x53,
	0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x33,
	0x35, 0x34, 0x10, 0x18, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x33, 0x35, 0x34, 0x10, 0x19, 0x12,
	0x1c, 0x0a, 0x18, 0x55, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x33, 0x35, 0x34, 0x10, 0x1a, 0x12, 0x17, 0x0a,
	0x13, 0x55, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x5f, 0x33, 0x35, 0x34, 0x10, 0x1b, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x5f, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x33, 0x35, 0x34, 0x10, 0x1c, 0x12,
	0x1a, 0x0a, 0x16, 0x55, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x33, 0x35, 0x34, 0x10, 0x1d, 0x42, 0x4c, 0x0a, 0x20, 0x69,
	0x6d, 0x2e, 0x62, 0x69, 0x67, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x0b, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5a, 0x1b, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_datacollect_proto_rawDescOnce sync.Once
	file_datacollect_proto_rawDescData = file_datacollect_proto_rawDesc
)

func file_datacollect_proto_rawDescGZIP() []byte {
	file_datacollect_proto_rawDescOnce.Do(func() {
		file_datacollect_proto_rawDescData = protoimpl.X.CompressGZIP(file_datacollect_proto_rawDescData)
	})
	return file_datacollect_proto_rawDescData
}

var file_datacollect_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_datacollect_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_datacollect_proto_goTypes = []interface{}{
	(CollectTopic)(0),              // 0: datacollect.CollectTopic
	(CollectKey)(0),                // 1: datacollect.CollectKey
	(CollectGroup)(0),              // 2: datacollect.CollectGroup
	(LinkInformation)(0),           // 3: datacollect.LinkInformation
	(MimeType)(0),                  // 4: datacollect.MimeType
	(PushMessageType)(0),           // 5: datacollect.PushMessageType
	(SendMessageType)(0),           // 6: datacollect.SendMessageType
	(*PushMessageData)(nil),        // 7: datacollect.PushMessageData
	(*PushMessageDataList)(nil),    // 8: datacollect.PushMessageDataList
	(*SendMessageDataList)(nil),    // 9: datacollect.SendMessageDataList
	(*SendMessageData)(nil),        // 10: datacollect.SendMessageData
	(*CountDataList)(nil),          // 11: datacollect.CountDataList
	(*CountData)(nil),              // 12: datacollect.CountData
	(*DeviceInfoData)(nil),         // 13: datacollect.DeviceInfoData
	(*DeviceInfoDataList)(nil),     // 14: datacollect.DeviceInfoDataList
	(*UserTraceData)(nil),          // 15: datacollect.UserTraceData
	(*UserTraceDataList)(nil),      // 16: datacollect.UserTraceDataList
	(*UserSessionData)(nil),        // 17: datacollect.UserSessionData
	(*UserSessionDataList)(nil),    // 18: datacollect.UserSessionDataList
	(*AudioVoiceData)(nil),         // 19: datacollect.AudioVoiceData
	(*AudioVoiceDataList)(nil),     // 20: datacollect.AudioVoiceDataList
	(*PhoneCallData)(nil),          // 21: datacollect.PhoneCallData
	(*PhoneCallDataList)(nil),      // 22: datacollect.PhoneCallDataList
	(*FileUploadData)(nil),         // 23: datacollect.FileUploadData
	(*FileUploadDataList)(nil),     // 24: datacollect.FileUploadDataList
	(*FileDownloadData)(nil),       // 25: datacollect.FileDownloadData
	(*FileDownloadDataList)(nil),   // 26: datacollect.FileDownloadDataList
	(*FileDownloadIdData)(nil),     // 27: datacollect.FileDownloadIdData
	(*FileDownloadIdDataList)(nil), // 28: datacollect.FileDownloadIdDataList
	(*UserExpansionData)(nil),      // 29: datacollect.UserExpansionData
	(*ActiveGroupData)(nil),        // 30: datacollect.ActiveGroupData
	(*ActiveGroupDataList)(nil),    // 31: datacollect.ActiveGroupDataList
	(*ActiveGroupIdData)(nil),      // 32: datacollect.ActiveGroupIdData
	(*ActiveGroupIdDataList)(nil),  // 33: datacollect.ActiveGroupIdDataList
	(*ErrorData)(nil),              // 34: datacollect.ErrorData
}
var file_datacollect_proto_depIdxs = []int32{
	5,  // 0: datacollect.PushMessageData.type:type_name -> datacollect.PushMessageType
	7,  // 1: datacollect.PushMessageDataList.data:type_name -> datacollect.PushMessageData
	10, // 2: datacollect.SendMessageDataList.data:type_name -> datacollect.SendMessageData
	6,  // 3: datacollect.SendMessageData.type:type_name -> datacollect.SendMessageType
	34, // 4: datacollect.SendMessageData.ErrorCodes:type_name -> datacollect.ErrorData
	12, // 5: datacollect.CountDataList.data:type_name -> datacollect.CountData
	13, // 6: datacollect.DeviceInfoDataList.data:type_name -> datacollect.DeviceInfoData
	15, // 7: datacollect.UserTraceDataList.data:type_name -> datacollect.UserTraceData
	17, // 8: datacollect.UserSessionDataList.data:type_name -> datacollect.UserSessionData
	19, // 9: datacollect.AudioVoiceDataList.data:type_name -> datacollect.AudioVoiceData
	21, // 10: datacollect.PhoneCallDataList.data:type_name -> datacollect.PhoneCallData
	4,  // 11: datacollect.FileUploadData.type:type_name -> datacollect.MimeType
	23, // 12: datacollect.FileUploadDataList.data:type_name -> datacollect.FileUploadData
	4,  // 13: datacollect.FileDownloadData.type:type_name -> datacollect.MimeType
	25, // 14: datacollect.FileDownloadDataList.data:type_name -> datacollect.FileDownloadData
	27, // 15: datacollect.FileDownloadIdDataList.data:type_name -> datacollect.FileDownloadIdData
	30, // 16: datacollect.ActiveGroupDataList.data:type_name -> datacollect.ActiveGroupData
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_datacollect_proto_init() }
func file_datacollect_proto_init() {
	if File_datacollect_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_datacollect_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushMessageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushMessageDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfoDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTraceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTraceDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSessionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSessionDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioVoiceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioVoiceDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneCallData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneCallDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUploadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUploadDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDownloadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDownloadDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDownloadIdData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDownloadIdDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserExpansionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveGroupData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveGroupDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveGroupIdData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveGroupIdDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datacollect_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_datacollect_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_datacollect_proto_goTypes,
		DependencyIndexes: file_datacollect_proto_depIdxs,
		EnumInfos:         file_datacollect_proto_enumTypes,
		MessageInfos:      file_datacollect_proto_msgTypes,
	}.Build()
	File_datacollect_proto = out.File
	file_datacollect_proto_rawDesc = nil
	file_datacollect_proto_goTypes = nil
	file_datacollect_proto_depIdxs = nil
}
