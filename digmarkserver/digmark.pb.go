// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: digmark.proto

// protoc --gogofast_out=plugins=grpc:. *.proto
// protoc --gogofast_out=plugins=grpc:. ./gitlab.chatserver.im/interfaceprobuf/digmarkserver/digmark.proto

package digmarkserver

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 错误代码定义
type ErrorCode int32

const (
	ErrorCode_ErrorCodeOk         ErrorCode = 0 // 成功响应
	ErrorCode_ErrorCodeInternal   ErrorCode = 1 // 服务器内部错误
	ErrorCode_ErrorCodeReq        ErrorCode = 2 // 请求或请求参数为空
	ErrorCode_ErrorCodeBusinessID ErrorCode = 3 // 没传或者传错误的BusinessID
	ErrorCode_ErrorCodeMysql      ErrorCode = 4 // 数据库错误
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0: "ErrorCodeOk",
		1: "ErrorCodeInternal",
		2: "ErrorCodeReq",
		3: "ErrorCodeBusinessID",
		4: "ErrorCodeMysql",
	}
	ErrorCode_value = map[string]int32{
		"ErrorCodeOk":         0,
		"ErrorCodeInternal":   1,
		"ErrorCodeReq":        2,
		"ErrorCodeBusinessID": 3,
		"ErrorCodeMysql":      4,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_digmark_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_digmark_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_digmark_proto_rawDescGZIP(), []int{0}
}

// 公共接口请求
type DigMarkCommonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessID int32  `protobuf:"varint,1,opt,name=businessID,proto3" json:"businessID,omitempty"` // 业务Id
	ReqData    []byte `protobuf:"bytes,2,opt,name=reqData,proto3" json:"reqData,omitempty"`        // 具体数据
}

func (x *DigMarkCommonReq) Reset() {
	*x = DigMarkCommonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_digmark_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DigMarkCommonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigMarkCommonReq) ProtoMessage() {}

func (x *DigMarkCommonReq) ProtoReflect() protoreflect.Message {
	mi := &file_digmark_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigMarkCommonReq.ProtoReflect.Descriptor instead.
func (*DigMarkCommonReq) Descriptor() ([]byte, []int) {
	return file_digmark_proto_rawDescGZIP(), []int{0}
}

func (x *DigMarkCommonReq) GetBusinessID() int32 {
	if x != nil {
		return x.BusinessID
	}
	return 0
}

func (x *DigMarkCommonReq) GetReqData() []byte {
	if x != nil {
		return x.ReqData
	}
	return nil
}

// 公共接口响应
type DigMarkCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespData  string    `protobuf:"bytes,1,opt,name=respData,proto3" json:"respData,omitempty"`
	ErrorCode ErrorCode `protobuf:"varint,2,opt,name=errorCode,proto3,enum=digmarkserver.ErrorCode" json:"errorCode,omitempty"`
	ErrorMsg  string    `protobuf:"bytes,3,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *DigMarkCommonResp) Reset() {
	*x = DigMarkCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_digmark_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DigMarkCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigMarkCommonResp) ProtoMessage() {}

func (x *DigMarkCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_digmark_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigMarkCommonResp.ProtoReflect.Descriptor instead.
func (*DigMarkCommonResp) Descriptor() ([]byte, []int) {
	return file_digmark_proto_rawDescGZIP(), []int{1}
}

func (x *DigMarkCommonResp) GetRespData() string {
	if x != nil {
		return x.RespData
	}
	return ""
}

func (x *DigMarkCommonResp) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ErrorCodeOk
}

func (x *DigMarkCommonResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

var File_digmark_proto protoreflect.FileDescriptor

var file_digmark_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x64, 0x69, 0x67, 0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0d, 0x64, 0x69, 0x67, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x4c,
	0x0a, 0x10, 0x44, 0x69, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x71, 0x44, 0x61, 0x74, 0x61, 0x22, 0x83, 0x01, 0x0a,
	0x11, 0x44, 0x69, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36,
	0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x64, 0x69, 0x67, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x73, 0x67, 0x2a, 0x72, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x0f, 0x0a, 0x0b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x4f, 0x6b, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x44,
	0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x4d,
	0x79, 0x73, 0x71, 0x6c, 0x10, 0x04, 0x32, 0x66, 0x0a, 0x0e, 0x44, 0x69, 0x67, 0x4d, 0x61, 0x72,
	0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x69, 0x67, 0x4d,
	0x61, 0x72, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x64, 0x69, 0x67, 0x6d,
	0x61, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x67, 0x4d, 0x61, 0x72,
	0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x64, 0x69, 0x67,
	0x6d, 0x61, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x67, 0x4d, 0x61,
	0x72, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x1f,
	0x5a, 0x1d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x69, 0x67, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_digmark_proto_rawDescOnce sync.Once
	file_digmark_proto_rawDescData = file_digmark_proto_rawDesc
)

func file_digmark_proto_rawDescGZIP() []byte {
	file_digmark_proto_rawDescOnce.Do(func() {
		file_digmark_proto_rawDescData = protoimpl.X.CompressGZIP(file_digmark_proto_rawDescData)
	})
	return file_digmark_proto_rawDescData
}

var file_digmark_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_digmark_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_digmark_proto_goTypes = []interface{}{
	(ErrorCode)(0),            // 0: digmarkserver.ErrorCode
	(*DigMarkCommonReq)(nil),  // 1: digmarkserver.DigMarkCommonReq
	(*DigMarkCommonResp)(nil), // 2: digmarkserver.DigMarkCommonResp
}
var file_digmark_proto_depIdxs = []int32{
	0, // 0: digmarkserver.DigMarkCommonResp.errorCode:type_name -> digmarkserver.ErrorCode
	1, // 1: digmarkserver.DigMarkService.DigMarkCommon:input_type -> digmarkserver.DigMarkCommonReq
	2, // 2: digmarkserver.DigMarkService.DigMarkCommon:output_type -> digmarkserver.DigMarkCommonResp
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_digmark_proto_init() }
func file_digmark_proto_init() {
	if File_digmark_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_digmark_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DigMarkCommonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_digmark_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DigMarkCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_digmark_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_digmark_proto_goTypes,
		DependencyIndexes: file_digmark_proto_depIdxs,
		EnumInfos:         file_digmark_proto_enumTypes,
		MessageInfos:      file_digmark_proto_msgTypes,
	}.Build()
	File_digmark_proto = out.File
	file_digmark_proto_rawDesc = nil
	file_digmark_proto_goTypes = nil
	file_digmark_proto_depIdxs = nil
}
